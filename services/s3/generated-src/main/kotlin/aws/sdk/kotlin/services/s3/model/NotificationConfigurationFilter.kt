// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * Specifies object key name filtering rules. For information about key name filtering, see [Configuring Event Notifications](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the *Amazon S3 User Guide*.
 */
public class NotificationConfigurationFilter private constructor(builder: Builder) {
    /**
     * A container for object key name prefix and suffix filtering rules.
     */
    public val key: aws.sdk.kotlin.services.s3.model.S3KeyFilter? = builder.key

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.s3.model.NotificationConfigurationFilter = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("NotificationConfigurationFilter(")
        append("key=$key)")
    }

    override fun hashCode(): kotlin.Int {
        var result = key?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as NotificationConfigurationFilter

        if (key != other.key) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.s3.model.NotificationConfigurationFilter = Builder(this).apply(block).build()

    public class Builder {
        /**
         * A container for object key name prefix and suffix filtering rules.
         */
        public var key: aws.sdk.kotlin.services.s3.model.S3KeyFilter? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.s3.model.NotificationConfigurationFilter) : this() {
            this.key = x.key
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.s3.model.NotificationConfigurationFilter = NotificationConfigurationFilter(this)

        /**
         * construct an [aws.sdk.kotlin.services.s3.model.S3KeyFilter] inside the given [block]
         */
        public fun key(block: aws.sdk.kotlin.services.s3.model.S3KeyFilter.Builder.() -> kotlin.Unit) {
            this.key = aws.sdk.kotlin.services.s3.model.S3KeyFilter.invoke(block)
        }
    }
}
