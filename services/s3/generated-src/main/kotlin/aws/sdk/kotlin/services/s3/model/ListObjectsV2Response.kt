// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



public class ListObjectsV2Response private constructor(builder: Builder) {
    /**
     * All of the keys (up to 1,000) rolled up into a common prefix count as a single return when calculating the number of returns.
     *
     * A response can contain `CommonPrefixes` only if you specify a delimiter.
     *
     * `CommonPrefixes` contains all (if there are any) keys between `Prefix` and the next occurrence of the string specified by a delimiter.
     *
     * `CommonPrefixes` lists keys that act like subdirectories in the directory specified by `Prefix`.
     *
     * For example, if the prefix is `notes/` and the delimiter is a slash (`/`) as in `notes/summer/july`, the common prefix is `notes/summer/`. All of the keys that roll up into a common prefix count as a single return when calculating the number of returns.
     */
    public val commonPrefixes: List<CommonPrefix>? = builder.commonPrefixes
    /**
     * Metadata about each object returned.
     */
    public val contents: List<Object>? = builder.contents
    /**
     * If ContinuationToken was sent with the request, it is included in the response.
     */
    public val continuationToken: kotlin.String? = builder.continuationToken
    /**
     * Causes keys that contain the same string between the prefix and the first occurrence of the delimiter to be rolled up into a single result element in the CommonPrefixes collection. These rolled-up keys are not returned elsewhere in the response. Each rolled-up result counts as only one return against the `MaxKeys` value.
     */
    public val delimiter: kotlin.String? = builder.delimiter
    /**
     * Encoding type used by Amazon S3 to encode object key names in the XML response.
     *
     * If you specify the encoding-type request parameter, Amazon S3 includes this element in the response, and returns encoded key name values in the following response elements:
     *
     * `Delimiter, Prefix, Key,` and `StartAfter`.
     */
    public val encodingType: aws.sdk.kotlin.services.s3.model.EncodingType? = builder.encodingType
    /**
     * Set to false if all of the results were returned. Set to true if more keys are available to return. If the number of results exceeds that specified by MaxKeys, all of the results might not be returned.
     */
    public val isTruncated: kotlin.Boolean = builder.isTruncated
    /**
     * KeyCount is the number of keys returned with this request. KeyCount will always be less than or equals to MaxKeys field. Say you ask for 50 keys, your result will include less than equals 50 keys
     */
    public val keyCount: kotlin.Int = builder.keyCount
    /**
     * Sets the maximum number of keys returned in the response. By default the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more.
     */
    public val maxKeys: kotlin.Int = builder.maxKeys
    /**
     * The bucket name.
     *
     * When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form *AccessPointName*-*AccountId*.s3-accesspoint.*Region*.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see [Using access points](https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html) in the *Amazon S3 User Guide*.
     *
     * When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form ` <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com`. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see [Using Amazon S3 on Outposts](https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html) in the *Amazon S3 User Guide*.
     */
    public val name: kotlin.String? = builder.name
    /**
     * `NextContinuationToken` is sent when `isTruncated` is true, which means there are more keys in the bucket that can be listed. The next list requests to Amazon S3 can be continued with this `NextContinuationToken`. `NextContinuationToken` is obfuscated and is not a real key
     */
    public val nextContinuationToken: kotlin.String? = builder.nextContinuationToken
    /**
     * Keys that begin with the indicated prefix.
     */
    public val prefix: kotlin.String? = builder.prefix
    /**
     * If StartAfter was sent with the request, it is included in the response.
     */
    public val startAfter: kotlin.String? = builder.startAfter

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.s3.model.ListObjectsV2Response = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("ListObjectsV2Response(")
        append("commonPrefixes=$commonPrefixes,")
        append("contents=$contents,")
        append("continuationToken=$continuationToken,")
        append("delimiter=$delimiter,")
        append("encodingType=$encodingType,")
        append("isTruncated=$isTruncated,")
        append("keyCount=$keyCount,")
        append("maxKeys=$maxKeys,")
        append("name=$name,")
        append("nextContinuationToken=$nextContinuationToken,")
        append("prefix=$prefix,")
        append("startAfter=$startAfter)")
    }

    override fun hashCode(): kotlin.Int {
        var result = commonPrefixes?.hashCode() ?: 0
        result = 31 * result + (contents?.hashCode() ?: 0)
        result = 31 * result + (continuationToken?.hashCode() ?: 0)
        result = 31 * result + (delimiter?.hashCode() ?: 0)
        result = 31 * result + (encodingType?.hashCode() ?: 0)
        result = 31 * result + (isTruncated.hashCode())
        result = 31 * result + (keyCount)
        result = 31 * result + (maxKeys)
        result = 31 * result + (name?.hashCode() ?: 0)
        result = 31 * result + (nextContinuationToken?.hashCode() ?: 0)
        result = 31 * result + (prefix?.hashCode() ?: 0)
        result = 31 * result + (startAfter?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as ListObjectsV2Response

        if (commonPrefixes != other.commonPrefixes) return false
        if (contents != other.contents) return false
        if (continuationToken != other.continuationToken) return false
        if (delimiter != other.delimiter) return false
        if (encodingType != other.encodingType) return false
        if (isTruncated != other.isTruncated) return false
        if (keyCount != other.keyCount) return false
        if (maxKeys != other.maxKeys) return false
        if (name != other.name) return false
        if (nextContinuationToken != other.nextContinuationToken) return false
        if (prefix != other.prefix) return false
        if (startAfter != other.startAfter) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.s3.model.ListObjectsV2Response = Builder(this).apply(block).build()

    public class Builder {
        /**
         * All of the keys (up to 1,000) rolled up into a common prefix count as a single return when calculating the number of returns.
         *
         * A response can contain `CommonPrefixes` only if you specify a delimiter.
         *
         * `CommonPrefixes` contains all (if there are any) keys between `Prefix` and the next occurrence of the string specified by a delimiter.
         *
         * `CommonPrefixes` lists keys that act like subdirectories in the directory specified by `Prefix`.
         *
         * For example, if the prefix is `notes/` and the delimiter is a slash (`/`) as in `notes/summer/july`, the common prefix is `notes/summer/`. All of the keys that roll up into a common prefix count as a single return when calculating the number of returns.
         */
        public var commonPrefixes: List<CommonPrefix>? = null
        /**
         * Metadata about each object returned.
         */
        public var contents: List<Object>? = null
        /**
         * If ContinuationToken was sent with the request, it is included in the response.
         */
        public var continuationToken: kotlin.String? = null
        /**
         * Causes keys that contain the same string between the prefix and the first occurrence of the delimiter to be rolled up into a single result element in the CommonPrefixes collection. These rolled-up keys are not returned elsewhere in the response. Each rolled-up result counts as only one return against the `MaxKeys` value.
         */
        public var delimiter: kotlin.String? = null
        /**
         * Encoding type used by Amazon S3 to encode object key names in the XML response.
         *
         * If you specify the encoding-type request parameter, Amazon S3 includes this element in the response, and returns encoded key name values in the following response elements:
         *
         * `Delimiter, Prefix, Key,` and `StartAfter`.
         */
        public var encodingType: aws.sdk.kotlin.services.s3.model.EncodingType? = null
        /**
         * Set to false if all of the results were returned. Set to true if more keys are available to return. If the number of results exceeds that specified by MaxKeys, all of the results might not be returned.
         */
        public var isTruncated: kotlin.Boolean = false
        /**
         * KeyCount is the number of keys returned with this request. KeyCount will always be less than or equals to MaxKeys field. Say you ask for 50 keys, your result will include less than equals 50 keys
         */
        public var keyCount: kotlin.Int = 0
        /**
         * Sets the maximum number of keys returned in the response. By default the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more.
         */
        public var maxKeys: kotlin.Int = 0
        /**
         * The bucket name.
         *
         * When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form *AccessPointName*-*AccountId*.s3-accesspoint.*Region*.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see [Using access points](https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html) in the *Amazon S3 User Guide*.
         *
         * When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form ` <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com`. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see [Using Amazon S3 on Outposts](https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html) in the *Amazon S3 User Guide*.
         */
        public var name: kotlin.String? = null
        /**
         * `NextContinuationToken` is sent when `isTruncated` is true, which means there are more keys in the bucket that can be listed. The next list requests to Amazon S3 can be continued with this `NextContinuationToken`. `NextContinuationToken` is obfuscated and is not a real key
         */
        public var nextContinuationToken: kotlin.String? = null
        /**
         * Keys that begin with the indicated prefix.
         */
        public var prefix: kotlin.String? = null
        /**
         * If StartAfter was sent with the request, it is included in the response.
         */
        public var startAfter: kotlin.String? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.s3.model.ListObjectsV2Response) : this() {
            this.commonPrefixes = x.commonPrefixes
            this.contents = x.contents
            this.continuationToken = x.continuationToken
            this.delimiter = x.delimiter
            this.encodingType = x.encodingType
            this.isTruncated = x.isTruncated
            this.keyCount = x.keyCount
            this.maxKeys = x.maxKeys
            this.name = x.name
            this.nextContinuationToken = x.nextContinuationToken
            this.prefix = x.prefix
            this.startAfter = x.startAfter
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.s3.model.ListObjectsV2Response = ListObjectsV2Response(this)
    }
}
