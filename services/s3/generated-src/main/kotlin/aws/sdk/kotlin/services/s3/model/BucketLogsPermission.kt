// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model

import kotlin.collections.List

public sealed class BucketLogsPermission {

    public abstract val value: kotlin.String

    public object FullControl : aws.sdk.kotlin.services.s3.model.BucketLogsPermission() {
        override val value: kotlin.String = "FULL_CONTROL"
        override fun toString(): kotlin.String = value
    }

    public object Read : aws.sdk.kotlin.services.s3.model.BucketLogsPermission() {
        override val value: kotlin.String = "READ"
        override fun toString(): kotlin.String = value
    }

    public object Write : aws.sdk.kotlin.services.s3.model.BucketLogsPermission() {
        override val value: kotlin.String = "WRITE"
        override fun toString(): kotlin.String = value
    }

    public data class SdkUnknown(override val value: kotlin.String) : aws.sdk.kotlin.services.s3.model.BucketLogsPermission() {
        override fun toString(): kotlin.String = value
    }

    public companion object {
        /**
         * Convert a raw value to one of the sealed variants or [SdkUnknown]
         */
        public fun fromValue(str: kotlin.String): aws.sdk.kotlin.services.s3.model.BucketLogsPermission = when(str) {
            "FULL_CONTROL" -> FullControl
            "READ" -> Read
            "WRITE" -> Write
            else -> SdkUnknown(str)
        }

        /**
         * Get a list of all possible variants
         */
        public fun values(): kotlin.collections.List<aws.sdk.kotlin.services.s3.model.BucketLogsPermission> = listOf(
            FullControl,
            Read,
            Write
        )
    }
}
