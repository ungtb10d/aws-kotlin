// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.transform

import aws.sdk.kotlin.services.s3.model.InventoryConfiguration
import aws.sdk.kotlin.services.s3.model.InventoryIncludedObjectVersions
import aws.sdk.kotlin.services.s3.model.InventoryOptionalField
import aws.smithy.kotlin.runtime.serde.Deserializer
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct
import aws.smithy.kotlin.runtime.serde.xml.XmlCollectionName
import aws.smithy.kotlin.runtime.serde.xml.XmlDeserializer
import aws.smithy.kotlin.runtime.serde.xml.XmlNamespace
import aws.smithy.kotlin.runtime.serde.xml.XmlSerialName

internal fun deserializeInventoryConfigurationDocument(deserializer: Deserializer): InventoryConfiguration {
    val builder = InventoryConfiguration.Builder()
    val DESTINATION_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, XmlSerialName("Destination"))
    val FILTER_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, XmlSerialName("Filter"))
    val ID_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("Id"))
    val INCLUDEDOBJECTVERSIONS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("IncludedObjectVersions"))
    val ISENABLED_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Boolean, XmlSerialName("IsEnabled"))
    val OPTIONALFIELDS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, XmlSerialName("OptionalFields"), XmlCollectionName("Field"))
    val SCHEDULE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, XmlSerialName("Schedule"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(XmlSerialName("InventoryConfiguration"))
        trait(XmlNamespace("http://s3.amazonaws.com/doc/2006-03-01/"))
        field(DESTINATION_DESCRIPTOR)
        field(FILTER_DESCRIPTOR)
        field(ID_DESCRIPTOR)
        field(INCLUDEDOBJECTVERSIONS_DESCRIPTOR)
        field(ISENABLED_DESCRIPTOR)
        field(OPTIONALFIELDS_DESCRIPTOR)
        field(SCHEDULE_DESCRIPTOR)
    }

    deserializer.deserializeStruct(OBJ_DESCRIPTOR) {
        loop@while (true) {
            when (findNextFieldIndex()) {
                DESTINATION_DESCRIPTOR.index -> builder.destination = deserializeInventoryDestinationDocument(deserializer)
                FILTER_DESCRIPTOR.index -> builder.filter = deserializeInventoryFilterDocument(deserializer)
                ID_DESCRIPTOR.index -> builder.id = deserializeString()
                INCLUDEDOBJECTVERSIONS_DESCRIPTOR.index -> builder.includedObjectVersions = deserializeString().let { InventoryIncludedObjectVersions.fromValue(it) }
                ISENABLED_DESCRIPTOR.index -> builder.isEnabled = deserializeBoolean()
                OPTIONALFIELDS_DESCRIPTOR.index -> builder.optionalFields =
                    deserializer.deserializeList(OPTIONALFIELDS_DESCRIPTOR) {
                        val col0 = mutableListOf<InventoryOptionalField>()
                        while (hasNextElement()) {
                            val el0 = if (nextHasValue()) { deserializeString().let { InventoryOptionalField.fromValue(it) } } else { deserializeNull(); continue }
                            col0.add(el0)
                        }
                        col0
                    }
                SCHEDULE_DESCRIPTOR.index -> builder.schedule = deserializeInventoryScheduleDocument(deserializer)
                null -> break@loop
                else -> skipValue()
            }
        }
    }
    return builder.build()
}
