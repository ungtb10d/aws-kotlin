// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * A container for object key name prefix and suffix filtering rules.
 */
public class S3KeyFilter private constructor(builder: Builder) {
    /**
     * A list of containers for the key-value pair that defines the criteria for the filter rule.
     */
    public val filterRules: List<FilterRule>? = builder.filterRules

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.s3.model.S3KeyFilter = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("S3KeyFilter(")
        append("filterRules=$filterRules)")
    }

    override fun hashCode(): kotlin.Int {
        var result = filterRules?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as S3KeyFilter

        if (filterRules != other.filterRules) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.s3.model.S3KeyFilter = Builder(this).apply(block).build()

    public class Builder {
        /**
         * A list of containers for the key-value pair that defines the criteria for the filter rule.
         */
        public var filterRules: List<FilterRule>? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.s3.model.S3KeyFilter) : this() {
            this.filterRules = x.filterRules
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.s3.model.S3KeyFilter = S3KeyFilter(this)
    }
}
