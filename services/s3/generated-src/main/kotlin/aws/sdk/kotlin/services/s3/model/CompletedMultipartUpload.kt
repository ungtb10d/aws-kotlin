// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * The container for the completed multipart upload details.
 */
public class CompletedMultipartUpload private constructor(builder: Builder) {
    /**
     * Array of CompletedPart data types.
     *
     * If you do not supply a valid `Part` with your request, the service sends back an HTTP 400 response.
     */
    public val parts: List<CompletedPart>? = builder.parts

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.s3.model.CompletedMultipartUpload = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("CompletedMultipartUpload(")
        append("parts=$parts)")
    }

    override fun hashCode(): kotlin.Int {
        var result = parts?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as CompletedMultipartUpload

        if (parts != other.parts) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.s3.model.CompletedMultipartUpload = Builder(this).apply(block).build()

    public class Builder {
        /**
         * Array of CompletedPart data types.
         *
         * If you do not supply a valid `Part` with your request, the service sends back an HTTP 400 response.
         */
        public var parts: List<CompletedPart>? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.s3.model.CompletedMultipartUpload) : this() {
            this.parts = x.parts
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.s3.model.CompletedMultipartUpload = CompletedMultipartUpload(this)
    }
}
