// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.transform

import aws.sdk.kotlin.services.s3.model.CsvOutput
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.Serializer
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct
import aws.smithy.kotlin.runtime.serde.xml.XmlDeserializer
import aws.smithy.kotlin.runtime.serde.xml.XmlNamespace
import aws.smithy.kotlin.runtime.serde.xml.XmlSerialName

internal fun serializeCsvOutputDocument(serializer: Serializer, input: CsvOutput) {
    val FIELDDELIMITER_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("FieldDelimiter"))
    val QUOTECHARACTER_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("QuoteCharacter"))
    val QUOTEESCAPECHARACTER_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("QuoteEscapeCharacter"))
    val QUOTEFIELDS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("QuoteFields"))
    val RECORDDELIMITER_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("RecordDelimiter"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(XmlSerialName("CsvOutput"))
        trait(XmlNamespace("http://s3.amazonaws.com/doc/2006-03-01/"))
        field(FIELDDELIMITER_DESCRIPTOR)
        field(QUOTECHARACTER_DESCRIPTOR)
        field(QUOTEESCAPECHARACTER_DESCRIPTOR)
        field(QUOTEFIELDS_DESCRIPTOR)
        field(RECORDDELIMITER_DESCRIPTOR)
    }

    serializer.serializeStruct(OBJ_DESCRIPTOR) {
        input.fieldDelimiter?.let { field(FIELDDELIMITER_DESCRIPTOR, it) }
        input.quoteCharacter?.let { field(QUOTECHARACTER_DESCRIPTOR, it) }
        input.quoteEscapeCharacter?.let { field(QUOTEESCAPECHARACTER_DESCRIPTOR, it) }
        input.quoteFields?.let { field(QUOTEFIELDS_DESCRIPTOR, it.value) }
        input.recordDelimiter?.let { field(RECORDDELIMITER_DESCRIPTOR, it) }
    }
}
