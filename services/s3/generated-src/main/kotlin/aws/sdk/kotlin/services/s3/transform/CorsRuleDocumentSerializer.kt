// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.transform

import aws.sdk.kotlin.services.s3.model.CorsRule
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.Serializer
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct
import aws.smithy.kotlin.runtime.serde.xml.Flattened
import aws.smithy.kotlin.runtime.serde.xml.XmlDeserializer
import aws.smithy.kotlin.runtime.serde.xml.XmlNamespace
import aws.smithy.kotlin.runtime.serde.xml.XmlSerialName

internal fun serializeCorsRuleDocument(serializer: Serializer, input: CorsRule) {
    val ALLOWEDHEADERS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, XmlSerialName("AllowedHeader"), Flattened)
    val ALLOWEDMETHODS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, XmlSerialName("AllowedMethod"), Flattened)
    val ALLOWEDORIGINS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, XmlSerialName("AllowedOrigin"), Flattened)
    val EXPOSEHEADERS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, XmlSerialName("ExposeHeader"), Flattened)
    val ID_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("ID"))
    val MAXAGESECONDS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, XmlSerialName("MaxAgeSeconds"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(XmlSerialName("CorsRule"))
        trait(XmlNamespace("http://s3.amazonaws.com/doc/2006-03-01/"))
        field(ALLOWEDHEADERS_DESCRIPTOR)
        field(ALLOWEDMETHODS_DESCRIPTOR)
        field(ALLOWEDORIGINS_DESCRIPTOR)
        field(EXPOSEHEADERS_DESCRIPTOR)
        field(ID_DESCRIPTOR)
        field(MAXAGESECONDS_DESCRIPTOR)
    }

    serializer.serializeStruct(OBJ_DESCRIPTOR) {
        if (input.allowedHeaders != null) {
            listField(ALLOWEDHEADERS_DESCRIPTOR) {
                for (el0 in input.allowedHeaders) {
                    serializeString(el0)
                }
            }
        }
        if (input.allowedMethods != null) {
            listField(ALLOWEDMETHODS_DESCRIPTOR) {
                for (el0 in input.allowedMethods) {
                    serializeString(el0)
                }
            }
        }
        if (input.allowedOrigins != null) {
            listField(ALLOWEDORIGINS_DESCRIPTOR) {
                for (el0 in input.allowedOrigins) {
                    serializeString(el0)
                }
            }
        }
        if (input.exposeHeaders != null) {
            listField(EXPOSEHEADERS_DESCRIPTOR) {
                for (el0 in input.exposeHeaders) {
                    serializeString(el0)
                }
            }
        }
        input.id?.let { field(ID_DESCRIPTOR, it) }
        if (input.maxAgeSeconds != 0) field(MAXAGESECONDS_DESCRIPTOR, input.maxAgeSeconds)
    }
}
