// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.transform

import aws.sdk.kotlin.services.s3.model.PublicAccessBlockConfiguration
import aws.smithy.kotlin.runtime.serde.Deserializer
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct
import aws.smithy.kotlin.runtime.serde.xml.XmlDeserializer
import aws.smithy.kotlin.runtime.serde.xml.XmlNamespace
import aws.smithy.kotlin.runtime.serde.xml.XmlSerialName

internal fun deserializePublicAccessBlockConfigurationDocument(deserializer: Deserializer): PublicAccessBlockConfiguration {
    val builder = PublicAccessBlockConfiguration.Builder()
    val BLOCKPUBLICACLS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Boolean, XmlSerialName("BlockPublicAcls"))
    val BLOCKPUBLICPOLICY_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Boolean, XmlSerialName("BlockPublicPolicy"))
    val IGNOREPUBLICACLS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Boolean, XmlSerialName("IgnorePublicAcls"))
    val RESTRICTPUBLICBUCKETS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Boolean, XmlSerialName("RestrictPublicBuckets"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(XmlSerialName("PublicAccessBlockConfiguration"))
        trait(XmlNamespace("http://s3.amazonaws.com/doc/2006-03-01/"))
        field(BLOCKPUBLICACLS_DESCRIPTOR)
        field(BLOCKPUBLICPOLICY_DESCRIPTOR)
        field(IGNOREPUBLICACLS_DESCRIPTOR)
        field(RESTRICTPUBLICBUCKETS_DESCRIPTOR)
    }

    deserializer.deserializeStruct(OBJ_DESCRIPTOR) {
        loop@while (true) {
            when (findNextFieldIndex()) {
                BLOCKPUBLICACLS_DESCRIPTOR.index -> builder.blockPublicAcls = deserializeBoolean()
                BLOCKPUBLICPOLICY_DESCRIPTOR.index -> builder.blockPublicPolicy = deserializeBoolean()
                IGNOREPUBLICACLS_DESCRIPTOR.index -> builder.ignorePublicAcls = deserializeBoolean()
                RESTRICTPUBLICBUCKETS_DESCRIPTOR.index -> builder.restrictPublicBuckets = deserializeBoolean()
                null -> break@loop
                else -> skipValue()
            }
        }
    }
    return builder.build()
}
