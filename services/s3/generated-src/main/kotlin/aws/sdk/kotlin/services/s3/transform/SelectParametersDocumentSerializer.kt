// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.transform

import aws.sdk.kotlin.services.s3.model.SelectParameters
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.Serializer
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct
import aws.smithy.kotlin.runtime.serde.xml.XmlDeserializer
import aws.smithy.kotlin.runtime.serde.xml.XmlNamespace
import aws.smithy.kotlin.runtime.serde.xml.XmlSerialName

internal fun serializeSelectParametersDocument(serializer: Serializer, input: SelectParameters) {
    val EXPRESSION_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("Expression"))
    val EXPRESSIONTYPE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("ExpressionType"))
    val INPUTSERIALIZATION_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, XmlSerialName("InputSerialization"))
    val OUTPUTSERIALIZATION_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, XmlSerialName("OutputSerialization"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(XmlSerialName("SelectParameters"))
        trait(XmlNamespace("http://s3.amazonaws.com/doc/2006-03-01/"))
        field(EXPRESSION_DESCRIPTOR)
        field(EXPRESSIONTYPE_DESCRIPTOR)
        field(INPUTSERIALIZATION_DESCRIPTOR)
        field(OUTPUTSERIALIZATION_DESCRIPTOR)
    }

    serializer.serializeStruct(OBJ_DESCRIPTOR) {
        input.expression?.let { field(EXPRESSION_DESCRIPTOR, it) }
        input.expressionType?.let { field(EXPRESSIONTYPE_DESCRIPTOR, it.value) }
        input.inputSerialization?.let { field(INPUTSERIALIZATION_DESCRIPTOR, it, ::serializeInputSerializationDocument) }
        input.outputSerialization?.let { field(OUTPUTSERIALIZATION_DESCRIPTOR, it, ::serializeOutputSerializationDocument) }
    }
}
