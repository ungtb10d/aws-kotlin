// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model

import kotlin.collections.List

public sealed class InventoryFrequency {

    public abstract val value: kotlin.String

    public object Daily : aws.sdk.kotlin.services.s3.model.InventoryFrequency() {
        override val value: kotlin.String = "Daily"
        override fun toString(): kotlin.String = value
    }

    public object Weekly : aws.sdk.kotlin.services.s3.model.InventoryFrequency() {
        override val value: kotlin.String = "Weekly"
        override fun toString(): kotlin.String = value
    }

    public data class SdkUnknown(override val value: kotlin.String) : aws.sdk.kotlin.services.s3.model.InventoryFrequency() {
        override fun toString(): kotlin.String = value
    }

    public companion object {
        /**
         * Convert a raw value to one of the sealed variants or [SdkUnknown]
         */
        public fun fromValue(str: kotlin.String): aws.sdk.kotlin.services.s3.model.InventoryFrequency = when(str) {
            "Daily" -> Daily
            "Weekly" -> Weekly
            else -> SdkUnknown(str)
        }

        /**
         * Get a list of all possible variants
         */
        public fun values(): kotlin.collections.List<aws.sdk.kotlin.services.s3.model.InventoryFrequency> = listOf(
            Daily,
            Weekly
        )
    }
}
