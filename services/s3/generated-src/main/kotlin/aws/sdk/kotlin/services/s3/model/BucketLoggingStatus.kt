// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * Container for logging status information.
 */
public class BucketLoggingStatus private constructor(builder: Builder) {
    /**
     * Describes where logs are stored and the prefix that Amazon S3 assigns to all log object keys for a bucket. For more information, see [PUT Bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlogging.html) in the *Amazon S3 API Reference*.
     */
    public val loggingEnabled: aws.sdk.kotlin.services.s3.model.LoggingEnabled? = builder.loggingEnabled

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.s3.model.BucketLoggingStatus = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("BucketLoggingStatus(")
        append("loggingEnabled=$loggingEnabled)")
    }

    override fun hashCode(): kotlin.Int {
        var result = loggingEnabled?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as BucketLoggingStatus

        if (loggingEnabled != other.loggingEnabled) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.s3.model.BucketLoggingStatus = Builder(this).apply(block).build()

    public class Builder {
        /**
         * Describes where logs are stored and the prefix that Amazon S3 assigns to all log object keys for a bucket. For more information, see [PUT Bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlogging.html) in the *Amazon S3 API Reference*.
         */
        public var loggingEnabled: aws.sdk.kotlin.services.s3.model.LoggingEnabled? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.s3.model.BucketLoggingStatus) : this() {
            this.loggingEnabled = x.loggingEnabled
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.s3.model.BucketLoggingStatus = BucketLoggingStatus(this)

        /**
         * construct an [aws.sdk.kotlin.services.s3.model.LoggingEnabled] inside the given [block]
         */
        public fun loggingEnabled(block: aws.sdk.kotlin.services.s3.model.LoggingEnabled.Builder.() -> kotlin.Unit) {
            this.loggingEnabled = aws.sdk.kotlin.services.s3.model.LoggingEnabled.invoke(block)
        }
    }
}
