// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.transform

import aws.sdk.kotlin.services.s3.model.ChecksumAlgorithm
import aws.sdk.kotlin.services.s3.model.MultipartUpload
import aws.sdk.kotlin.services.s3.model.StorageClass
import aws.smithy.kotlin.runtime.serde.Deserializer
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct
import aws.smithy.kotlin.runtime.serde.xml.XmlDeserializer
import aws.smithy.kotlin.runtime.serde.xml.XmlNamespace
import aws.smithy.kotlin.runtime.serde.xml.XmlSerialName
import aws.smithy.kotlin.runtime.time.Instant

internal fun deserializeMultipartUploadDocument(deserializer: Deserializer): MultipartUpload {
    val builder = MultipartUpload.Builder()
    val CHECKSUMALGORITHM_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("ChecksumAlgorithm"))
    val INITIATED_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Timestamp, XmlSerialName("Initiated"))
    val INITIATOR_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, XmlSerialName("Initiator"))
    val KEY_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("Key"))
    val OWNER_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, XmlSerialName("Owner"))
    val STORAGECLASS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("StorageClass"))
    val UPLOADID_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("UploadId"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(XmlSerialName("MultipartUpload"))
        trait(XmlNamespace("http://s3.amazonaws.com/doc/2006-03-01/"))
        field(CHECKSUMALGORITHM_DESCRIPTOR)
        field(INITIATED_DESCRIPTOR)
        field(INITIATOR_DESCRIPTOR)
        field(KEY_DESCRIPTOR)
        field(OWNER_DESCRIPTOR)
        field(STORAGECLASS_DESCRIPTOR)
        field(UPLOADID_DESCRIPTOR)
    }

    deserializer.deserializeStruct(OBJ_DESCRIPTOR) {
        loop@while (true) {
            when (findNextFieldIndex()) {
                CHECKSUMALGORITHM_DESCRIPTOR.index -> builder.checksumAlgorithm = deserializeString().let { ChecksumAlgorithm.fromValue(it) }
                INITIATED_DESCRIPTOR.index -> builder.initiated = deserializeString().let { Instant.fromIso8601(it) }
                INITIATOR_DESCRIPTOR.index -> builder.initiator = deserializeInitiatorDocument(deserializer)
                KEY_DESCRIPTOR.index -> builder.key = deserializeString()
                OWNER_DESCRIPTOR.index -> builder.owner = deserializeOwnerDocument(deserializer)
                STORAGECLASS_DESCRIPTOR.index -> builder.storageClass = deserializeString().let { StorageClass.fromValue(it) }
                UPLOADID_DESCRIPTOR.index -> builder.uploadId = deserializeString()
                null -> break@loop
                else -> skipValue()
            }
        }
    }
    return builder.build()
}
