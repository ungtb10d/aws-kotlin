// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.transform

import aws.sdk.kotlin.services.s3.model.Destination
import aws.sdk.kotlin.services.s3.model.StorageClass
import aws.smithy.kotlin.runtime.serde.Deserializer
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct
import aws.smithy.kotlin.runtime.serde.xml.XmlDeserializer
import aws.smithy.kotlin.runtime.serde.xml.XmlNamespace
import aws.smithy.kotlin.runtime.serde.xml.XmlSerialName

internal fun deserializeDestinationDocument(deserializer: Deserializer): Destination {
    val builder = Destination.Builder()
    val ACCESSCONTROLTRANSLATION_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, XmlSerialName("AccessControlTranslation"))
    val ACCOUNT_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("Account"))
    val BUCKET_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("Bucket"))
    val ENCRYPTIONCONFIGURATION_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, XmlSerialName("EncryptionConfiguration"))
    val METRICS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, XmlSerialName("Metrics"))
    val REPLICATIONTIME_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, XmlSerialName("ReplicationTime"))
    val STORAGECLASS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("StorageClass"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(XmlSerialName("Destination"))
        trait(XmlNamespace("http://s3.amazonaws.com/doc/2006-03-01/"))
        field(ACCESSCONTROLTRANSLATION_DESCRIPTOR)
        field(ACCOUNT_DESCRIPTOR)
        field(BUCKET_DESCRIPTOR)
        field(ENCRYPTIONCONFIGURATION_DESCRIPTOR)
        field(METRICS_DESCRIPTOR)
        field(REPLICATIONTIME_DESCRIPTOR)
        field(STORAGECLASS_DESCRIPTOR)
    }

    deserializer.deserializeStruct(OBJ_DESCRIPTOR) {
        loop@while (true) {
            when (findNextFieldIndex()) {
                ACCESSCONTROLTRANSLATION_DESCRIPTOR.index -> builder.accessControlTranslation = deserializeAccessControlTranslationDocument(deserializer)
                ACCOUNT_DESCRIPTOR.index -> builder.account = deserializeString()
                BUCKET_DESCRIPTOR.index -> builder.bucket = deserializeString()
                ENCRYPTIONCONFIGURATION_DESCRIPTOR.index -> builder.encryptionConfiguration = deserializeEncryptionConfigurationDocument(deserializer)
                METRICS_DESCRIPTOR.index -> builder.metrics = deserializeMetricsDocument(deserializer)
                REPLICATIONTIME_DESCRIPTOR.index -> builder.replicationTime = deserializeReplicationTimeDocument(deserializer)
                STORAGECLASS_DESCRIPTOR.index -> builder.storageClass = deserializeString().let { StorageClass.fromValue(it) }
                null -> break@loop
                else -> skipValue()
            }
        }
    }
    return builder.build()
}
