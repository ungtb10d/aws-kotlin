// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * This data type contains information about the progress event of an operation.
 */
public class ProgressEvent private constructor(builder: Builder) {
    /**
     * The Progress event details.
     */
    public val details: aws.sdk.kotlin.services.s3.model.Progress? = builder.details

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.s3.model.ProgressEvent = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("ProgressEvent(")
        append("details=$details)")
    }

    override fun hashCode(): kotlin.Int {
        var result = details?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as ProgressEvent

        if (details != other.details) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.s3.model.ProgressEvent = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The Progress event details.
         */
        public var details: aws.sdk.kotlin.services.s3.model.Progress? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.s3.model.ProgressEvent) : this() {
            this.details = x.details
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.s3.model.ProgressEvent = ProgressEvent(this)

        /**
         * construct an [aws.sdk.kotlin.services.s3.model.Progress] inside the given [block]
         */
        public fun details(block: aws.sdk.kotlin.services.s3.model.Progress.Builder.() -> kotlin.Unit) {
            this.details = aws.sdk.kotlin.services.s3.model.Progress.invoke(block)
        }
    }
}
