// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.transform

import aws.sdk.kotlin.services.s3.model.InventoryConfiguration
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct
import aws.smithy.kotlin.runtime.serde.xml.XmlCollectionName
import aws.smithy.kotlin.runtime.serde.xml.XmlDeserializer
import aws.smithy.kotlin.runtime.serde.xml.XmlNamespace
import aws.smithy.kotlin.runtime.serde.xml.XmlSerialName
import aws.smithy.kotlin.runtime.serde.xml.XmlSerializer

/**
 * Payload serializer for InventoryConfiguration with a different XML name trait (InventoryConfiguration)
 */
internal fun serializeInventoryConfigurationPayloadWithXmlNameInventoryConfiguration(input: InventoryConfiguration): ByteArray {
    val serializer = XmlSerializer()
    val DESTINATION_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, XmlSerialName("Destination"))
    val FILTER_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, XmlSerialName("Filter"))
    val ID_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("Id"))
    val INCLUDEDOBJECTVERSIONS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("IncludedObjectVersions"))
    val ISENABLED_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Boolean, XmlSerialName("IsEnabled"))
    val OPTIONALFIELDS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, XmlSerialName("OptionalFields"), XmlCollectionName("Field"))
    val SCHEDULE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, XmlSerialName("Schedule"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(XmlSerialName("InventoryConfiguration"))
        trait(XmlNamespace("http://s3.amazonaws.com/doc/2006-03-01/"))
        field(DESTINATION_DESCRIPTOR)
        field(FILTER_DESCRIPTOR)
        field(ID_DESCRIPTOR)
        field(INCLUDEDOBJECTVERSIONS_DESCRIPTOR)
        field(ISENABLED_DESCRIPTOR)
        field(OPTIONALFIELDS_DESCRIPTOR)
        field(SCHEDULE_DESCRIPTOR)
    }

    serializer.serializeStruct(OBJ_DESCRIPTOR) {
        input.destination?.let { field(DESTINATION_DESCRIPTOR, it, ::serializeInventoryDestinationDocument) }
        input.filter?.let { field(FILTER_DESCRIPTOR, it, ::serializeInventoryFilterDocument) }
        input.id?.let { field(ID_DESCRIPTOR, it) }
        input.includedObjectVersions?.let { field(INCLUDEDOBJECTVERSIONS_DESCRIPTOR, it.value) }
        field(ISENABLED_DESCRIPTOR, input.isEnabled)
        if (input.optionalFields != null) {
            listField(OPTIONALFIELDS_DESCRIPTOR) {
                for (el0 in input.optionalFields) {
                    serializeString(el0.value)
                }
            }
        }
        input.schedule?.let { field(SCHEDULE_DESCRIPTOR, it, ::serializeInventoryScheduleDocument) }
    }
    return serializer.toByteArray()
}
