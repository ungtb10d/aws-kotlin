// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.transform

import aws.sdk.kotlin.services.dynamodb.model.BillingMode
import aws.sdk.kotlin.services.dynamodb.model.GlobalSecondaryIndex
import aws.sdk.kotlin.services.dynamodb.model.LocalSecondaryIndex
import aws.sdk.kotlin.services.dynamodb.model.ProvisionedThroughput
import aws.sdk.kotlin.services.dynamodb.model.RestoreTableToPointInTimeRequest
import aws.sdk.kotlin.services.dynamodb.model.SseSpecification
import aws.smithy.kotlin.runtime.client.ExecutionContext
import aws.smithy.kotlin.runtime.http.HttpBody
import aws.smithy.kotlin.runtime.http.HttpMethod
import aws.smithy.kotlin.runtime.http.content.ByteArrayContent
import aws.smithy.kotlin.runtime.http.operation.HttpSerialize
import aws.smithy.kotlin.runtime.http.request.HttpRequestBuilder
import aws.smithy.kotlin.runtime.http.request.url
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.json.JsonDeserializer
import aws.smithy.kotlin.runtime.serde.json.JsonSerialName
import aws.smithy.kotlin.runtime.serde.json.JsonSerializer
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct
import aws.smithy.kotlin.runtime.time.Instant
import aws.smithy.kotlin.runtime.time.TimestampFormat


internal class RestoreTableToPointInTimeOperationSerializer: HttpSerialize<RestoreTableToPointInTimeRequest> {
    override suspend fun serialize(context: ExecutionContext, input: RestoreTableToPointInTimeRequest): HttpRequestBuilder {
        val builder = HttpRequestBuilder()
        builder.method = HttpMethod.POST

        builder.url {
            path = "/"
        }

        val payload = serializeRestoreTableToPointInTimeOperationBody(context, input)
        builder.body = ByteArrayContent(payload)
        if (builder.body !is HttpBody.Empty) {
            builder.headers.setMissing("Content-Type", "application/x-amz-json-1.0")
        }
        return builder
    }
}

private fun serializeRestoreTableToPointInTimeOperationBody(context: ExecutionContext, input: RestoreTableToPointInTimeRequest): ByteArray {
    val serializer = JsonSerializer()
    val BILLINGMODEOVERRIDE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("BillingModeOverride"))
    val GLOBALSECONDARYINDEXOVERRIDE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, JsonSerialName("GlobalSecondaryIndexOverride"))
    val LOCALSECONDARYINDEXOVERRIDE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, JsonSerialName("LocalSecondaryIndexOverride"))
    val PROVISIONEDTHROUGHPUTOVERRIDE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, JsonSerialName("ProvisionedThroughputOverride"))
    val RESTOREDATETIME_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Timestamp, JsonSerialName("RestoreDateTime"))
    val SSESPECIFICATIONOVERRIDE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, JsonSerialName("SSESpecificationOverride"))
    val SOURCETABLEARN_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("SourceTableArn"))
    val SOURCETABLENAME_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("SourceTableName"))
    val TARGETTABLENAME_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("TargetTableName"))
    val USELATESTRESTORABLETIME_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Boolean, JsonSerialName("UseLatestRestorableTime"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        field(BILLINGMODEOVERRIDE_DESCRIPTOR)
        field(GLOBALSECONDARYINDEXOVERRIDE_DESCRIPTOR)
        field(LOCALSECONDARYINDEXOVERRIDE_DESCRIPTOR)
        field(PROVISIONEDTHROUGHPUTOVERRIDE_DESCRIPTOR)
        field(RESTOREDATETIME_DESCRIPTOR)
        field(SSESPECIFICATIONOVERRIDE_DESCRIPTOR)
        field(SOURCETABLEARN_DESCRIPTOR)
        field(SOURCETABLENAME_DESCRIPTOR)
        field(TARGETTABLENAME_DESCRIPTOR)
        field(USELATESTRESTORABLETIME_DESCRIPTOR)
    }

    serializer.serializeStruct(OBJ_DESCRIPTOR) {
        input.billingModeOverride?.let { field(BILLINGMODEOVERRIDE_DESCRIPTOR, it.value) }
        if (input.globalSecondaryIndexOverride != null) {
            listField(GLOBALSECONDARYINDEXOVERRIDE_DESCRIPTOR) {
                for (el0 in input.globalSecondaryIndexOverride) {
                    serializeSdkSerializable(asSdkSerializable(el0, ::serializeGlobalSecondaryIndexDocument))
                }
            }
        }
        if (input.localSecondaryIndexOverride != null) {
            listField(LOCALSECONDARYINDEXOVERRIDE_DESCRIPTOR) {
                for (el0 in input.localSecondaryIndexOverride) {
                    serializeSdkSerializable(asSdkSerializable(el0, ::serializeLocalSecondaryIndexDocument))
                }
            }
        }
        input.provisionedThroughputOverride?.let { field(PROVISIONEDTHROUGHPUTOVERRIDE_DESCRIPTOR, it, ::serializeProvisionedThroughputDocument) }
        input.restoreDateTime?.let { field(RESTOREDATETIME_DESCRIPTOR, it, TimestampFormat.EPOCH_SECONDS) }
        input.sseSpecificationOverride?.let { field(SSESPECIFICATIONOVERRIDE_DESCRIPTOR, it, ::serializeSseSpecificationDocument) }
        input.sourceTableArn?.let { field(SOURCETABLEARN_DESCRIPTOR, it) }
        input.sourceTableName?.let { field(SOURCETABLENAME_DESCRIPTOR, it) }
        input.targetTableName?.let { field(TARGETTABLENAME_DESCRIPTOR, it) }
        input.useLatestRestorableTime?.let { field(USELATESTRESTORABLETIME_DESCRIPTOR, it) }
    }
    return serializer.toByteArray()
}
