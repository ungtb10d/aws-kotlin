// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model

import kotlin.collections.List

public sealed class ComparisonOperator {

    public abstract val value: kotlin.String

    public object BeginsWith : aws.sdk.kotlin.services.dynamodb.model.ComparisonOperator() {
        override val value: kotlin.String = "BEGINS_WITH"
        override fun toString(): kotlin.String = value
    }

    public object Between : aws.sdk.kotlin.services.dynamodb.model.ComparisonOperator() {
        override val value: kotlin.String = "BETWEEN"
        override fun toString(): kotlin.String = value
    }

    public object Contains : aws.sdk.kotlin.services.dynamodb.model.ComparisonOperator() {
        override val value: kotlin.String = "CONTAINS"
        override fun toString(): kotlin.String = value
    }

    public object Eq : aws.sdk.kotlin.services.dynamodb.model.ComparisonOperator() {
        override val value: kotlin.String = "EQ"
        override fun toString(): kotlin.String = value
    }

    public object Ge : aws.sdk.kotlin.services.dynamodb.model.ComparisonOperator() {
        override val value: kotlin.String = "GE"
        override fun toString(): kotlin.String = value
    }

    public object Gt : aws.sdk.kotlin.services.dynamodb.model.ComparisonOperator() {
        override val value: kotlin.String = "GT"
        override fun toString(): kotlin.String = value
    }

    public object In : aws.sdk.kotlin.services.dynamodb.model.ComparisonOperator() {
        override val value: kotlin.String = "IN"
        override fun toString(): kotlin.String = value
    }

    public object Le : aws.sdk.kotlin.services.dynamodb.model.ComparisonOperator() {
        override val value: kotlin.String = "LE"
        override fun toString(): kotlin.String = value
    }

    public object Lt : aws.sdk.kotlin.services.dynamodb.model.ComparisonOperator() {
        override val value: kotlin.String = "LT"
        override fun toString(): kotlin.String = value
    }

    public object Ne : aws.sdk.kotlin.services.dynamodb.model.ComparisonOperator() {
        override val value: kotlin.String = "NE"
        override fun toString(): kotlin.String = value
    }

    public object NotContains : aws.sdk.kotlin.services.dynamodb.model.ComparisonOperator() {
        override val value: kotlin.String = "NOT_CONTAINS"
        override fun toString(): kotlin.String = value
    }

    public object NotNull : aws.sdk.kotlin.services.dynamodb.model.ComparisonOperator() {
        override val value: kotlin.String = "NOT_NULL"
        override fun toString(): kotlin.String = value
    }

    public object Null : aws.sdk.kotlin.services.dynamodb.model.ComparisonOperator() {
        override val value: kotlin.String = "NULL"
        override fun toString(): kotlin.String = value
    }

    public data class SdkUnknown(override val value: kotlin.String) : aws.sdk.kotlin.services.dynamodb.model.ComparisonOperator() {
        override fun toString(): kotlin.String = value
    }

    public companion object {
        /**
         * Convert a raw value to one of the sealed variants or [SdkUnknown]
         */
        public fun fromValue(str: kotlin.String): aws.sdk.kotlin.services.dynamodb.model.ComparisonOperator = when(str) {
            "BEGINS_WITH" -> BeginsWith
            "BETWEEN" -> Between
            "CONTAINS" -> Contains
            "EQ" -> Eq
            "GE" -> Ge
            "GT" -> Gt
            "IN" -> In
            "LE" -> Le
            "LT" -> Lt
            "NE" -> Ne
            "NOT_CONTAINS" -> NotContains
            "NOT_NULL" -> NotNull
            "NULL" -> Null
            else -> SdkUnknown(str)
        }

        /**
         * Get a list of all possible variants
         */
        public fun values(): kotlin.collections.List<aws.sdk.kotlin.services.dynamodb.model.ComparisonOperator> = listOf(
            BeginsWith,
            Between,
            Contains,
            Eq,
            Ge,
            Gt,
            In,
            Le,
            Lt,
            Ne,
            NotContains,
            NotNull,
            Null
        )
    }
}
