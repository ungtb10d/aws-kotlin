// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.transform

import aws.sdk.kotlin.services.dynamodb.model.BatchStatementRequest
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.Serializer
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.json.JsonDeserializer
import aws.smithy.kotlin.runtime.serde.json.JsonSerialName
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct

internal fun serializeBatchStatementRequestDocument(serializer: Serializer, input: BatchStatementRequest) {
    val CONSISTENTREAD_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Boolean, JsonSerialName("ConsistentRead"))
    val PARAMETERS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, JsonSerialName("Parameters"))
    val STATEMENT_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("Statement"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        field(CONSISTENTREAD_DESCRIPTOR)
        field(PARAMETERS_DESCRIPTOR)
        field(STATEMENT_DESCRIPTOR)
    }

    serializer.serializeStruct(OBJ_DESCRIPTOR) {
        input.statement?.let { field(STATEMENT_DESCRIPTOR, it) }
        if (input.parameters != null) {
            listField(PARAMETERS_DESCRIPTOR) {
                for (el0 in input.parameters) {
                    serializeSdkSerializable(asSdkSerializable(el0, ::serializeAttributeValueDocument))
                }
            }
        }
        input.consistentRead?.let { field(CONSISTENTREAD_DESCRIPTOR, it) }
    }
}
