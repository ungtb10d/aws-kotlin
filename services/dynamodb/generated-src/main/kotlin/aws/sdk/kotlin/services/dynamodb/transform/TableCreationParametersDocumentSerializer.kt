// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.transform

import aws.sdk.kotlin.services.dynamodb.model.TableCreationParameters
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.Serializer
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.json.JsonDeserializer
import aws.smithy.kotlin.runtime.serde.json.JsonSerialName
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct

internal fun serializeTableCreationParametersDocument(serializer: Serializer, input: TableCreationParameters) {
    val ATTRIBUTEDEFINITIONS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, JsonSerialName("AttributeDefinitions"))
    val BILLINGMODE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("BillingMode"))
    val GLOBALSECONDARYINDEXES_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, JsonSerialName("GlobalSecondaryIndexes"))
    val KEYSCHEMA_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, JsonSerialName("KeySchema"))
    val PROVISIONEDTHROUGHPUT_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, JsonSerialName("ProvisionedThroughput"))
    val SSESPECIFICATION_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, JsonSerialName("SSESpecification"))
    val TABLENAME_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("TableName"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        field(ATTRIBUTEDEFINITIONS_DESCRIPTOR)
        field(BILLINGMODE_DESCRIPTOR)
        field(GLOBALSECONDARYINDEXES_DESCRIPTOR)
        field(KEYSCHEMA_DESCRIPTOR)
        field(PROVISIONEDTHROUGHPUT_DESCRIPTOR)
        field(SSESPECIFICATION_DESCRIPTOR)
        field(TABLENAME_DESCRIPTOR)
    }

    serializer.serializeStruct(OBJ_DESCRIPTOR) {
        input.tableName?.let { field(TABLENAME_DESCRIPTOR, it) }
        if (input.attributeDefinitions != null) {
            listField(ATTRIBUTEDEFINITIONS_DESCRIPTOR) {
                for (el0 in input.attributeDefinitions) {
                    serializeSdkSerializable(asSdkSerializable(el0, ::serializeAttributeDefinitionDocument))
                }
            }
        }
        if (input.keySchema != null) {
            listField(KEYSCHEMA_DESCRIPTOR) {
                for (el0 in input.keySchema) {
                    serializeSdkSerializable(asSdkSerializable(el0, ::serializeKeySchemaElementDocument))
                }
            }
        }
        input.billingMode?.let { field(BILLINGMODE_DESCRIPTOR, it.value) }
        input.provisionedThroughput?.let { field(PROVISIONEDTHROUGHPUT_DESCRIPTOR, it, ::serializeProvisionedThroughputDocument) }
        input.sseSpecification?.let { field(SSESPECIFICATION_DESCRIPTOR, it, ::serializeSseSpecificationDocument) }
        if (input.globalSecondaryIndexes != null) {
            listField(GLOBALSECONDARYINDEXES_DESCRIPTOR) {
                for (el0 in input.globalSecondaryIndexes) {
                    serializeSdkSerializable(asSdkSerializable(el0, ::serializeGlobalSecondaryIndexDocument))
                }
            }
        }
    }
}
