// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



public class ExecuteTransactionRequest private constructor(builder: Builder) {
    /**
     * Set this value to get remaining results, if `NextToken` was returned in the statement response.
     */
    public val clientRequestToken: kotlin.String? = builder.clientRequestToken
    /**
     * Determines the level of detail about either provisioned or on-demand throughput consumption that is returned in the response. For more information, see [TransactGetItems](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_TransactGetItems.html) and [TransactWriteItems](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_TransactWriteItems.html).
     */
    public val returnConsumedCapacity: aws.sdk.kotlin.services.dynamodb.model.ReturnConsumedCapacity? = builder.returnConsumedCapacity
    /**
     * The list of PartiQL statements representing the transaction to run.
     */
    public val transactStatements: List<ParameterizedStatement>? = builder.transactStatements

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.dynamodb.model.ExecuteTransactionRequest = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("ExecuteTransactionRequest(")
        append("clientRequestToken=$clientRequestToken,")
        append("returnConsumedCapacity=$returnConsumedCapacity,")
        append("transactStatements=$transactStatements)")
    }

    override fun hashCode(): kotlin.Int {
        var result = clientRequestToken?.hashCode() ?: 0
        result = 31 * result + (returnConsumedCapacity?.hashCode() ?: 0)
        result = 31 * result + (transactStatements?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as ExecuteTransactionRequest

        if (clientRequestToken != other.clientRequestToken) return false
        if (returnConsumedCapacity != other.returnConsumedCapacity) return false
        if (transactStatements != other.transactStatements) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.dynamodb.model.ExecuteTransactionRequest = Builder(this).apply(block).build()

    public class Builder {
        /**
         * Set this value to get remaining results, if `NextToken` was returned in the statement response.
         */
        public var clientRequestToken: kotlin.String? = null
        /**
         * Determines the level of detail about either provisioned or on-demand throughput consumption that is returned in the response. For more information, see [TransactGetItems](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_TransactGetItems.html) and [TransactWriteItems](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_TransactWriteItems.html).
         */
        public var returnConsumedCapacity: aws.sdk.kotlin.services.dynamodb.model.ReturnConsumedCapacity? = null
        /**
         * The list of PartiQL statements representing the transaction to run.
         */
        public var transactStatements: List<ParameterizedStatement>? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.dynamodb.model.ExecuteTransactionRequest) : this() {
            this.clientRequestToken = x.clientRequestToken
            this.returnConsumedCapacity = x.returnConsumedCapacity
            this.transactStatements = x.transactStatements
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.dynamodb.model.ExecuteTransactionRequest = ExecuteTransactionRequest(this)
    }
}
