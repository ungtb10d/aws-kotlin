// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



/**
 * Processing options for the CSV file being imported.
 */
public class CsvOptions private constructor(builder: Builder) {
    /**
     * The delimiter used for separating items in the CSV file being imported.
     */
    public val delimiter: kotlin.String? = builder.delimiter
    /**
     * List of the headers used to specify a common header for all source CSV files being imported. If this field is specified then the first line of each CSV file is treated as data instead of the header. If this field is not specified the the first line of each CSV file is treated as the header.
     */
    public val headerList: List<String>? = builder.headerList

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.dynamodb.model.CsvOptions = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("CsvOptions(")
        append("delimiter=$delimiter,")
        append("headerList=$headerList)")
    }

    override fun hashCode(): kotlin.Int {
        var result = delimiter?.hashCode() ?: 0
        result = 31 * result + (headerList?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as CsvOptions

        if (delimiter != other.delimiter) return false
        if (headerList != other.headerList) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.dynamodb.model.CsvOptions = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The delimiter used for separating items in the CSV file being imported.
         */
        public var delimiter: kotlin.String? = null
        /**
         * List of the headers used to specify a common header for all source CSV files being imported. If this field is specified then the first line of each CSV file is treated as data instead of the header. If this field is not specified the the first line of each CSV file is treated as the header.
         */
        public var headerList: List<String>? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.dynamodb.model.CsvOptions) : this() {
            this.delimiter = x.delimiter
            this.headerList = x.headerList
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.dynamodb.model.CsvOptions = CsvOptions(this)
    }
}
