// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.transform

import aws.sdk.kotlin.services.dynamodb.model.SseDescription
import aws.sdk.kotlin.services.dynamodb.model.SseStatus
import aws.sdk.kotlin.services.dynamodb.model.SseType
import aws.smithy.kotlin.runtime.serde.Deserializer
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.json.JsonDeserializer
import aws.smithy.kotlin.runtime.serde.json.JsonSerialName
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct
import aws.smithy.kotlin.runtime.time.Instant

internal fun deserializeSseDescriptionDocument(deserializer: Deserializer): SseDescription {
    val builder = SseDescription.Builder()
    val INACCESSIBLEENCRYPTIONDATETIME_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Timestamp, JsonSerialName("InaccessibleEncryptionDateTime"))
    val KMSMASTERKEYARN_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("KMSMasterKeyArn"))
    val SSETYPE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("SSEType"))
    val STATUS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("Status"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        field(INACCESSIBLEENCRYPTIONDATETIME_DESCRIPTOR)
        field(KMSMASTERKEYARN_DESCRIPTOR)
        field(SSETYPE_DESCRIPTOR)
        field(STATUS_DESCRIPTOR)
    }

    deserializer.deserializeStruct(OBJ_DESCRIPTOR) {
        loop@while (true) {
            when (findNextFieldIndex()) {
                INACCESSIBLEENCRYPTIONDATETIME_DESCRIPTOR.index -> builder.inaccessibleEncryptionDateTime = deserializeString().let { Instant.fromEpochSeconds(it) }
                KMSMASTERKEYARN_DESCRIPTOR.index -> builder.kmsMasterKeyArn = deserializeString()
                SSETYPE_DESCRIPTOR.index -> builder.sseType = deserializeString().let { SseType.fromValue(it) }
                STATUS_DESCRIPTOR.index -> builder.status = deserializeString().let { SseStatus.fromValue(it) }
                null -> break@loop
                else -> skipValue()
            }
        }
    }
    return builder.build()
}
