// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.transform

import aws.sdk.kotlin.services.dynamodb.model.CsvOptions
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.Serializer
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.json.JsonDeserializer
import aws.smithy.kotlin.runtime.serde.json.JsonSerialName
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct

internal fun serializeCsvOptionsDocument(serializer: Serializer, input: CsvOptions) {
    val DELIMITER_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("Delimiter"))
    val HEADERLIST_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, JsonSerialName("HeaderList"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        field(DELIMITER_DESCRIPTOR)
        field(HEADERLIST_DESCRIPTOR)
    }

    serializer.serializeStruct(OBJ_DESCRIPTOR) {
        input.delimiter?.let { field(DELIMITER_DESCRIPTOR, it) }
        if (input.headerList != null) {
            listField(HEADERLIST_DESCRIPTOR) {
                for (el0 in input.headerList) {
                    serializeString(el0)
                }
            }
        }
    }
}
