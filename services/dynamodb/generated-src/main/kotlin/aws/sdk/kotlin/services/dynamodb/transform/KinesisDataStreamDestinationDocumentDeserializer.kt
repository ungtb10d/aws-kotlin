// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.transform

import aws.sdk.kotlin.services.dynamodb.model.DestinationStatus
import aws.sdk.kotlin.services.dynamodb.model.KinesisDataStreamDestination
import aws.smithy.kotlin.runtime.serde.Deserializer
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.json.JsonDeserializer
import aws.smithy.kotlin.runtime.serde.json.JsonSerialName
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct

internal fun deserializeKinesisDataStreamDestinationDocument(deserializer: Deserializer): KinesisDataStreamDestination {
    val builder = KinesisDataStreamDestination.Builder()
    val DESTINATIONSTATUS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("DestinationStatus"))
    val DESTINATIONSTATUSDESCRIPTION_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("DestinationStatusDescription"))
    val STREAMARN_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, JsonSerialName("StreamArn"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        field(DESTINATIONSTATUS_DESCRIPTOR)
        field(DESTINATIONSTATUSDESCRIPTION_DESCRIPTOR)
        field(STREAMARN_DESCRIPTOR)
    }

    deserializer.deserializeStruct(OBJ_DESCRIPTOR) {
        loop@while (true) {
            when (findNextFieldIndex()) {
                DESTINATIONSTATUS_DESCRIPTOR.index -> builder.destinationStatus = deserializeString().let { DestinationStatus.fromValue(it) }
                DESTINATIONSTATUSDESCRIPTION_DESCRIPTOR.index -> builder.destinationStatusDescription = deserializeString()
                STREAMARN_DESCRIPTOR.index -> builder.streamArn = deserializeString()
                null -> break@loop
                else -> skipValue()
            }
        }
    }
    return builder.build()
}
