// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Options for sending VPN tunnel logs to CloudWatch.
 */
public class CloudWatchLogOptionsSpecification private constructor(builder: Builder) {
    /**
     * Enable or disable VPN tunnel logging feature. Default value is `False`.
     *
     * Valid values: `True` | `False`
     */
    public val logEnabled: kotlin.Boolean? = builder.logEnabled
    /**
     * The Amazon Resource Name (ARN) of the CloudWatch log group to send logs to.
     */
    public val logGroupArn: kotlin.String? = builder.logGroupArn
    /**
     * Set log format. Default format is `json`.
     *
     * Valid values: `json` | `text`
     */
    public val logOutputFormat: kotlin.String? = builder.logOutputFormat

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.CloudWatchLogOptionsSpecification = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("CloudWatchLogOptionsSpecification(")
        append("logEnabled=$logEnabled,")
        append("logGroupArn=$logGroupArn,")
        append("logOutputFormat=$logOutputFormat)")
    }

    override fun hashCode(): kotlin.Int {
        var result = logEnabled?.hashCode() ?: 0
        result = 31 * result + (logGroupArn?.hashCode() ?: 0)
        result = 31 * result + (logOutputFormat?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as CloudWatchLogOptionsSpecification

        if (logEnabled != other.logEnabled) return false
        if (logGroupArn != other.logGroupArn) return false
        if (logOutputFormat != other.logOutputFormat) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.CloudWatchLogOptionsSpecification = Builder(this).apply(block).build()

    public class Builder {
        /**
         * Enable or disable VPN tunnel logging feature. Default value is `False`.
         *
         * Valid values: `True` | `False`
         */
        public var logEnabled: kotlin.Boolean? = null
        /**
         * The Amazon Resource Name (ARN) of the CloudWatch log group to send logs to.
         */
        public var logGroupArn: kotlin.String? = null
        /**
         * Set log format. Default format is `json`.
         *
         * Valid values: `json` | `text`
         */
        public var logOutputFormat: kotlin.String? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.CloudWatchLogOptionsSpecification) : this() {
            this.logEnabled = x.logEnabled
            this.logGroupArn = x.logGroupArn
            this.logOutputFormat = x.logOutputFormat
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.CloudWatchLogOptionsSpecification = CloudWatchLogOptionsSpecification(this)
    }
}
