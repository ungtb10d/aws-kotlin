// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes a subnet CIDR reservation.
 */
public class SubnetCidrReservation private constructor(builder: Builder) {
    /**
     * The CIDR that has been reserved.
     */
    public val cidr: kotlin.String? = builder.cidr
    /**
     * The description assigned to the subnet CIDR reservation.
     */
    public val description: kotlin.String? = builder.description
    /**
     * The ID of the account that owns the subnet CIDR reservation.
     */
    public val ownerId: kotlin.String? = builder.ownerId
    /**
     * The type of reservation.
     */
    public val reservationType: aws.sdk.kotlin.services.ec2.model.SubnetCidrReservationType? = builder.reservationType
    /**
     * The ID of the subnet CIDR reservation.
     */
    public val subnetCidrReservationId: kotlin.String? = builder.subnetCidrReservationId
    /**
     * The ID of the subnet.
     */
    public val subnetId: kotlin.String? = builder.subnetId
    /**
     * The tags assigned to the subnet CIDR reservation.
     */
    public val tags: List<Tag>? = builder.tags

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.SubnetCidrReservation = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("SubnetCidrReservation(")
        append("cidr=$cidr,")
        append("description=$description,")
        append("ownerId=$ownerId,")
        append("reservationType=$reservationType,")
        append("subnetCidrReservationId=$subnetCidrReservationId,")
        append("subnetId=$subnetId,")
        append("tags=$tags)")
    }

    override fun hashCode(): kotlin.Int {
        var result = cidr?.hashCode() ?: 0
        result = 31 * result + (description?.hashCode() ?: 0)
        result = 31 * result + (ownerId?.hashCode() ?: 0)
        result = 31 * result + (reservationType?.hashCode() ?: 0)
        result = 31 * result + (subnetCidrReservationId?.hashCode() ?: 0)
        result = 31 * result + (subnetId?.hashCode() ?: 0)
        result = 31 * result + (tags?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as SubnetCidrReservation

        if (cidr != other.cidr) return false
        if (description != other.description) return false
        if (ownerId != other.ownerId) return false
        if (reservationType != other.reservationType) return false
        if (subnetCidrReservationId != other.subnetCidrReservationId) return false
        if (subnetId != other.subnetId) return false
        if (tags != other.tags) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.SubnetCidrReservation = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The CIDR that has been reserved.
         */
        public var cidr: kotlin.String? = null
        /**
         * The description assigned to the subnet CIDR reservation.
         */
        public var description: kotlin.String? = null
        /**
         * The ID of the account that owns the subnet CIDR reservation.
         */
        public var ownerId: kotlin.String? = null
        /**
         * The type of reservation.
         */
        public var reservationType: aws.sdk.kotlin.services.ec2.model.SubnetCidrReservationType? = null
        /**
         * The ID of the subnet CIDR reservation.
         */
        public var subnetCidrReservationId: kotlin.String? = null
        /**
         * The ID of the subnet.
         */
        public var subnetId: kotlin.String? = null
        /**
         * The tags assigned to the subnet CIDR reservation.
         */
        public var tags: List<Tag>? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.SubnetCidrReservation) : this() {
            this.cidr = x.cidr
            this.description = x.description
            this.ownerId = x.ownerId
            this.reservationType = x.reservationType
            this.subnetCidrReservationId = x.subnetCidrReservationId
            this.subnetId = x.subnetId
            this.tags = x.tags
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.SubnetCidrReservation = SubnetCidrReservation(this)
    }
}
