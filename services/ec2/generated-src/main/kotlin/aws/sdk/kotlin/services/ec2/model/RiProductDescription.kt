// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model

import kotlin.collections.List

public sealed class RiProductDescription {

    public abstract val value: kotlin.String

    public object LinuxUnix : aws.sdk.kotlin.services.ec2.model.RiProductDescription() {
        override val value: kotlin.String = "Linux/UNIX"
        override fun toString(): kotlin.String = value
    }

    public object LinuxUnixAmazonVpc : aws.sdk.kotlin.services.ec2.model.RiProductDescription() {
        override val value: kotlin.String = "Linux/UNIX (Amazon VPC)"
        override fun toString(): kotlin.String = value
    }

    public object Windows : aws.sdk.kotlin.services.ec2.model.RiProductDescription() {
        override val value: kotlin.String = "Windows"
        override fun toString(): kotlin.String = value
    }

    public object WindowsAmazonVpc : aws.sdk.kotlin.services.ec2.model.RiProductDescription() {
        override val value: kotlin.String = "Windows (Amazon VPC)"
        override fun toString(): kotlin.String = value
    }

    public data class SdkUnknown(override val value: kotlin.String) : aws.sdk.kotlin.services.ec2.model.RiProductDescription() {
        override fun toString(): kotlin.String = value
    }

    public companion object {
        /**
         * Convert a raw value to one of the sealed variants or [SdkUnknown]
         */
        public fun fromValue(str: kotlin.String): aws.sdk.kotlin.services.ec2.model.RiProductDescription = when(str) {
            "Linux/UNIX" -> LinuxUnix
            "Linux/UNIX (Amazon VPC)" -> LinuxUnixAmazonVpc
            "Windows" -> Windows
            "Windows (Amazon VPC)" -> WindowsAmazonVpc
            else -> SdkUnknown(str)
        }

        /**
         * Get a list of all possible variants
         */
        public fun values(): kotlin.collections.List<aws.sdk.kotlin.services.ec2.model.RiProductDescription> = listOf(
            LinuxUnix,
            LinuxUnixAmazonVpc,
            Windows,
            WindowsAmazonVpc
        )
    }
}
