// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.transform

import aws.sdk.kotlin.services.ec2.model.ImportInstanceLaunchSpecification
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.Serializer
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.formurl.FormUrlFlattened
import aws.smithy.kotlin.runtime.serde.formurl.FormUrlSerialName
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct

internal fun serializeImportInstanceLaunchSpecificationDocument(serializer: Serializer, input: ImportInstanceLaunchSpecification) {
    val ADDITIONALINFO_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("AdditionalInfo"))
    val ARCHITECTURE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Enum, FormUrlSerialName("Architecture"))
    val GROUPIDS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, FormUrlSerialName("GroupId"), FormUrlFlattened)
    val GROUPNAMES_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, FormUrlSerialName("GroupName"), FormUrlFlattened)
    val INSTANCEINITIATEDSHUTDOWNBEHAVIOR_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Enum, FormUrlSerialName("InstanceInitiatedShutdownBehavior"))
    val INSTANCETYPE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Enum, FormUrlSerialName("InstanceType"))
    val MONITORING_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Boolean, FormUrlSerialName("Monitoring"))
    val PLACEMENT_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, FormUrlSerialName("Placement"))
    val PRIVATEIPADDRESS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("PrivateIpAddress"))
    val SUBNETID_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("SubnetId"))
    val USERDATA_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, FormUrlSerialName("UserData"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(FormUrlSerialName("ImportInstanceLaunchSpecification"))
        field(ADDITIONALINFO_DESCRIPTOR)
        field(ARCHITECTURE_DESCRIPTOR)
        field(GROUPIDS_DESCRIPTOR)
        field(GROUPNAMES_DESCRIPTOR)
        field(INSTANCEINITIATEDSHUTDOWNBEHAVIOR_DESCRIPTOR)
        field(INSTANCETYPE_DESCRIPTOR)
        field(MONITORING_DESCRIPTOR)
        field(PLACEMENT_DESCRIPTOR)
        field(PRIVATEIPADDRESS_DESCRIPTOR)
        field(SUBNETID_DESCRIPTOR)
        field(USERDATA_DESCRIPTOR)
    }

    serializer.serializeStruct(OBJ_DESCRIPTOR) {
        input.additionalInfo?.let { field(ADDITIONALINFO_DESCRIPTOR, it) }
        input.architecture?.let { field(ARCHITECTURE_DESCRIPTOR, it.value) }
        if (input.groupIds != null) {
            listField(GROUPIDS_DESCRIPTOR) {
                for (el0 in input.groupIds) {
                    serializeString(el0)
                }
            }
        }
        if (input.groupNames != null) {
            listField(GROUPNAMES_DESCRIPTOR) {
                for (el0 in input.groupNames) {
                    serializeString(el0)
                }
            }
        }
        input.instanceInitiatedShutdownBehavior?.let { field(INSTANCEINITIATEDSHUTDOWNBEHAVIOR_DESCRIPTOR, it.value) }
        input.instanceType?.let { field(INSTANCETYPE_DESCRIPTOR, it.value) }
        input.monitoring?.let { field(MONITORING_DESCRIPTOR, it) }
        input.placement?.let { field(PLACEMENT_DESCRIPTOR, it, ::serializePlacementDocument) }
        input.privateIpAddress?.let { field(PRIVATEIPADDRESS_DESCRIPTOR, it) }
        input.subnetId?.let { field(SUBNETID_DESCRIPTOR, it) }
        input.userData?.let { field(USERDATA_DESCRIPTOR, it, ::serializeUserDataDocument) }
    }
}
