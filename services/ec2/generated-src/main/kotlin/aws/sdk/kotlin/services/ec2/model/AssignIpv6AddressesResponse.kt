// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



public class AssignIpv6AddressesResponse private constructor(builder: Builder) {
    /**
     * The new IPv6 addresses assigned to the network interface. Existing IPv6 addresses that were assigned to the network interface before the request are not included.
     */
    public val assignedIpv6Addresses: List<String>? = builder.assignedIpv6Addresses
    /**
     * The IPv6 prefixes that are assigned to the network interface.
     */
    public val assignedIpv6Prefixes: List<String>? = builder.assignedIpv6Prefixes
    /**
     * The ID of the network interface.
     */
    public val networkInterfaceId: kotlin.String? = builder.networkInterfaceId

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.AssignIpv6AddressesResponse = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("AssignIpv6AddressesResponse(")
        append("assignedIpv6Addresses=$assignedIpv6Addresses,")
        append("assignedIpv6Prefixes=$assignedIpv6Prefixes,")
        append("networkInterfaceId=$networkInterfaceId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = assignedIpv6Addresses?.hashCode() ?: 0
        result = 31 * result + (assignedIpv6Prefixes?.hashCode() ?: 0)
        result = 31 * result + (networkInterfaceId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as AssignIpv6AddressesResponse

        if (assignedIpv6Addresses != other.assignedIpv6Addresses) return false
        if (assignedIpv6Prefixes != other.assignedIpv6Prefixes) return false
        if (networkInterfaceId != other.networkInterfaceId) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.AssignIpv6AddressesResponse = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The new IPv6 addresses assigned to the network interface. Existing IPv6 addresses that were assigned to the network interface before the request are not included.
         */
        public var assignedIpv6Addresses: List<String>? = null
        /**
         * The IPv6 prefixes that are assigned to the network interface.
         */
        public var assignedIpv6Prefixes: List<String>? = null
        /**
         * The ID of the network interface.
         */
        public var networkInterfaceId: kotlin.String? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.AssignIpv6AddressesResponse) : this() {
            this.assignedIpv6Addresses = x.assignedIpv6Addresses
            this.assignedIpv6Prefixes = x.assignedIpv6Prefixes
            this.networkInterfaceId = x.networkInterfaceId
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.AssignIpv6AddressesResponse = AssignIpv6AddressesResponse(this)
    }
}
