// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.transform

import aws.sdk.kotlin.services.ec2.model.SpotAllocationStrategy
import aws.sdk.kotlin.services.ec2.model.SpotInstanceInterruptionBehavior
import aws.sdk.kotlin.services.ec2.model.SpotOptions
import aws.smithy.kotlin.runtime.serde.Deserializer
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct
import aws.smithy.kotlin.runtime.serde.xml.XmlDeserializer
import aws.smithy.kotlin.runtime.serde.xml.XmlNamespace
import aws.smithy.kotlin.runtime.serde.xml.XmlSerialName

internal fun deserializeSpotOptionsDocument(deserializer: Deserializer): SpotOptions {
    val builder = SpotOptions.Builder()
    val ALLOCATIONSTRATEGY_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Enum, XmlSerialName("allocationStrategy"))
    val INSTANCEINTERRUPTIONBEHAVIOR_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Enum, XmlSerialName("instanceInterruptionBehavior"))
    val INSTANCEPOOLSTOUSECOUNT_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, XmlSerialName("instancePoolsToUseCount"))
    val MAINTENANCESTRATEGIES_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, XmlSerialName("maintenanceStrategies"))
    val MAXTOTALPRICE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("maxTotalPrice"))
    val MINTARGETCAPACITY_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, XmlSerialName("minTargetCapacity"))
    val SINGLEAVAILABILITYZONE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Boolean, XmlSerialName("singleAvailabilityZone"))
    val SINGLEINSTANCETYPE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Boolean, XmlSerialName("singleInstanceType"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(XmlSerialName("SpotOptions"))
        trait(XmlNamespace("http://ec2.amazonaws.com/doc/2016-11-15"))
        field(ALLOCATIONSTRATEGY_DESCRIPTOR)
        field(INSTANCEINTERRUPTIONBEHAVIOR_DESCRIPTOR)
        field(INSTANCEPOOLSTOUSECOUNT_DESCRIPTOR)
        field(MAINTENANCESTRATEGIES_DESCRIPTOR)
        field(MAXTOTALPRICE_DESCRIPTOR)
        field(MINTARGETCAPACITY_DESCRIPTOR)
        field(SINGLEAVAILABILITYZONE_DESCRIPTOR)
        field(SINGLEINSTANCETYPE_DESCRIPTOR)
    }

    deserializer.deserializeStruct(OBJ_DESCRIPTOR) {
        loop@while (true) {
            when (findNextFieldIndex()) {
                ALLOCATIONSTRATEGY_DESCRIPTOR.index -> builder.allocationStrategy = deserializeString().let { SpotAllocationStrategy.fromValue(it) }
                INSTANCEINTERRUPTIONBEHAVIOR_DESCRIPTOR.index -> builder.instanceInterruptionBehavior = deserializeString().let { SpotInstanceInterruptionBehavior.fromValue(it) }
                INSTANCEPOOLSTOUSECOUNT_DESCRIPTOR.index -> builder.instancePoolsToUseCount = deserializeInt()
                MAINTENANCESTRATEGIES_DESCRIPTOR.index -> builder.maintenanceStrategies = deserializeFleetSpotMaintenanceStrategiesDocument(deserializer)
                MAXTOTALPRICE_DESCRIPTOR.index -> builder.maxTotalPrice = deserializeString()
                MINTARGETCAPACITY_DESCRIPTOR.index -> builder.minTargetCapacity = deserializeInt()
                SINGLEAVAILABILITYZONE_DESCRIPTOR.index -> builder.singleAvailabilityZone = deserializeBoolean()
                SINGLEINSTANCETYPE_DESCRIPTOR.index -> builder.singleInstanceType = deserializeBoolean()
                null -> break@loop
                else -> skipValue()
            }
        }
    }
    return builder.build()
}
