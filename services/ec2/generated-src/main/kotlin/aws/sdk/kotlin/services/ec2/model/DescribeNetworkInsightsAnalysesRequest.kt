// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model

import aws.smithy.kotlin.runtime.time.Instant

public class DescribeNetworkInsightsAnalysesRequest private constructor(builder: Builder) {
    /**
     * The time when the network insights analyses ended.
     */
    public val analysisEndTime: aws.smithy.kotlin.runtime.time.Instant? = builder.analysisEndTime
    /**
     * The time when the network insights analyses started.
     */
    public val analysisStartTime: aws.smithy.kotlin.runtime.time.Instant? = builder.analysisStartTime
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.
     */
    public val dryRun: kotlin.Boolean? = builder.dryRun
    /**
     * The filters. The following are the possible values:
     * + PathFound - A Boolean value that indicates whether a feasible path is found.
     * + Status - The status of the analysis (running | succeeded | failed).
     */
    public val filters: List<Filter>? = builder.filters
    /**
     * The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned `nextToken` value.
     */
    public val maxResults: kotlin.Int? = builder.maxResults
    /**
     * The ID of the network insights analyses. You must specify either analysis IDs or a path ID.
     */
    public val networkInsightsAnalysisIds: List<String>? = builder.networkInsightsAnalysisIds
    /**
     * The ID of the path. You must specify either a path ID or analysis IDs.
     */
    public val networkInsightsPathId: kotlin.String? = builder.networkInsightsPathId
    /**
     * The token for the next page of results.
     */
    public val nextToken: kotlin.String? = builder.nextToken

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.DescribeNetworkInsightsAnalysesRequest = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("DescribeNetworkInsightsAnalysesRequest(")
        append("analysisEndTime=$analysisEndTime,")
        append("analysisStartTime=$analysisStartTime,")
        append("dryRun=$dryRun,")
        append("filters=$filters,")
        append("maxResults=$maxResults,")
        append("networkInsightsAnalysisIds=$networkInsightsAnalysisIds,")
        append("networkInsightsPathId=$networkInsightsPathId,")
        append("nextToken=$nextToken)")
    }

    override fun hashCode(): kotlin.Int {
        var result = analysisEndTime?.hashCode() ?: 0
        result = 31 * result + (analysisStartTime?.hashCode() ?: 0)
        result = 31 * result + (dryRun?.hashCode() ?: 0)
        result = 31 * result + (filters?.hashCode() ?: 0)
        result = 31 * result + (maxResults ?: 0)
        result = 31 * result + (networkInsightsAnalysisIds?.hashCode() ?: 0)
        result = 31 * result + (networkInsightsPathId?.hashCode() ?: 0)
        result = 31 * result + (nextToken?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as DescribeNetworkInsightsAnalysesRequest

        if (analysisEndTime != other.analysisEndTime) return false
        if (analysisStartTime != other.analysisStartTime) return false
        if (dryRun != other.dryRun) return false
        if (filters != other.filters) return false
        if (maxResults != other.maxResults) return false
        if (networkInsightsAnalysisIds != other.networkInsightsAnalysisIds) return false
        if (networkInsightsPathId != other.networkInsightsPathId) return false
        if (nextToken != other.nextToken) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.DescribeNetworkInsightsAnalysesRequest = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The time when the network insights analyses ended.
         */
        public var analysisEndTime: aws.smithy.kotlin.runtime.time.Instant? = null
        /**
         * The time when the network insights analyses started.
         */
        public var analysisStartTime: aws.smithy.kotlin.runtime.time.Instant? = null
        /**
         * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.
         */
        public var dryRun: kotlin.Boolean? = null
        /**
         * The filters. The following are the possible values:
         * + PathFound - A Boolean value that indicates whether a feasible path is found.
         * + Status - The status of the analysis (running | succeeded | failed).
         */
        public var filters: List<Filter>? = null
        /**
         * The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned `nextToken` value.
         */
        public var maxResults: kotlin.Int? = null
        /**
         * The ID of the network insights analyses. You must specify either analysis IDs or a path ID.
         */
        public var networkInsightsAnalysisIds: List<String>? = null
        /**
         * The ID of the path. You must specify either a path ID or analysis IDs.
         */
        public var networkInsightsPathId: kotlin.String? = null
        /**
         * The token for the next page of results.
         */
        public var nextToken: kotlin.String? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.DescribeNetworkInsightsAnalysesRequest) : this() {
            this.analysisEndTime = x.analysisEndTime
            this.analysisStartTime = x.analysisStartTime
            this.dryRun = x.dryRun
            this.filters = x.filters
            this.maxResults = x.maxResults
            this.networkInsightsAnalysisIds = x.networkInsightsAnalysisIds
            this.networkInsightsPathId = x.networkInsightsPathId
            this.nextToken = x.nextToken
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.DescribeNetworkInsightsAnalysesRequest = DescribeNetworkInsightsAnalysesRequest(this)
    }
}
