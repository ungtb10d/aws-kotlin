// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



public class DescribeVpcAttributeResponse private constructor(builder: Builder) {
    /**
     * Indicates whether the instances launched in the VPC get DNS hostnames. If this attribute is `true`, instances in the VPC get DNS hostnames; otherwise, they do not.
     */
    public val enableDnsHostnames: aws.sdk.kotlin.services.ec2.model.AttributeBooleanValue? = builder.enableDnsHostnames
    /**
     * Indicates whether DNS resolution is enabled for the VPC. If this attribute is `true`, the Amazon DNS server resolves DNS hostnames for your instances to their corresponding IP addresses; otherwise, it does not.
     */
    public val enableDnsSupport: aws.sdk.kotlin.services.ec2.model.AttributeBooleanValue? = builder.enableDnsSupport
    /**
     * The ID of the VPC.
     */
    public val vpcId: kotlin.String? = builder.vpcId

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.DescribeVpcAttributeResponse = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("DescribeVpcAttributeResponse(")
        append("enableDnsHostnames=$enableDnsHostnames,")
        append("enableDnsSupport=$enableDnsSupport,")
        append("vpcId=$vpcId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = enableDnsHostnames?.hashCode() ?: 0
        result = 31 * result + (enableDnsSupport?.hashCode() ?: 0)
        result = 31 * result + (vpcId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as DescribeVpcAttributeResponse

        if (enableDnsHostnames != other.enableDnsHostnames) return false
        if (enableDnsSupport != other.enableDnsSupport) return false
        if (vpcId != other.vpcId) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.DescribeVpcAttributeResponse = Builder(this).apply(block).build()

    public class Builder {
        /**
         * Indicates whether the instances launched in the VPC get DNS hostnames. If this attribute is `true`, instances in the VPC get DNS hostnames; otherwise, they do not.
         */
        public var enableDnsHostnames: aws.sdk.kotlin.services.ec2.model.AttributeBooleanValue? = null
        /**
         * Indicates whether DNS resolution is enabled for the VPC. If this attribute is `true`, the Amazon DNS server resolves DNS hostnames for your instances to their corresponding IP addresses; otherwise, it does not.
         */
        public var enableDnsSupport: aws.sdk.kotlin.services.ec2.model.AttributeBooleanValue? = null
        /**
         * The ID of the VPC.
         */
        public var vpcId: kotlin.String? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.DescribeVpcAttributeResponse) : this() {
            this.enableDnsHostnames = x.enableDnsHostnames
            this.enableDnsSupport = x.enableDnsSupport
            this.vpcId = x.vpcId
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.DescribeVpcAttributeResponse = DescribeVpcAttributeResponse(this)

        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.AttributeBooleanValue] inside the given [block]
         */
        public fun enableDnsHostnames(block: aws.sdk.kotlin.services.ec2.model.AttributeBooleanValue.Builder.() -> kotlin.Unit) {
            this.enableDnsHostnames = aws.sdk.kotlin.services.ec2.model.AttributeBooleanValue.invoke(block)
        }

        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.AttributeBooleanValue] inside the given [block]
         */
        public fun enableDnsSupport(block: aws.sdk.kotlin.services.ec2.model.AttributeBooleanValue.Builder.() -> kotlin.Unit) {
            this.enableDnsSupport = aws.sdk.kotlin.services.ec2.model.AttributeBooleanValue.invoke(block)
        }
    }
}
