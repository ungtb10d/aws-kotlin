// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.transform

import aws.sdk.kotlin.services.ec2.model.DestinationOptionsRequest
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.Serializer
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.formurl.FormUrlSerialName
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct

internal fun serializeDestinationOptionsRequestDocument(serializer: Serializer, input: DestinationOptionsRequest) {
    val FILEFORMAT_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Enum, FormUrlSerialName("FileFormat"))
    val HIVECOMPATIBLEPARTITIONS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Boolean, FormUrlSerialName("HiveCompatiblePartitions"))
    val PERHOURPARTITION_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Boolean, FormUrlSerialName("PerHourPartition"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(FormUrlSerialName("DestinationOptionsRequest"))
        field(FILEFORMAT_DESCRIPTOR)
        field(HIVECOMPATIBLEPARTITIONS_DESCRIPTOR)
        field(PERHOURPARTITION_DESCRIPTOR)
    }

    serializer.serializeStruct(OBJ_DESCRIPTOR) {
        input.fileFormat?.let { field(FILEFORMAT_DESCRIPTOR, it.value) }
        input.hiveCompatiblePartitions?.let { field(HIVECOMPATIBLEPARTITIONS_DESCRIPTOR, it) }
        input.perHourPartition?.let { field(PERHOURPARTITION_DESCRIPTOR, it) }
    }
}
