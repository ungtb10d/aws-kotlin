// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.transform

import aws.sdk.kotlin.services.ec2.model.VCpuInfo
import aws.smithy.kotlin.runtime.serde.Deserializer
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct
import aws.smithy.kotlin.runtime.serde.xml.XmlCollectionName
import aws.smithy.kotlin.runtime.serde.xml.XmlDeserializer
import aws.smithy.kotlin.runtime.serde.xml.XmlNamespace
import aws.smithy.kotlin.runtime.serde.xml.XmlSerialName

internal fun deserializeVCpuInfoDocument(deserializer: Deserializer): VCpuInfo {
    val builder = VCpuInfo.Builder()
    val DEFAULTCORES_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, XmlSerialName("defaultCores"))
    val DEFAULTTHREADSPERCORE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, XmlSerialName("defaultThreadsPerCore"))
    val DEFAULTVCPUS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, XmlSerialName("defaultVCpus"))
    val VALIDCORES_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, XmlSerialName("validCores"), XmlCollectionName("item"))
    val VALIDTHREADSPERCORE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, XmlSerialName("validThreadsPerCore"), XmlCollectionName("item"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(XmlSerialName("VCpuInfo"))
        trait(XmlNamespace("http://ec2.amazonaws.com/doc/2016-11-15"))
        field(DEFAULTCORES_DESCRIPTOR)
        field(DEFAULTTHREADSPERCORE_DESCRIPTOR)
        field(DEFAULTVCPUS_DESCRIPTOR)
        field(VALIDCORES_DESCRIPTOR)
        field(VALIDTHREADSPERCORE_DESCRIPTOR)
    }

    deserializer.deserializeStruct(OBJ_DESCRIPTOR) {
        loop@while (true) {
            when (findNextFieldIndex()) {
                DEFAULTCORES_DESCRIPTOR.index -> builder.defaultCores = deserializeInt()
                DEFAULTTHREADSPERCORE_DESCRIPTOR.index -> builder.defaultThreadsPerCore = deserializeInt()
                DEFAULTVCPUS_DESCRIPTOR.index -> builder.defaultVCpus = deserializeInt()
                VALIDCORES_DESCRIPTOR.index -> builder.validCores =
                    deserializer.deserializeList(VALIDCORES_DESCRIPTOR) {
                        val col0 = mutableListOf<Int>()
                        while (hasNextElement()) {
                            val el0 = if (nextHasValue()) { deserializeInt() } else { deserializeNull(); continue }
                            col0.add(el0)
                        }
                        col0
                    }
                VALIDTHREADSPERCORE_DESCRIPTOR.index -> builder.validThreadsPerCore =
                    deserializer.deserializeList(VALIDTHREADSPERCORE_DESCRIPTOR) {
                        val col0 = mutableListOf<Int>()
                        while (hasNextElement()) {
                            val el0 = if (nextHasValue()) { deserializeInt() } else { deserializeNull(); continue }
                            col0.add(el0)
                        }
                        col0
                    }
                null -> break@loop
                else -> skipValue()
            }
        }
    }
    return builder.build()
}
