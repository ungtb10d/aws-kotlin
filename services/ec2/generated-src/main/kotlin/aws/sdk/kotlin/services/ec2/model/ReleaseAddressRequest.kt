// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



public class ReleaseAddressRequest private constructor(builder: Builder) {
    /**
     * &#91;EC2-VPC&#93; The allocation ID. Required for EC2-VPC.
     */
    public val allocationId: kotlin.String? = builder.allocationId
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.
     */
    public val dryRun: kotlin.Boolean? = builder.dryRun
    /**
     * The set of Availability Zones, Local Zones, or Wavelength Zones from which Amazon Web Services advertises IP addresses.
     *
     * If you provide an incorrect network border group, you receive an `InvalidAddress.NotFound` error.
     *
     * You cannot use a network border group with EC2 Classic. If you attempt this operation on EC2 classic, you receive an `InvalidParameterCombination` error.
     */
    public val networkBorderGroup: kotlin.String? = builder.networkBorderGroup
    /**
     * &#91;EC2-Classic&#93; The Elastic IP address. Required for EC2-Classic.
     */
    public val publicIp: kotlin.String? = builder.publicIp

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.ReleaseAddressRequest = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("ReleaseAddressRequest(")
        append("allocationId=$allocationId,")
        append("dryRun=$dryRun,")
        append("networkBorderGroup=$networkBorderGroup,")
        append("publicIp=$publicIp)")
    }

    override fun hashCode(): kotlin.Int {
        var result = allocationId?.hashCode() ?: 0
        result = 31 * result + (dryRun?.hashCode() ?: 0)
        result = 31 * result + (networkBorderGroup?.hashCode() ?: 0)
        result = 31 * result + (publicIp?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as ReleaseAddressRequest

        if (allocationId != other.allocationId) return false
        if (dryRun != other.dryRun) return false
        if (networkBorderGroup != other.networkBorderGroup) return false
        if (publicIp != other.publicIp) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.ReleaseAddressRequest = Builder(this).apply(block).build()

    public class Builder {
        /**
         * &#91;EC2-VPC&#93; The allocation ID. Required for EC2-VPC.
         */
        public var allocationId: kotlin.String? = null
        /**
         * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.
         */
        public var dryRun: kotlin.Boolean? = null
        /**
         * The set of Availability Zones, Local Zones, or Wavelength Zones from which Amazon Web Services advertises IP addresses.
         *
         * If you provide an incorrect network border group, you receive an `InvalidAddress.NotFound` error.
         *
         * You cannot use a network border group with EC2 Classic. If you attempt this operation on EC2 classic, you receive an `InvalidParameterCombination` error.
         */
        public var networkBorderGroup: kotlin.String? = null
        /**
         * &#91;EC2-Classic&#93; The Elastic IP address. Required for EC2-Classic.
         */
        public var publicIp: kotlin.String? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.ReleaseAddressRequest) : this() {
            this.allocationId = x.allocationId
            this.dryRun = x.dryRun
            this.networkBorderGroup = x.networkBorderGroup
            this.publicIp = x.publicIp
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.ReleaseAddressRequest = ReleaseAddressRequest(this)
    }
}
