// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Information about instance capacity usage for a Capacity Reservation.
 */
public class CapacityAllocation private constructor(builder: Builder) {
    /**
     * The usage type. `used` indicates that the instance capacity is in use by instances that are running in the Capacity Reservation.
     */
    public val allocationType: aws.sdk.kotlin.services.ec2.model.AllocationType? = builder.allocationType
    /**
     * The amount of instance capacity associated with the usage. For example a value of `4` indicates that instance capacity for 4 instances is currently in use.
     */
    public val count: kotlin.Int? = builder.count

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.CapacityAllocation = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("CapacityAllocation(")
        append("allocationType=$allocationType,")
        append("count=$count)")
    }

    override fun hashCode(): kotlin.Int {
        var result = allocationType?.hashCode() ?: 0
        result = 31 * result + (count ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as CapacityAllocation

        if (allocationType != other.allocationType) return false
        if (count != other.count) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.CapacityAllocation = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The usage type. `used` indicates that the instance capacity is in use by instances that are running in the Capacity Reservation.
         */
        public var allocationType: aws.sdk.kotlin.services.ec2.model.AllocationType? = null
        /**
         * The amount of instance capacity associated with the usage. For example a value of `4` indicates that instance capacity for 4 instances is currently in use.
         */
        public var count: kotlin.Int? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.CapacityAllocation) : this() {
            this.allocationType = x.allocationType
            this.count = x.count
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.CapacityAllocation = CapacityAllocation(this)
    }
}
