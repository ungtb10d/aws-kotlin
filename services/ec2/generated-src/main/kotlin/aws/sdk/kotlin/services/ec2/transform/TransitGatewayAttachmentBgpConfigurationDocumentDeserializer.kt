// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.transform

import aws.sdk.kotlin.services.ec2.model.BgpStatus
import aws.sdk.kotlin.services.ec2.model.TransitGatewayAttachmentBgpConfiguration
import aws.smithy.kotlin.runtime.serde.Deserializer
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct
import aws.smithy.kotlin.runtime.serde.xml.XmlDeserializer
import aws.smithy.kotlin.runtime.serde.xml.XmlNamespace
import aws.smithy.kotlin.runtime.serde.xml.XmlSerialName

internal fun deserializeTransitGatewayAttachmentBgpConfigurationDocument(deserializer: Deserializer): TransitGatewayAttachmentBgpConfiguration {
    val builder = TransitGatewayAttachmentBgpConfiguration.Builder()
    val BGPSTATUS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("bgpStatus"))
    val PEERADDRESS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("peerAddress"))
    val PEERASN_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Long, XmlSerialName("peerAsn"))
    val TRANSITGATEWAYADDRESS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("transitGatewayAddress"))
    val TRANSITGATEWAYASN_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Long, XmlSerialName("transitGatewayAsn"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(XmlSerialName("TransitGatewayAttachmentBgpConfiguration"))
        trait(XmlNamespace("http://ec2.amazonaws.com/doc/2016-11-15"))
        field(BGPSTATUS_DESCRIPTOR)
        field(PEERADDRESS_DESCRIPTOR)
        field(PEERASN_DESCRIPTOR)
        field(TRANSITGATEWAYADDRESS_DESCRIPTOR)
        field(TRANSITGATEWAYASN_DESCRIPTOR)
    }

    deserializer.deserializeStruct(OBJ_DESCRIPTOR) {
        loop@while (true) {
            when (findNextFieldIndex()) {
                BGPSTATUS_DESCRIPTOR.index -> builder.bgpStatus = deserializeString().let { BgpStatus.fromValue(it) }
                PEERADDRESS_DESCRIPTOR.index -> builder.peerAddress = deserializeString()
                PEERASN_DESCRIPTOR.index -> builder.peerAsn = deserializeLong()
                TRANSITGATEWAYADDRESS_DESCRIPTOR.index -> builder.transitGatewayAddress = deserializeString()
                TRANSITGATEWAYASN_DESCRIPTOR.index -> builder.transitGatewayAsn = deserializeLong()
                null -> break@loop
                else -> skipValue()
            }
        }
    }
    return builder.build()
}
