// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.transform

import aws.sdk.kotlin.services.ec2.model.InstanceSpecification
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.Serializer
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.formurl.FormUrlFlattened
import aws.smithy.kotlin.runtime.serde.formurl.FormUrlSerialName
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct

internal fun serializeInstanceSpecificationDocument(serializer: Serializer, input: InstanceSpecification) {
    val EXCLUDEBOOTVOLUME_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Boolean, FormUrlSerialName("ExcludeBootVolume"))
    val EXCLUDEDATAVOLUMEIDS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, FormUrlSerialName("ExcludeDataVolumeId"), FormUrlFlattened)
    val INSTANCEID_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("InstanceId"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(FormUrlSerialName("InstanceSpecification"))
        field(EXCLUDEBOOTVOLUME_DESCRIPTOR)
        field(EXCLUDEDATAVOLUMEIDS_DESCRIPTOR)
        field(INSTANCEID_DESCRIPTOR)
    }

    serializer.serializeStruct(OBJ_DESCRIPTOR) {
        input.instanceId?.let { field(INSTANCEID_DESCRIPTOR, it) }
        input.excludeBootVolume?.let { field(EXCLUDEBOOTVOLUME_DESCRIPTOR, it) }
        if (input.excludeDataVolumeIds != null) {
            listField(EXCLUDEDATAVOLUMEIDS_DESCRIPTOR) {
                for (el0 in input.excludeDataVolumeIds) {
                    serializeString(el0)
                }
            }
        }
    }
}
