// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



public class GetNetworkInsightsAccessScopeAnalysisFindingsResponse private constructor(builder: Builder) {
    /**
     * The findings associated with Network Access Scope Analysis.
     */
    public val analysisFindings: List<AccessScopeAnalysisFinding>? = builder.analysisFindings
    /**
     * The status of Network Access Scope Analysis.
     */
    public val analysisStatus: aws.sdk.kotlin.services.ec2.model.AnalysisStatus? = builder.analysisStatus
    /**
     * The ID of the Network Access Scope analysis.
     */
    public val networkInsightsAccessScopeAnalysisId: kotlin.String? = builder.networkInsightsAccessScopeAnalysisId
    /**
     * The token to use to retrieve the next page of results. This value is `null` when there are no more results to return.
     */
    public val nextToken: kotlin.String? = builder.nextToken

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.GetNetworkInsightsAccessScopeAnalysisFindingsResponse = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("GetNetworkInsightsAccessScopeAnalysisFindingsResponse(")
        append("analysisFindings=$analysisFindings,")
        append("analysisStatus=$analysisStatus,")
        append("networkInsightsAccessScopeAnalysisId=$networkInsightsAccessScopeAnalysisId,")
        append("nextToken=$nextToken)")
    }

    override fun hashCode(): kotlin.Int {
        var result = analysisFindings?.hashCode() ?: 0
        result = 31 * result + (analysisStatus?.hashCode() ?: 0)
        result = 31 * result + (networkInsightsAccessScopeAnalysisId?.hashCode() ?: 0)
        result = 31 * result + (nextToken?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as GetNetworkInsightsAccessScopeAnalysisFindingsResponse

        if (analysisFindings != other.analysisFindings) return false
        if (analysisStatus != other.analysisStatus) return false
        if (networkInsightsAccessScopeAnalysisId != other.networkInsightsAccessScopeAnalysisId) return false
        if (nextToken != other.nextToken) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.GetNetworkInsightsAccessScopeAnalysisFindingsResponse = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The findings associated with Network Access Scope Analysis.
         */
        public var analysisFindings: List<AccessScopeAnalysisFinding>? = null
        /**
         * The status of Network Access Scope Analysis.
         */
        public var analysisStatus: aws.sdk.kotlin.services.ec2.model.AnalysisStatus? = null
        /**
         * The ID of the Network Access Scope analysis.
         */
        public var networkInsightsAccessScopeAnalysisId: kotlin.String? = null
        /**
         * The token to use to retrieve the next page of results. This value is `null` when there are no more results to return.
         */
        public var nextToken: kotlin.String? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.GetNetworkInsightsAccessScopeAnalysisFindingsResponse) : this() {
            this.analysisFindings = x.analysisFindings
            this.analysisStatus = x.analysisStatus
            this.networkInsightsAccessScopeAnalysisId = x.networkInsightsAccessScopeAnalysisId
            this.nextToken = x.nextToken
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.GetNetworkInsightsAccessScopeAnalysisFindingsResponse = GetNetworkInsightsAccessScopeAnalysisFindingsResponse(this)
    }
}
