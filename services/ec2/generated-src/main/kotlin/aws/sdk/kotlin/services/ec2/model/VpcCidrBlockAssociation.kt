// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes an IPv4 CIDR block associated with a VPC.
 */
public class VpcCidrBlockAssociation private constructor(builder: Builder) {
    /**
     * The association ID for the IPv4 CIDR block.
     */
    public val associationId: kotlin.String? = builder.associationId
    /**
     * The IPv4 CIDR block.
     */
    public val cidrBlock: kotlin.String? = builder.cidrBlock
    /**
     * Information about the state of the CIDR block.
     */
    public val cidrBlockState: aws.sdk.kotlin.services.ec2.model.VpcCidrBlockState? = builder.cidrBlockState

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.VpcCidrBlockAssociation = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("VpcCidrBlockAssociation(")
        append("associationId=$associationId,")
        append("cidrBlock=$cidrBlock,")
        append("cidrBlockState=$cidrBlockState)")
    }

    override fun hashCode(): kotlin.Int {
        var result = associationId?.hashCode() ?: 0
        result = 31 * result + (cidrBlock?.hashCode() ?: 0)
        result = 31 * result + (cidrBlockState?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as VpcCidrBlockAssociation

        if (associationId != other.associationId) return false
        if (cidrBlock != other.cidrBlock) return false
        if (cidrBlockState != other.cidrBlockState) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.VpcCidrBlockAssociation = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The association ID for the IPv4 CIDR block.
         */
        public var associationId: kotlin.String? = null
        /**
         * The IPv4 CIDR block.
         */
        public var cidrBlock: kotlin.String? = null
        /**
         * Information about the state of the CIDR block.
         */
        public var cidrBlockState: aws.sdk.kotlin.services.ec2.model.VpcCidrBlockState? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.VpcCidrBlockAssociation) : this() {
            this.associationId = x.associationId
            this.cidrBlock = x.cidrBlock
            this.cidrBlockState = x.cidrBlockState
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.VpcCidrBlockAssociation = VpcCidrBlockAssociation(this)

        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.VpcCidrBlockState] inside the given [block]
         */
        public fun cidrBlockState(block: aws.sdk.kotlin.services.ec2.model.VpcCidrBlockState.Builder.() -> kotlin.Unit) {
            this.cidrBlockState = aws.sdk.kotlin.services.ec2.model.VpcCidrBlockState.invoke(block)
        }
    }
}
