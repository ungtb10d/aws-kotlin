// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.transform

import aws.sdk.kotlin.services.ec2.model.LaunchTemplateHttpTokensState
import aws.sdk.kotlin.services.ec2.model.LaunchTemplateInstanceMetadataEndpointState
import aws.sdk.kotlin.services.ec2.model.LaunchTemplateInstanceMetadataOptions
import aws.sdk.kotlin.services.ec2.model.LaunchTemplateInstanceMetadataOptionsState
import aws.sdk.kotlin.services.ec2.model.LaunchTemplateInstanceMetadataProtocolIpv6
import aws.sdk.kotlin.services.ec2.model.LaunchTemplateInstanceMetadataTagsState
import aws.smithy.kotlin.runtime.serde.Deserializer
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct
import aws.smithy.kotlin.runtime.serde.xml.XmlDeserializer
import aws.smithy.kotlin.runtime.serde.xml.XmlNamespace
import aws.smithy.kotlin.runtime.serde.xml.XmlSerialName

internal fun deserializeLaunchTemplateInstanceMetadataOptionsDocument(deserializer: Deserializer): LaunchTemplateInstanceMetadataOptions {
    val builder = LaunchTemplateInstanceMetadataOptions.Builder()
    val HTTPENDPOINT_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("httpEndpoint"))
    val HTTPPROTOCOLIPV6_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("httpProtocolIpv6"))
    val HTTPPUTRESPONSEHOPLIMIT_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, XmlSerialName("httpPutResponseHopLimit"))
    val HTTPTOKENS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("httpTokens"))
    val INSTANCEMETADATATAGS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("instanceMetadataTags"))
    val STATE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("state"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(XmlSerialName("LaunchTemplateInstanceMetadataOptions"))
        trait(XmlNamespace("http://ec2.amazonaws.com/doc/2016-11-15"))
        field(HTTPENDPOINT_DESCRIPTOR)
        field(HTTPPROTOCOLIPV6_DESCRIPTOR)
        field(HTTPPUTRESPONSEHOPLIMIT_DESCRIPTOR)
        field(HTTPTOKENS_DESCRIPTOR)
        field(INSTANCEMETADATATAGS_DESCRIPTOR)
        field(STATE_DESCRIPTOR)
    }

    deserializer.deserializeStruct(OBJ_DESCRIPTOR) {
        loop@while (true) {
            when (findNextFieldIndex()) {
                HTTPENDPOINT_DESCRIPTOR.index -> builder.httpEndpoint = deserializeString().let { LaunchTemplateInstanceMetadataEndpointState.fromValue(it) }
                HTTPPROTOCOLIPV6_DESCRIPTOR.index -> builder.httpProtocolIpv6 = deserializeString().let { LaunchTemplateInstanceMetadataProtocolIpv6.fromValue(it) }
                HTTPPUTRESPONSEHOPLIMIT_DESCRIPTOR.index -> builder.httpPutResponseHopLimit = deserializeInt()
                HTTPTOKENS_DESCRIPTOR.index -> builder.httpTokens = deserializeString().let { LaunchTemplateHttpTokensState.fromValue(it) }
                INSTANCEMETADATATAGS_DESCRIPTOR.index -> builder.instanceMetadataTags = deserializeString().let { LaunchTemplateInstanceMetadataTagsState.fromValue(it) }
                STATE_DESCRIPTOR.index -> builder.state = deserializeString().let { LaunchTemplateInstanceMetadataOptionsState.fromValue(it) }
                null -> break@loop
                else -> skipValue()
            }
        }
    }
    return builder.build()
}
