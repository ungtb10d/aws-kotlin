// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes an Amazon FPGA image (AFI) attribute.
 */
public class FpgaImageAttribute private constructor(builder: Builder) {
    /**
     * The description of the AFI.
     */
    public val description: kotlin.String? = builder.description
    /**
     * The ID of the AFI.
     */
    public val fpgaImageId: kotlin.String? = builder.fpgaImageId
    /**
     * The load permissions.
     */
    public val loadPermissions: List<LoadPermission>? = builder.loadPermissions
    /**
     * The name of the AFI.
     */
    public val name: kotlin.String? = builder.name
    /**
     * The product codes.
     */
    public val productCodes: List<ProductCode>? = builder.productCodes

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.FpgaImageAttribute = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("FpgaImageAttribute(")
        append("description=$description,")
        append("fpgaImageId=$fpgaImageId,")
        append("loadPermissions=$loadPermissions,")
        append("name=$name,")
        append("productCodes=$productCodes)")
    }

    override fun hashCode(): kotlin.Int {
        var result = description?.hashCode() ?: 0
        result = 31 * result + (fpgaImageId?.hashCode() ?: 0)
        result = 31 * result + (loadPermissions?.hashCode() ?: 0)
        result = 31 * result + (name?.hashCode() ?: 0)
        result = 31 * result + (productCodes?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as FpgaImageAttribute

        if (description != other.description) return false
        if (fpgaImageId != other.fpgaImageId) return false
        if (loadPermissions != other.loadPermissions) return false
        if (name != other.name) return false
        if (productCodes != other.productCodes) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.FpgaImageAttribute = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The description of the AFI.
         */
        public var description: kotlin.String? = null
        /**
         * The ID of the AFI.
         */
        public var fpgaImageId: kotlin.String? = null
        /**
         * The load permissions.
         */
        public var loadPermissions: List<LoadPermission>? = null
        /**
         * The name of the AFI.
         */
        public var name: kotlin.String? = null
        /**
         * The product codes.
         */
        public var productCodes: List<ProductCode>? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.FpgaImageAttribute) : this() {
            this.description = x.description
            this.fpgaImageId = x.fpgaImageId
            this.loadPermissions = x.loadPermissions
            this.name = x.name
            this.productCodes = x.productCodes
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.FpgaImageAttribute = FpgaImageAttribute(this)
    }
}
