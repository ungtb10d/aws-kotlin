// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Contains the parameters for DescribeCustomerGateways.
 */
public class DescribeCustomerGatewaysRequest private constructor(builder: Builder) {
    /**
     * One or more customer gateway IDs.
     *
     * Default: Describes all your customer gateways.
     */
    public val customerGatewayIds: List<String>? = builder.customerGatewayIds
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.
     */
    public val dryRun: kotlin.Boolean? = builder.dryRun
    /**
     * One or more filters.
     * + `bgp-asn` - The customer gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).
     * + `customer-gateway-id` - The ID of the customer gateway.
     * + `ip-address` - The IP address of the customer gateway device's external interface.
     * + `state` - The state of the customer gateway (`pending` | `available` | `deleting` | `deleted`).
     * + `type` - The type of customer gateway. Currently, the only supported type is `ipsec.1`.
     * + `tag`:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key `Owner` and the value `TeamA`, specify `tag:Owner` for the filter name and `TeamA` for the filter value.
     * + `tag-key` - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.
     */
    public val filters: List<Filter>? = builder.filters

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.DescribeCustomerGatewaysRequest = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("DescribeCustomerGatewaysRequest(")
        append("customerGatewayIds=$customerGatewayIds,")
        append("dryRun=$dryRun,")
        append("filters=$filters)")
    }

    override fun hashCode(): kotlin.Int {
        var result = customerGatewayIds?.hashCode() ?: 0
        result = 31 * result + (dryRun?.hashCode() ?: 0)
        result = 31 * result + (filters?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as DescribeCustomerGatewaysRequest

        if (customerGatewayIds != other.customerGatewayIds) return false
        if (dryRun != other.dryRun) return false
        if (filters != other.filters) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.DescribeCustomerGatewaysRequest = Builder(this).apply(block).build()

    public class Builder {
        /**
         * One or more customer gateway IDs.
         *
         * Default: Describes all your customer gateways.
         */
        public var customerGatewayIds: List<String>? = null
        /**
         * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.
         */
        public var dryRun: kotlin.Boolean? = null
        /**
         * One or more filters.
         * + `bgp-asn` - The customer gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).
         * + `customer-gateway-id` - The ID of the customer gateway.
         * + `ip-address` - The IP address of the customer gateway device's external interface.
         * + `state` - The state of the customer gateway (`pending` | `available` | `deleting` | `deleted`).
         * + `type` - The type of customer gateway. Currently, the only supported type is `ipsec.1`.
         * + `tag`:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key `Owner` and the value `TeamA`, specify `tag:Owner` for the filter name and `TeamA` for the filter value.
         * + `tag-key` - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.
         */
        public var filters: List<Filter>? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.DescribeCustomerGatewaysRequest) : this() {
            this.customerGatewayIds = x.customerGatewayIds
            this.dryRun = x.dryRun
            this.filters = x.filters
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.DescribeCustomerGatewaysRequest = DescribeCustomerGatewaysRequest(this)
    }
}
