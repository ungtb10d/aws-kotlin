// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.transform

import aws.sdk.kotlin.services.ec2.model.TargetCapacitySpecificationRequest
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.Serializer
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.formurl.FormUrlSerialName
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct

internal fun serializeTargetCapacitySpecificationRequestDocument(serializer: Serializer, input: TargetCapacitySpecificationRequest) {
    val DEFAULTTARGETCAPACITYTYPE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Enum, FormUrlSerialName("DefaultTargetCapacityType"))
    val ONDEMANDTARGETCAPACITY_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, FormUrlSerialName("OnDemandTargetCapacity"))
    val SPOTTARGETCAPACITY_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, FormUrlSerialName("SpotTargetCapacity"))
    val TARGETCAPACITYUNITTYPE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Enum, FormUrlSerialName("TargetCapacityUnitType"))
    val TOTALTARGETCAPACITY_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, FormUrlSerialName("TotalTargetCapacity"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(FormUrlSerialName("TargetCapacitySpecificationRequest"))
        field(DEFAULTTARGETCAPACITYTYPE_DESCRIPTOR)
        field(ONDEMANDTARGETCAPACITY_DESCRIPTOR)
        field(SPOTTARGETCAPACITY_DESCRIPTOR)
        field(TARGETCAPACITYUNITTYPE_DESCRIPTOR)
        field(TOTALTARGETCAPACITY_DESCRIPTOR)
    }

    serializer.serializeStruct(OBJ_DESCRIPTOR) {
        input.totalTargetCapacity?.let { field(TOTALTARGETCAPACITY_DESCRIPTOR, it) }
        input.onDemandTargetCapacity?.let { field(ONDEMANDTARGETCAPACITY_DESCRIPTOR, it) }
        input.spotTargetCapacity?.let { field(SPOTTARGETCAPACITY_DESCRIPTOR, it) }
        input.defaultTargetCapacityType?.let { field(DEFAULTTARGETCAPACITYTYPE_DESCRIPTOR, it.value) }
        input.targetCapacityUnitType?.let { field(TARGETCAPACITYUNITTYPE_DESCRIPTOR, it.value) }
    }
}
