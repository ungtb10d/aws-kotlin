// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model

import aws.smithy.kotlin.runtime.time.Instant

/**
 * Describes an association between an IAM instance profile and an instance.
 */
public class IamInstanceProfileAssociation private constructor(builder: Builder) {
    /**
     * The ID of the association.
     */
    public val associationId: kotlin.String? = builder.associationId
    /**
     * The IAM instance profile.
     */
    public val iamInstanceProfile: aws.sdk.kotlin.services.ec2.model.IamInstanceProfile? = builder.iamInstanceProfile
    /**
     * The ID of the instance.
     */
    public val instanceId: kotlin.String? = builder.instanceId
    /**
     * The state of the association.
     */
    public val state: aws.sdk.kotlin.services.ec2.model.IamInstanceProfileAssociationState? = builder.state
    /**
     * The time the IAM instance profile was associated with the instance.
     */
    public val timestamp: aws.smithy.kotlin.runtime.time.Instant? = builder.timestamp

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.IamInstanceProfileAssociation = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("IamInstanceProfileAssociation(")
        append("associationId=$associationId,")
        append("iamInstanceProfile=$iamInstanceProfile,")
        append("instanceId=$instanceId,")
        append("state=$state,")
        append("timestamp=$timestamp)")
    }

    override fun hashCode(): kotlin.Int {
        var result = associationId?.hashCode() ?: 0
        result = 31 * result + (iamInstanceProfile?.hashCode() ?: 0)
        result = 31 * result + (instanceId?.hashCode() ?: 0)
        result = 31 * result + (state?.hashCode() ?: 0)
        result = 31 * result + (timestamp?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as IamInstanceProfileAssociation

        if (associationId != other.associationId) return false
        if (iamInstanceProfile != other.iamInstanceProfile) return false
        if (instanceId != other.instanceId) return false
        if (state != other.state) return false
        if (timestamp != other.timestamp) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.IamInstanceProfileAssociation = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The ID of the association.
         */
        public var associationId: kotlin.String? = null
        /**
         * The IAM instance profile.
         */
        public var iamInstanceProfile: aws.sdk.kotlin.services.ec2.model.IamInstanceProfile? = null
        /**
         * The ID of the instance.
         */
        public var instanceId: kotlin.String? = null
        /**
         * The state of the association.
         */
        public var state: aws.sdk.kotlin.services.ec2.model.IamInstanceProfileAssociationState? = null
        /**
         * The time the IAM instance profile was associated with the instance.
         */
        public var timestamp: aws.smithy.kotlin.runtime.time.Instant? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.IamInstanceProfileAssociation) : this() {
            this.associationId = x.associationId
            this.iamInstanceProfile = x.iamInstanceProfile
            this.instanceId = x.instanceId
            this.state = x.state
            this.timestamp = x.timestamp
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.IamInstanceProfileAssociation = IamInstanceProfileAssociation(this)

        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.IamInstanceProfile] inside the given [block]
         */
        public fun iamInstanceProfile(block: aws.sdk.kotlin.services.ec2.model.IamInstanceProfile.Builder.() -> kotlin.Unit) {
            this.iamInstanceProfile = aws.sdk.kotlin.services.ec2.model.IamInstanceProfile.invoke(block)
        }
    }
}
