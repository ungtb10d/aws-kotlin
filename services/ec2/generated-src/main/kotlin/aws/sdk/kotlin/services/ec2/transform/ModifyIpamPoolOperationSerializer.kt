// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.transform

import aws.sdk.kotlin.services.ec2.model.ModifyIpamPoolRequest
import aws.sdk.kotlin.services.ec2.model.RequestIpamResourceTag
import aws.smithy.kotlin.runtime.client.ExecutionContext
import aws.smithy.kotlin.runtime.http.HttpBody
import aws.smithy.kotlin.runtime.http.HttpMethod
import aws.smithy.kotlin.runtime.http.content.ByteArrayContent
import aws.smithy.kotlin.runtime.http.operation.HttpSerialize
import aws.smithy.kotlin.runtime.http.request.HttpRequestBuilder
import aws.smithy.kotlin.runtime.http.request.url
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.formurl.FormUrlFlattened
import aws.smithy.kotlin.runtime.serde.formurl.FormUrlSerialName
import aws.smithy.kotlin.runtime.serde.formurl.FormUrlSerializer
import aws.smithy.kotlin.runtime.serde.formurl.QueryLiteral
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct


internal class ModifyIpamPoolOperationSerializer: HttpSerialize<ModifyIpamPoolRequest> {
    override suspend fun serialize(context: ExecutionContext, input: ModifyIpamPoolRequest): HttpRequestBuilder {
        val builder = HttpRequestBuilder()
        builder.method = HttpMethod.POST

        builder.url {
            path = "/"
        }

        val payload = serializeModifyIpamPoolOperationBody(context, input)
        builder.body = ByteArrayContent(payload)
        if (builder.body !is HttpBody.Empty) {
            builder.headers.setMissing("Content-Type", "application/x-www-form-urlencoded")
        }
        return builder
    }
}

private fun serializeModifyIpamPoolOperationBody(context: ExecutionContext, input: ModifyIpamPoolRequest): ByteArray {
    val serializer = FormUrlSerializer()
    val ADDALLOCATIONRESOURCETAGS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, FormUrlSerialName("AddAllocationResourceTag"), FormUrlFlattened)
    val ALLOCATIONDEFAULTNETMASKLENGTH_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, FormUrlSerialName("AllocationDefaultNetmaskLength"))
    val ALLOCATIONMAXNETMASKLENGTH_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, FormUrlSerialName("AllocationMaxNetmaskLength"))
    val ALLOCATIONMINNETMASKLENGTH_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, FormUrlSerialName("AllocationMinNetmaskLength"))
    val AUTOIMPORT_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Boolean, FormUrlSerialName("AutoImport"))
    val CLEARALLOCATIONDEFAULTNETMASKLENGTH_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Boolean, FormUrlSerialName("ClearAllocationDefaultNetmaskLength"))
    val DESCRIPTION_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("Description"))
    val DRYRUN_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Boolean, FormUrlSerialName("DryRun"))
    val IPAMPOOLID_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("IpamPoolId"))
    val REMOVEALLOCATIONRESOURCETAGS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, FormUrlSerialName("RemoveAllocationResourceTag"), FormUrlFlattened)
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(FormUrlSerialName("ModifyIpamPoolRequest"))
        trait(QueryLiteral("Action", "ModifyIpamPool"))
        trait(QueryLiteral("Version", "2016-11-15"))
        field(ADDALLOCATIONRESOURCETAGS_DESCRIPTOR)
        field(ALLOCATIONDEFAULTNETMASKLENGTH_DESCRIPTOR)
        field(ALLOCATIONMAXNETMASKLENGTH_DESCRIPTOR)
        field(ALLOCATIONMINNETMASKLENGTH_DESCRIPTOR)
        field(AUTOIMPORT_DESCRIPTOR)
        field(CLEARALLOCATIONDEFAULTNETMASKLENGTH_DESCRIPTOR)
        field(DESCRIPTION_DESCRIPTOR)
        field(DRYRUN_DESCRIPTOR)
        field(IPAMPOOLID_DESCRIPTOR)
        field(REMOVEALLOCATIONRESOURCETAGS_DESCRIPTOR)
    }

    serializer.serializeStruct(OBJ_DESCRIPTOR) {
        if (input.addAllocationResourceTags != null) {
            listField(ADDALLOCATIONRESOURCETAGS_DESCRIPTOR) {
                for (el0 in input.addAllocationResourceTags) {
                    serializeSdkSerializable(asSdkSerializable(el0, ::serializeRequestIpamResourceTagDocument))
                }
            }
        }
        input.allocationDefaultNetmaskLength?.let { field(ALLOCATIONDEFAULTNETMASKLENGTH_DESCRIPTOR, it) }
        input.allocationMaxNetmaskLength?.let { field(ALLOCATIONMAXNETMASKLENGTH_DESCRIPTOR, it) }
        input.allocationMinNetmaskLength?.let { field(ALLOCATIONMINNETMASKLENGTH_DESCRIPTOR, it) }
        input.autoImport?.let { field(AUTOIMPORT_DESCRIPTOR, it) }
        input.clearAllocationDefaultNetmaskLength?.let { field(CLEARALLOCATIONDEFAULTNETMASKLENGTH_DESCRIPTOR, it) }
        input.description?.let { field(DESCRIPTION_DESCRIPTOR, it) }
        input.dryRun?.let { field(DRYRUN_DESCRIPTOR, it) }
        input.ipamPoolId?.let { field(IPAMPOOLID_DESCRIPTOR, it) }
        if (input.removeAllocationResourceTags != null) {
            listField(REMOVEALLOCATIONRESOURCETAGS_DESCRIPTOR) {
                for (el0 in input.removeAllocationResourceTags) {
                    serializeSdkSerializable(asSdkSerializable(el0, ::serializeRequestIpamResourceTagDocument))
                }
            }
        }
    }
    return serializer.toByteArray()
}
