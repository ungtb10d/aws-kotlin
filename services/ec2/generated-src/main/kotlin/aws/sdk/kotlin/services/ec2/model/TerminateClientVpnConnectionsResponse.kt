// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



public class TerminateClientVpnConnectionsResponse private constructor(builder: Builder) {
    /**
     * The ID of the Client VPN endpoint.
     */
    public val clientVpnEndpointId: kotlin.String? = builder.clientVpnEndpointId
    /**
     * The current state of the client connections.
     */
    public val connectionStatuses: List<TerminateConnectionStatus>? = builder.connectionStatuses
    /**
     * The user who established the terminated client connections.
     */
    public val username: kotlin.String? = builder.username

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.TerminateClientVpnConnectionsResponse = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("TerminateClientVpnConnectionsResponse(")
        append("clientVpnEndpointId=$clientVpnEndpointId,")
        append("connectionStatuses=$connectionStatuses,")
        append("username=$username)")
    }

    override fun hashCode(): kotlin.Int {
        var result = clientVpnEndpointId?.hashCode() ?: 0
        result = 31 * result + (connectionStatuses?.hashCode() ?: 0)
        result = 31 * result + (username?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as TerminateClientVpnConnectionsResponse

        if (clientVpnEndpointId != other.clientVpnEndpointId) return false
        if (connectionStatuses != other.connectionStatuses) return false
        if (username != other.username) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.TerminateClientVpnConnectionsResponse = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The ID of the Client VPN endpoint.
         */
        public var clientVpnEndpointId: kotlin.String? = null
        /**
         * The current state of the client connections.
         */
        public var connectionStatuses: List<TerminateConnectionStatus>? = null
        /**
         * The user who established the terminated client connections.
         */
        public var username: kotlin.String? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.TerminateClientVpnConnectionsResponse) : this() {
            this.clientVpnEndpointId = x.clientVpnEndpointId
            this.connectionStatuses = x.connectionStatuses
            this.username = x.username
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.TerminateClientVpnConnectionsResponse = TerminateClientVpnConnectionsResponse(this)
    }
}
