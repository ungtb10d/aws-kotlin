// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



public class CreateClientVpnEndpointResponse private constructor(builder: Builder) {
    /**
     * The ID of the Client VPN endpoint.
     */
    public val clientVpnEndpointId: kotlin.String? = builder.clientVpnEndpointId
    /**
     * The DNS name to be used by clients when establishing their VPN session.
     */
    public val dnsName: kotlin.String? = builder.dnsName
    /**
     * The current state of the Client VPN endpoint.
     */
    public val status: aws.sdk.kotlin.services.ec2.model.ClientVpnEndpointStatus? = builder.status

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.CreateClientVpnEndpointResponse = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("CreateClientVpnEndpointResponse(")
        append("clientVpnEndpointId=$clientVpnEndpointId,")
        append("dnsName=$dnsName,")
        append("status=$status)")
    }

    override fun hashCode(): kotlin.Int {
        var result = clientVpnEndpointId?.hashCode() ?: 0
        result = 31 * result + (dnsName?.hashCode() ?: 0)
        result = 31 * result + (status?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as CreateClientVpnEndpointResponse

        if (clientVpnEndpointId != other.clientVpnEndpointId) return false
        if (dnsName != other.dnsName) return false
        if (status != other.status) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.CreateClientVpnEndpointResponse = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The ID of the Client VPN endpoint.
         */
        public var clientVpnEndpointId: kotlin.String? = null
        /**
         * The DNS name to be used by clients when establishing their VPN session.
         */
        public var dnsName: kotlin.String? = null
        /**
         * The current state of the Client VPN endpoint.
         */
        public var status: aws.sdk.kotlin.services.ec2.model.ClientVpnEndpointStatus? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.CreateClientVpnEndpointResponse) : this() {
            this.clientVpnEndpointId = x.clientVpnEndpointId
            this.dnsName = x.dnsName
            this.status = x.status
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.CreateClientVpnEndpointResponse = CreateClientVpnEndpointResponse(this)

        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.ClientVpnEndpointStatus] inside the given [block]
         */
        public fun status(block: aws.sdk.kotlin.services.ec2.model.ClientVpnEndpointStatus.Builder.() -> kotlin.Unit) {
            this.status = aws.sdk.kotlin.services.ec2.model.ClientVpnEndpointStatus.invoke(block)
        }
    }
}
