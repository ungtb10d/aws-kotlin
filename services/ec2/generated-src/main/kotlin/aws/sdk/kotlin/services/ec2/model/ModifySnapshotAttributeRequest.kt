// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



public class ModifySnapshotAttributeRequest private constructor(builder: Builder) {
    /**
     * The snapshot attribute to modify. Only volume creation permissions can be modified.
     */
    public val attribute: aws.sdk.kotlin.services.ec2.model.SnapshotAttributeName? = builder.attribute
    /**
     * A JSON representation of the snapshot attribute modification.
     */
    public val createVolumePermission: aws.sdk.kotlin.services.ec2.model.CreateVolumePermissionModifications? = builder.createVolumePermission
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.
     */
    public val dryRun: kotlin.Boolean? = builder.dryRun
    /**
     * The group to modify for the snapshot.
     */
    public val groupNames: List<String>? = builder.groupNames
    /**
     * The type of operation to perform to the attribute.
     */
    public val operationType: aws.sdk.kotlin.services.ec2.model.OperationType? = builder.operationType
    /**
     * The ID of the snapshot.
     */
    public val snapshotId: kotlin.String? = builder.snapshotId
    /**
     * The account ID to modify for the snapshot.
     */
    public val userIds: List<String>? = builder.userIds

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.ModifySnapshotAttributeRequest = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("ModifySnapshotAttributeRequest(")
        append("attribute=$attribute,")
        append("createVolumePermission=$createVolumePermission,")
        append("dryRun=$dryRun,")
        append("groupNames=$groupNames,")
        append("operationType=$operationType,")
        append("snapshotId=$snapshotId,")
        append("userIds=$userIds)")
    }

    override fun hashCode(): kotlin.Int {
        var result = attribute?.hashCode() ?: 0
        result = 31 * result + (createVolumePermission?.hashCode() ?: 0)
        result = 31 * result + (dryRun?.hashCode() ?: 0)
        result = 31 * result + (groupNames?.hashCode() ?: 0)
        result = 31 * result + (operationType?.hashCode() ?: 0)
        result = 31 * result + (snapshotId?.hashCode() ?: 0)
        result = 31 * result + (userIds?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as ModifySnapshotAttributeRequest

        if (attribute != other.attribute) return false
        if (createVolumePermission != other.createVolumePermission) return false
        if (dryRun != other.dryRun) return false
        if (groupNames != other.groupNames) return false
        if (operationType != other.operationType) return false
        if (snapshotId != other.snapshotId) return false
        if (userIds != other.userIds) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.ModifySnapshotAttributeRequest = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The snapshot attribute to modify. Only volume creation permissions can be modified.
         */
        public var attribute: aws.sdk.kotlin.services.ec2.model.SnapshotAttributeName? = null
        /**
         * A JSON representation of the snapshot attribute modification.
         */
        public var createVolumePermission: aws.sdk.kotlin.services.ec2.model.CreateVolumePermissionModifications? = null
        /**
         * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.
         */
        public var dryRun: kotlin.Boolean? = null
        /**
         * The group to modify for the snapshot.
         */
        public var groupNames: List<String>? = null
        /**
         * The type of operation to perform to the attribute.
         */
        public var operationType: aws.sdk.kotlin.services.ec2.model.OperationType? = null
        /**
         * The ID of the snapshot.
         */
        public var snapshotId: kotlin.String? = null
        /**
         * The account ID to modify for the snapshot.
         */
        public var userIds: List<String>? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.ModifySnapshotAttributeRequest) : this() {
            this.attribute = x.attribute
            this.createVolumePermission = x.createVolumePermission
            this.dryRun = x.dryRun
            this.groupNames = x.groupNames
            this.operationType = x.operationType
            this.snapshotId = x.snapshotId
            this.userIds = x.userIds
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.ModifySnapshotAttributeRequest = ModifySnapshotAttributeRequest(this)

        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.CreateVolumePermissionModifications] inside the given [block]
         */
        public fun createVolumePermission(block: aws.sdk.kotlin.services.ec2.model.CreateVolumePermissionModifications.Builder.() -> kotlin.Unit) {
            this.createVolumePermission = aws.sdk.kotlin.services.ec2.model.CreateVolumePermissionModifications.invoke(block)
        }
    }
}
