// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



public class CreateInstanceExportTaskRequest private constructor(builder: Builder) {
    /**
     * A description for the conversion task or the resource being exported. The maximum length is 255 characters.
     */
    public val description: kotlin.String? = builder.description
    /**
     * The format and location for an export instance task.
     */
    public val exportToS3Task: aws.sdk.kotlin.services.ec2.model.ExportToS3TaskSpecification? = builder.exportToS3Task
    /**
     * The ID of the instance.
     */
    public val instanceId: kotlin.String? = builder.instanceId
    /**
     * The tags to apply to the export instance task during creation.
     */
    public val tagSpecifications: List<TagSpecification>? = builder.tagSpecifications
    /**
     * The target virtualization environment.
     */
    public val targetEnvironment: aws.sdk.kotlin.services.ec2.model.ExportEnvironment? = builder.targetEnvironment

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.CreateInstanceExportTaskRequest = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("CreateInstanceExportTaskRequest(")
        append("description=$description,")
        append("exportToS3Task=$exportToS3Task,")
        append("instanceId=$instanceId,")
        append("tagSpecifications=$tagSpecifications,")
        append("targetEnvironment=$targetEnvironment)")
    }

    override fun hashCode(): kotlin.Int {
        var result = description?.hashCode() ?: 0
        result = 31 * result + (exportToS3Task?.hashCode() ?: 0)
        result = 31 * result + (instanceId?.hashCode() ?: 0)
        result = 31 * result + (tagSpecifications?.hashCode() ?: 0)
        result = 31 * result + (targetEnvironment?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as CreateInstanceExportTaskRequest

        if (description != other.description) return false
        if (exportToS3Task != other.exportToS3Task) return false
        if (instanceId != other.instanceId) return false
        if (tagSpecifications != other.tagSpecifications) return false
        if (targetEnvironment != other.targetEnvironment) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.CreateInstanceExportTaskRequest = Builder(this).apply(block).build()

    public class Builder {
        /**
         * A description for the conversion task or the resource being exported. The maximum length is 255 characters.
         */
        public var description: kotlin.String? = null
        /**
         * The format and location for an export instance task.
         */
        public var exportToS3Task: aws.sdk.kotlin.services.ec2.model.ExportToS3TaskSpecification? = null
        /**
         * The ID of the instance.
         */
        public var instanceId: kotlin.String? = null
        /**
         * The tags to apply to the export instance task during creation.
         */
        public var tagSpecifications: List<TagSpecification>? = null
        /**
         * The target virtualization environment.
         */
        public var targetEnvironment: aws.sdk.kotlin.services.ec2.model.ExportEnvironment? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.CreateInstanceExportTaskRequest) : this() {
            this.description = x.description
            this.exportToS3Task = x.exportToS3Task
            this.instanceId = x.instanceId
            this.tagSpecifications = x.tagSpecifications
            this.targetEnvironment = x.targetEnvironment
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.CreateInstanceExportTaskRequest = CreateInstanceExportTaskRequest(this)

        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.ExportToS3TaskSpecification] inside the given [block]
         */
        public fun exportToS3Task(block: aws.sdk.kotlin.services.ec2.model.ExportToS3TaskSpecification.Builder.() -> kotlin.Unit) {
            this.exportToS3Task = aws.sdk.kotlin.services.ec2.model.ExportToS3TaskSpecification.invoke(block)
        }
    }
}
