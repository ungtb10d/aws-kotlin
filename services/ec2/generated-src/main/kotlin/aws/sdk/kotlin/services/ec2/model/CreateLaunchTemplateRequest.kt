// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



public class CreateLaunchTemplateRequest private constructor(builder: Builder) {
    /**
     * Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see [Ensuring idempotency](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html).
     *
     * Constraint: Maximum 128 ASCII characters.
     */
    public val clientToken: kotlin.String? = builder.clientToken
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.
     */
    public val dryRun: kotlin.Boolean? = builder.dryRun
    /**
     * The information for the launch template.
     */
    public val launchTemplateData: aws.sdk.kotlin.services.ec2.model.RequestLaunchTemplateData? = builder.launchTemplateData
    /**
     * A name for the launch template.
     */
    public val launchTemplateName: kotlin.String? = builder.launchTemplateName
    /**
     * The tags to apply to the launch template on creation. To tag the launch template, the resource type must be `launch-template`.
     *
     * To specify the tags for the resources that are created when an instance is launched, you must use the `TagSpecifications` parameter in the [launch template data](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestLaunchTemplateData.html) structure.
     */
    public val tagSpecifications: List<TagSpecification>? = builder.tagSpecifications
    /**
     * A description for the first version of the launch template.
     */
    public val versionDescription: kotlin.String? = builder.versionDescription

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.CreateLaunchTemplateRequest = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("CreateLaunchTemplateRequest(")
        append("clientToken=$clientToken,")
        append("dryRun=$dryRun,")
        append("launchTemplateData=$launchTemplateData,")
        append("launchTemplateName=$launchTemplateName,")
        append("tagSpecifications=$tagSpecifications,")
        append("versionDescription=$versionDescription)")
    }

    override fun hashCode(): kotlin.Int {
        var result = clientToken?.hashCode() ?: 0
        result = 31 * result + (dryRun?.hashCode() ?: 0)
        result = 31 * result + (launchTemplateData?.hashCode() ?: 0)
        result = 31 * result + (launchTemplateName?.hashCode() ?: 0)
        result = 31 * result + (tagSpecifications?.hashCode() ?: 0)
        result = 31 * result + (versionDescription?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as CreateLaunchTemplateRequest

        if (clientToken != other.clientToken) return false
        if (dryRun != other.dryRun) return false
        if (launchTemplateData != other.launchTemplateData) return false
        if (launchTemplateName != other.launchTemplateName) return false
        if (tagSpecifications != other.tagSpecifications) return false
        if (versionDescription != other.versionDescription) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.CreateLaunchTemplateRequest = Builder(this).apply(block).build()

    public class Builder {
        /**
         * Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see [Ensuring idempotency](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html).
         *
         * Constraint: Maximum 128 ASCII characters.
         */
        public var clientToken: kotlin.String? = null
        /**
         * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.
         */
        public var dryRun: kotlin.Boolean? = null
        /**
         * The information for the launch template.
         */
        public var launchTemplateData: aws.sdk.kotlin.services.ec2.model.RequestLaunchTemplateData? = null
        /**
         * A name for the launch template.
         */
        public var launchTemplateName: kotlin.String? = null
        /**
         * The tags to apply to the launch template on creation. To tag the launch template, the resource type must be `launch-template`.
         *
         * To specify the tags for the resources that are created when an instance is launched, you must use the `TagSpecifications` parameter in the [launch template data](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestLaunchTemplateData.html) structure.
         */
        public var tagSpecifications: List<TagSpecification>? = null
        /**
         * A description for the first version of the launch template.
         */
        public var versionDescription: kotlin.String? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.CreateLaunchTemplateRequest) : this() {
            this.clientToken = x.clientToken
            this.dryRun = x.dryRun
            this.launchTemplateData = x.launchTemplateData
            this.launchTemplateName = x.launchTemplateName
            this.tagSpecifications = x.tagSpecifications
            this.versionDescription = x.versionDescription
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.CreateLaunchTemplateRequest = CreateLaunchTemplateRequest(this)

        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.RequestLaunchTemplateData] inside the given [block]
         */
        public fun launchTemplateData(block: aws.sdk.kotlin.services.ec2.model.RequestLaunchTemplateData.Builder.() -> kotlin.Unit) {
            this.launchTemplateData = aws.sdk.kotlin.services.ec2.model.RequestLaunchTemplateData.invoke(block)
        }
    }
}
