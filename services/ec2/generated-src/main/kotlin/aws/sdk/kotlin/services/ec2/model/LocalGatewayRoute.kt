// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes a route for a local gateway route table.
 */
public class LocalGatewayRoute private constructor(builder: Builder) {
    /**
     * The ID of the customer-owned address pool.
     */
    public val coipPoolId: kotlin.String? = builder.coipPoolId
    /**
     * The CIDR block used for destination matches.
     */
    public val destinationCidrBlock: kotlin.String? = builder.destinationCidrBlock
    /**
     * The Amazon Resource Name (ARN) of the local gateway route table.
     */
    public val localGatewayRouteTableArn: kotlin.String? = builder.localGatewayRouteTableArn
    /**
     * The ID of the local gateway route table.
     */
    public val localGatewayRouteTableId: kotlin.String? = builder.localGatewayRouteTableId
    /**
     * The ID of the virtual interface group.
     */
    public val localGatewayVirtualInterfaceGroupId: kotlin.String? = builder.localGatewayVirtualInterfaceGroupId
    /**
     * The ID of the network interface.
     */
    public val networkInterfaceId: kotlin.String? = builder.networkInterfaceId
    /**
     * The ID of the Amazon Web Services account that owns the local gateway route.
     */
    public val ownerId: kotlin.String? = builder.ownerId
    /**
     * The state of the route.
     */
    public val state: aws.sdk.kotlin.services.ec2.model.LocalGatewayRouteState? = builder.state
    /**
     * The ID of the subnet.
     */
    public val subnetId: kotlin.String? = builder.subnetId
    /**
     * The route type.
     */
    public val type: aws.sdk.kotlin.services.ec2.model.LocalGatewayRouteType? = builder.type

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.LocalGatewayRoute = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("LocalGatewayRoute(")
        append("coipPoolId=$coipPoolId,")
        append("destinationCidrBlock=$destinationCidrBlock,")
        append("localGatewayRouteTableArn=$localGatewayRouteTableArn,")
        append("localGatewayRouteTableId=$localGatewayRouteTableId,")
        append("localGatewayVirtualInterfaceGroupId=$localGatewayVirtualInterfaceGroupId,")
        append("networkInterfaceId=$networkInterfaceId,")
        append("ownerId=$ownerId,")
        append("state=$state,")
        append("subnetId=$subnetId,")
        append("type=$type)")
    }

    override fun hashCode(): kotlin.Int {
        var result = coipPoolId?.hashCode() ?: 0
        result = 31 * result + (destinationCidrBlock?.hashCode() ?: 0)
        result = 31 * result + (localGatewayRouteTableArn?.hashCode() ?: 0)
        result = 31 * result + (localGatewayRouteTableId?.hashCode() ?: 0)
        result = 31 * result + (localGatewayVirtualInterfaceGroupId?.hashCode() ?: 0)
        result = 31 * result + (networkInterfaceId?.hashCode() ?: 0)
        result = 31 * result + (ownerId?.hashCode() ?: 0)
        result = 31 * result + (state?.hashCode() ?: 0)
        result = 31 * result + (subnetId?.hashCode() ?: 0)
        result = 31 * result + (type?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as LocalGatewayRoute

        if (coipPoolId != other.coipPoolId) return false
        if (destinationCidrBlock != other.destinationCidrBlock) return false
        if (localGatewayRouteTableArn != other.localGatewayRouteTableArn) return false
        if (localGatewayRouteTableId != other.localGatewayRouteTableId) return false
        if (localGatewayVirtualInterfaceGroupId != other.localGatewayVirtualInterfaceGroupId) return false
        if (networkInterfaceId != other.networkInterfaceId) return false
        if (ownerId != other.ownerId) return false
        if (state != other.state) return false
        if (subnetId != other.subnetId) return false
        if (type != other.type) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.LocalGatewayRoute = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The ID of the customer-owned address pool.
         */
        public var coipPoolId: kotlin.String? = null
        /**
         * The CIDR block used for destination matches.
         */
        public var destinationCidrBlock: kotlin.String? = null
        /**
         * The Amazon Resource Name (ARN) of the local gateway route table.
         */
        public var localGatewayRouteTableArn: kotlin.String? = null
        /**
         * The ID of the local gateway route table.
         */
        public var localGatewayRouteTableId: kotlin.String? = null
        /**
         * The ID of the virtual interface group.
         */
        public var localGatewayVirtualInterfaceGroupId: kotlin.String? = null
        /**
         * The ID of the network interface.
         */
        public var networkInterfaceId: kotlin.String? = null
        /**
         * The ID of the Amazon Web Services account that owns the local gateway route.
         */
        public var ownerId: kotlin.String? = null
        /**
         * The state of the route.
         */
        public var state: aws.sdk.kotlin.services.ec2.model.LocalGatewayRouteState? = null
        /**
         * The ID of the subnet.
         */
        public var subnetId: kotlin.String? = null
        /**
         * The route type.
         */
        public var type: aws.sdk.kotlin.services.ec2.model.LocalGatewayRouteType? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.LocalGatewayRoute) : this() {
            this.coipPoolId = x.coipPoolId
            this.destinationCidrBlock = x.destinationCidrBlock
            this.localGatewayRouteTableArn = x.localGatewayRouteTableArn
            this.localGatewayRouteTableId = x.localGatewayRouteTableId
            this.localGatewayVirtualInterfaceGroupId = x.localGatewayVirtualInterfaceGroupId
            this.networkInterfaceId = x.networkInterfaceId
            this.ownerId = x.ownerId
            this.state = x.state
            this.subnetId = x.subnetId
            this.type = x.type
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.LocalGatewayRoute = LocalGatewayRoute(this)
    }
}
