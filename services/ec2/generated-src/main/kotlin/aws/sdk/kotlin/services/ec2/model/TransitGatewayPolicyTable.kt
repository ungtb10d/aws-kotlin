// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model

import aws.smithy.kotlin.runtime.time.Instant

/**
 * Describes a transit gateway policy table.
 */
public class TransitGatewayPolicyTable private constructor(builder: Builder) {
    /**
     * The timestamp when the transit gateway policy table was created.
     */
    public val creationTime: aws.smithy.kotlin.runtime.time.Instant? = builder.creationTime
    /**
     * The state of the transit gateway policy table
     */
    public val state: aws.sdk.kotlin.services.ec2.model.TransitGatewayPolicyTableState? = builder.state
    /**
     * he key-value pairs associated with the transit gateway policy table.
     */
    public val tags: List<Tag>? = builder.tags
    /**
     * The ID of the transit gateway.
     */
    public val transitGatewayId: kotlin.String? = builder.transitGatewayId
    /**
     * The ID of the transit gateway policy table.
     */
    public val transitGatewayPolicyTableId: kotlin.String? = builder.transitGatewayPolicyTableId

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.TransitGatewayPolicyTable = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("TransitGatewayPolicyTable(")
        append("creationTime=$creationTime,")
        append("state=$state,")
        append("tags=$tags,")
        append("transitGatewayId=$transitGatewayId,")
        append("transitGatewayPolicyTableId=$transitGatewayPolicyTableId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = creationTime?.hashCode() ?: 0
        result = 31 * result + (state?.hashCode() ?: 0)
        result = 31 * result + (tags?.hashCode() ?: 0)
        result = 31 * result + (transitGatewayId?.hashCode() ?: 0)
        result = 31 * result + (transitGatewayPolicyTableId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as TransitGatewayPolicyTable

        if (creationTime != other.creationTime) return false
        if (state != other.state) return false
        if (tags != other.tags) return false
        if (transitGatewayId != other.transitGatewayId) return false
        if (transitGatewayPolicyTableId != other.transitGatewayPolicyTableId) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.TransitGatewayPolicyTable = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The timestamp when the transit gateway policy table was created.
         */
        public var creationTime: aws.smithy.kotlin.runtime.time.Instant? = null
        /**
         * The state of the transit gateway policy table
         */
        public var state: aws.sdk.kotlin.services.ec2.model.TransitGatewayPolicyTableState? = null
        /**
         * he key-value pairs associated with the transit gateway policy table.
         */
        public var tags: List<Tag>? = null
        /**
         * The ID of the transit gateway.
         */
        public var transitGatewayId: kotlin.String? = null
        /**
         * The ID of the transit gateway policy table.
         */
        public var transitGatewayPolicyTableId: kotlin.String? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.TransitGatewayPolicyTable) : this() {
            this.creationTime = x.creationTime
            this.state = x.state
            this.tags = x.tags
            this.transitGatewayId = x.transitGatewayId
            this.transitGatewayPolicyTableId = x.transitGatewayPolicyTableId
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.TransitGatewayPolicyTable = TransitGatewayPolicyTable(this)
    }
}
