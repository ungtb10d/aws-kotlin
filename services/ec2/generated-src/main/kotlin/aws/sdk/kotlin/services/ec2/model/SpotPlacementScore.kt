// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * The Spot placement score for this Region or Availability Zone. The score is calculated based on the assumption that the `capacity-optimized` allocation strategy is used and that all of the Availability Zones in the Region can be used.
 */
public class SpotPlacementScore private constructor(builder: Builder) {
    /**
     * The Availability Zone.
     */
    public val availabilityZoneId: kotlin.String? = builder.availabilityZoneId
    /**
     * The Region.
     */
    public val region: kotlin.String? = builder.region
    /**
     * The placement score, on a scale from `1` to `10`. A score of `10` indicates that your Spot request is highly likely to succeed in this Region or Availability Zone. A score of `1` indicates that your Spot request is not likely to succeed.
     */
    public val score: kotlin.Int? = builder.score

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.SpotPlacementScore = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("SpotPlacementScore(")
        append("availabilityZoneId=$availabilityZoneId,")
        append("region=$region,")
        append("score=$score)")
    }

    override fun hashCode(): kotlin.Int {
        var result = availabilityZoneId?.hashCode() ?: 0
        result = 31 * result + (region?.hashCode() ?: 0)
        result = 31 * result + (score ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as SpotPlacementScore

        if (availabilityZoneId != other.availabilityZoneId) return false
        if (region != other.region) return false
        if (score != other.score) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.SpotPlacementScore = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The Availability Zone.
         */
        public var availabilityZoneId: kotlin.String? = null
        /**
         * The Region.
         */
        public var region: kotlin.String? = null
        /**
         * The placement score, on a scale from `1` to `10`. A score of `10` indicates that your Spot request is highly likely to succeed in this Region or Availability Zone. A score of `1` indicates that your Spot request is not likely to succeed.
         */
        public var score: kotlin.Int? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.SpotPlacementScore) : this() {
            this.availabilityZoneId = x.availabilityZoneId
            this.region = x.region
            this.score = x.score
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.SpotPlacementScore = SpotPlacementScore(this)
    }
}
