// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



public class ReleaseIpamPoolAllocationRequest private constructor(builder: Builder) {
    /**
     * The CIDR of the allocation you want to release.
     */
    public val cidr: kotlin.String? = builder.cidr
    /**
     * A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.
     */
    public val dryRun: kotlin.Boolean? = builder.dryRun
    /**
     * The ID of the allocation.
     */
    public val ipamPoolAllocationId: kotlin.String? = builder.ipamPoolAllocationId
    /**
     * The ID of the IPAM pool which contains the allocation you want to release.
     */
    public val ipamPoolId: kotlin.String? = builder.ipamPoolId

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.ReleaseIpamPoolAllocationRequest = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("ReleaseIpamPoolAllocationRequest(")
        append("cidr=$cidr,")
        append("dryRun=$dryRun,")
        append("ipamPoolAllocationId=$ipamPoolAllocationId,")
        append("ipamPoolId=$ipamPoolId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = cidr?.hashCode() ?: 0
        result = 31 * result + (dryRun?.hashCode() ?: 0)
        result = 31 * result + (ipamPoolAllocationId?.hashCode() ?: 0)
        result = 31 * result + (ipamPoolId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as ReleaseIpamPoolAllocationRequest

        if (cidr != other.cidr) return false
        if (dryRun != other.dryRun) return false
        if (ipamPoolAllocationId != other.ipamPoolAllocationId) return false
        if (ipamPoolId != other.ipamPoolId) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.ReleaseIpamPoolAllocationRequest = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The CIDR of the allocation you want to release.
         */
        public var cidr: kotlin.String? = null
        /**
         * A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.
         */
        public var dryRun: kotlin.Boolean? = null
        /**
         * The ID of the allocation.
         */
        public var ipamPoolAllocationId: kotlin.String? = null
        /**
         * The ID of the IPAM pool which contains the allocation you want to release.
         */
        public var ipamPoolId: kotlin.String? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.ReleaseIpamPoolAllocationRequest) : this() {
            this.cidr = x.cidr
            this.dryRun = x.dryRun
            this.ipamPoolAllocationId = x.ipamPoolAllocationId
            this.ipamPoolId = x.ipamPoolId
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.ReleaseIpamPoolAllocationRequest = ReleaseIpamPoolAllocationRequest(this)
    }
}
