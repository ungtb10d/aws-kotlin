// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * The error codes and error messages that are returned for the parameters or parameter combinations that are not valid when a new launch template or new version of a launch template is created.
 */
public class ValidationWarning private constructor(builder: Builder) {
    /**
     * The error codes and error messages.
     */
    public val errors: List<ValidationError>? = builder.errors

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.ValidationWarning = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("ValidationWarning(")
        append("errors=$errors)")
    }

    override fun hashCode(): kotlin.Int {
        var result = errors?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as ValidationWarning

        if (errors != other.errors) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.ValidationWarning = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The error codes and error messages.
         */
        public var errors: List<ValidationError>? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.ValidationWarning) : this() {
            this.errors = x.errors
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.ValidationWarning = ValidationWarning(this)
    }
}
