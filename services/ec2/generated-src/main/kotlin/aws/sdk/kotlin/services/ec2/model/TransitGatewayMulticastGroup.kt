// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes the transit gateway multicast group resources.
 */
public class TransitGatewayMulticastGroup private constructor(builder: Builder) {
    /**
     * The IP address assigned to the transit gateway multicast group.
     */
    public val groupIpAddress: kotlin.String? = builder.groupIpAddress
    /**
     * Indicates that the resource is a transit gateway multicast group member.
     */
    public val groupMember: kotlin.Boolean? = builder.groupMember
    /**
     * Indicates that the resource is a transit gateway multicast group member.
     */
    public val groupSource: kotlin.Boolean? = builder.groupSource
    /**
     * The member type (for example, `static`).
     */
    public val memberType: aws.sdk.kotlin.services.ec2.model.MembershipType? = builder.memberType
    /**
     * The ID of the transit gateway attachment.
     */
    public val networkInterfaceId: kotlin.String? = builder.networkInterfaceId
    /**
     * The ID of the resource.
     */
    public val resourceId: kotlin.String? = builder.resourceId
    /**
     * The ID of the Amazon Web Services account that owns the transit gateway multicast domain group resource.
     */
    public val resourceOwnerId: kotlin.String? = builder.resourceOwnerId
    /**
     * The type of resource, for example a VPC attachment.
     */
    public val resourceType: aws.sdk.kotlin.services.ec2.model.TransitGatewayAttachmentResourceType? = builder.resourceType
    /**
     * The source type.
     */
    public val sourceType: aws.sdk.kotlin.services.ec2.model.MembershipType? = builder.sourceType
    /**
     * The ID of the subnet.
     */
    public val subnetId: kotlin.String? = builder.subnetId
    /**
     * The ID of the transit gateway attachment.
     */
    public val transitGatewayAttachmentId: kotlin.String? = builder.transitGatewayAttachmentId

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.TransitGatewayMulticastGroup = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("TransitGatewayMulticastGroup(")
        append("groupIpAddress=$groupIpAddress,")
        append("groupMember=$groupMember,")
        append("groupSource=$groupSource,")
        append("memberType=$memberType,")
        append("networkInterfaceId=$networkInterfaceId,")
        append("resourceId=$resourceId,")
        append("resourceOwnerId=$resourceOwnerId,")
        append("resourceType=$resourceType,")
        append("sourceType=$sourceType,")
        append("subnetId=$subnetId,")
        append("transitGatewayAttachmentId=$transitGatewayAttachmentId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = groupIpAddress?.hashCode() ?: 0
        result = 31 * result + (groupMember?.hashCode() ?: 0)
        result = 31 * result + (groupSource?.hashCode() ?: 0)
        result = 31 * result + (memberType?.hashCode() ?: 0)
        result = 31 * result + (networkInterfaceId?.hashCode() ?: 0)
        result = 31 * result + (resourceId?.hashCode() ?: 0)
        result = 31 * result + (resourceOwnerId?.hashCode() ?: 0)
        result = 31 * result + (resourceType?.hashCode() ?: 0)
        result = 31 * result + (sourceType?.hashCode() ?: 0)
        result = 31 * result + (subnetId?.hashCode() ?: 0)
        result = 31 * result + (transitGatewayAttachmentId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as TransitGatewayMulticastGroup

        if (groupIpAddress != other.groupIpAddress) return false
        if (groupMember != other.groupMember) return false
        if (groupSource != other.groupSource) return false
        if (memberType != other.memberType) return false
        if (networkInterfaceId != other.networkInterfaceId) return false
        if (resourceId != other.resourceId) return false
        if (resourceOwnerId != other.resourceOwnerId) return false
        if (resourceType != other.resourceType) return false
        if (sourceType != other.sourceType) return false
        if (subnetId != other.subnetId) return false
        if (transitGatewayAttachmentId != other.transitGatewayAttachmentId) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.TransitGatewayMulticastGroup = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The IP address assigned to the transit gateway multicast group.
         */
        public var groupIpAddress: kotlin.String? = null
        /**
         * Indicates that the resource is a transit gateway multicast group member.
         */
        public var groupMember: kotlin.Boolean? = null
        /**
         * Indicates that the resource is a transit gateway multicast group member.
         */
        public var groupSource: kotlin.Boolean? = null
        /**
         * The member type (for example, `static`).
         */
        public var memberType: aws.sdk.kotlin.services.ec2.model.MembershipType? = null
        /**
         * The ID of the transit gateway attachment.
         */
        public var networkInterfaceId: kotlin.String? = null
        /**
         * The ID of the resource.
         */
        public var resourceId: kotlin.String? = null
        /**
         * The ID of the Amazon Web Services account that owns the transit gateway multicast domain group resource.
         */
        public var resourceOwnerId: kotlin.String? = null
        /**
         * The type of resource, for example a VPC attachment.
         */
        public var resourceType: aws.sdk.kotlin.services.ec2.model.TransitGatewayAttachmentResourceType? = null
        /**
         * The source type.
         */
        public var sourceType: aws.sdk.kotlin.services.ec2.model.MembershipType? = null
        /**
         * The ID of the subnet.
         */
        public var subnetId: kotlin.String? = null
        /**
         * The ID of the transit gateway attachment.
         */
        public var transitGatewayAttachmentId: kotlin.String? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.TransitGatewayMulticastGroup) : this() {
            this.groupIpAddress = x.groupIpAddress
            this.groupMember = x.groupMember
            this.groupSource = x.groupSource
            this.memberType = x.memberType
            this.networkInterfaceId = x.networkInterfaceId
            this.resourceId = x.resourceId
            this.resourceOwnerId = x.resourceOwnerId
            this.resourceType = x.resourceType
            this.sourceType = x.sourceType
            this.subnetId = x.subnetId
            this.transitGatewayAttachmentId = x.transitGatewayAttachmentId
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.TransitGatewayMulticastGroup = TransitGatewayMulticastGroup(this)
    }
}
