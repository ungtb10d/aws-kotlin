// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



public class ModifyVpcAttributeRequest private constructor(builder: Builder) {
    /**
     * Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not.
     *
     * You cannot modify the DNS resolution and DNS hostnames attributes in the same request. Use separate requests for each attribute. You can only enable DNS hostnames if you've enabled DNS support.
     */
    public val enableDnsHostnames: aws.sdk.kotlin.services.ec2.model.AttributeBooleanValue? = builder.enableDnsHostnames
    /**
     * Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range "plus two" succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled.
     *
     * You cannot modify the DNS resolution and DNS hostnames attributes in the same request. Use separate requests for each attribute.
     */
    public val enableDnsSupport: aws.sdk.kotlin.services.ec2.model.AttributeBooleanValue? = builder.enableDnsSupport
    /**
     * The ID of the VPC.
     */
    public val vpcId: kotlin.String? = builder.vpcId

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.ModifyVpcAttributeRequest = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("ModifyVpcAttributeRequest(")
        append("enableDnsHostnames=$enableDnsHostnames,")
        append("enableDnsSupport=$enableDnsSupport,")
        append("vpcId=$vpcId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = enableDnsHostnames?.hashCode() ?: 0
        result = 31 * result + (enableDnsSupport?.hashCode() ?: 0)
        result = 31 * result + (vpcId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as ModifyVpcAttributeRequest

        if (enableDnsHostnames != other.enableDnsHostnames) return false
        if (enableDnsSupport != other.enableDnsSupport) return false
        if (vpcId != other.vpcId) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.ModifyVpcAttributeRequest = Builder(this).apply(block).build()

    public class Builder {
        /**
         * Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not.
         *
         * You cannot modify the DNS resolution and DNS hostnames attributes in the same request. Use separate requests for each attribute. You can only enable DNS hostnames if you've enabled DNS support.
         */
        public var enableDnsHostnames: aws.sdk.kotlin.services.ec2.model.AttributeBooleanValue? = null
        /**
         * Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range "plus two" succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled.
         *
         * You cannot modify the DNS resolution and DNS hostnames attributes in the same request. Use separate requests for each attribute.
         */
        public var enableDnsSupport: aws.sdk.kotlin.services.ec2.model.AttributeBooleanValue? = null
        /**
         * The ID of the VPC.
         */
        public var vpcId: kotlin.String? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.ModifyVpcAttributeRequest) : this() {
            this.enableDnsHostnames = x.enableDnsHostnames
            this.enableDnsSupport = x.enableDnsSupport
            this.vpcId = x.vpcId
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.ModifyVpcAttributeRequest = ModifyVpcAttributeRequest(this)

        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.AttributeBooleanValue] inside the given [block]
         */
        public fun enableDnsHostnames(block: aws.sdk.kotlin.services.ec2.model.AttributeBooleanValue.Builder.() -> kotlin.Unit) {
            this.enableDnsHostnames = aws.sdk.kotlin.services.ec2.model.AttributeBooleanValue.invoke(block)
        }

        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.AttributeBooleanValue] inside the given [block]
         */
        public fun enableDnsSupport(block: aws.sdk.kotlin.services.ec2.model.AttributeBooleanValue.Builder.() -> kotlin.Unit) {
            this.enableDnsSupport = aws.sdk.kotlin.services.ec2.model.AttributeBooleanValue.invoke(block)
        }
    }
}
