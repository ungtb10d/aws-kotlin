// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes a path.
 */
public class AccessScopePath private constructor(builder: Builder) {
    /**
     * The destination.
     */
    public val destination: aws.sdk.kotlin.services.ec2.model.PathStatement? = builder.destination
    /**
     * The source.
     */
    public val source: aws.sdk.kotlin.services.ec2.model.PathStatement? = builder.source
    /**
     * The through resources.
     */
    public val throughResources: List<ThroughResourcesStatement>? = builder.throughResources

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.AccessScopePath = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("AccessScopePath(")
        append("destination=$destination,")
        append("source=$source,")
        append("throughResources=$throughResources)")
    }

    override fun hashCode(): kotlin.Int {
        var result = destination?.hashCode() ?: 0
        result = 31 * result + (source?.hashCode() ?: 0)
        result = 31 * result + (throughResources?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as AccessScopePath

        if (destination != other.destination) return false
        if (source != other.source) return false
        if (throughResources != other.throughResources) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.AccessScopePath = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The destination.
         */
        public var destination: aws.sdk.kotlin.services.ec2.model.PathStatement? = null
        /**
         * The source.
         */
        public var source: aws.sdk.kotlin.services.ec2.model.PathStatement? = null
        /**
         * The through resources.
         */
        public var throughResources: List<ThroughResourcesStatement>? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.AccessScopePath) : this() {
            this.destination = x.destination
            this.source = x.source
            this.throughResources = x.throughResources
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.AccessScopePath = AccessScopePath(this)

        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.PathStatement] inside the given [block]
         */
        public fun destination(block: aws.sdk.kotlin.services.ec2.model.PathStatement.Builder.() -> kotlin.Unit) {
            this.destination = aws.sdk.kotlin.services.ec2.model.PathStatement.invoke(block)
        }

        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.PathStatement] inside the given [block]
         */
        public fun source(block: aws.sdk.kotlin.services.ec2.model.PathStatement.Builder.() -> kotlin.Unit) {
            this.source = aws.sdk.kotlin.services.ec2.model.PathStatement.invoke(block)
        }
    }
}
