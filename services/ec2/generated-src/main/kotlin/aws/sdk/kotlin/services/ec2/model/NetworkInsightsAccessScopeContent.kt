// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes the Network Access Scope content.
 */
public class NetworkInsightsAccessScopeContent private constructor(builder: Builder) {
    /**
     * The paths to exclude.
     */
    public val excludePaths: List<AccessScopePath>? = builder.excludePaths
    /**
     * The paths to match.
     */
    public val matchPaths: List<AccessScopePath>? = builder.matchPaths
    /**
     * The ID of the Network Access Scope.
     */
    public val networkInsightsAccessScopeId: kotlin.String? = builder.networkInsightsAccessScopeId

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.NetworkInsightsAccessScopeContent = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("NetworkInsightsAccessScopeContent(")
        append("excludePaths=$excludePaths,")
        append("matchPaths=$matchPaths,")
        append("networkInsightsAccessScopeId=$networkInsightsAccessScopeId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = excludePaths?.hashCode() ?: 0
        result = 31 * result + (matchPaths?.hashCode() ?: 0)
        result = 31 * result + (networkInsightsAccessScopeId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as NetworkInsightsAccessScopeContent

        if (excludePaths != other.excludePaths) return false
        if (matchPaths != other.matchPaths) return false
        if (networkInsightsAccessScopeId != other.networkInsightsAccessScopeId) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.NetworkInsightsAccessScopeContent = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The paths to exclude.
         */
        public var excludePaths: List<AccessScopePath>? = null
        /**
         * The paths to match.
         */
        public var matchPaths: List<AccessScopePath>? = null
        /**
         * The ID of the Network Access Scope.
         */
        public var networkInsightsAccessScopeId: kotlin.String? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.NetworkInsightsAccessScopeContent) : this() {
            this.excludePaths = x.excludePaths
            this.matchPaths = x.matchPaths
            this.networkInsightsAccessScopeId = x.networkInsightsAccessScopeId
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.NetworkInsightsAccessScopeContent = NetworkInsightsAccessScopeContent(this)
    }
}
