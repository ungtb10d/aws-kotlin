// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model

import aws.smithy.kotlin.runtime.time.Instant

/**
 * Describes integration options for Amazon Athena.
 */
public class AthenaIntegration private constructor(builder: Builder) {
    /**
     * The location in Amazon S3 to store the generated CloudFormation template.
     */
    public val integrationResultS3DestinationArn: kotlin.String? = builder.integrationResultS3DestinationArn
    /**
     * The end date for the partition.
     */
    public val partitionEndDate: aws.smithy.kotlin.runtime.time.Instant? = builder.partitionEndDate
    /**
     * The schedule for adding new partitions to the table.
     */
    public val partitionLoadFrequency: aws.sdk.kotlin.services.ec2.model.PartitionLoadFrequency? = builder.partitionLoadFrequency
    /**
     * The start date for the partition.
     */
    public val partitionStartDate: aws.smithy.kotlin.runtime.time.Instant? = builder.partitionStartDate

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.AthenaIntegration = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("AthenaIntegration(")
        append("integrationResultS3DestinationArn=$integrationResultS3DestinationArn,")
        append("partitionEndDate=$partitionEndDate,")
        append("partitionLoadFrequency=$partitionLoadFrequency,")
        append("partitionStartDate=$partitionStartDate)")
    }

    override fun hashCode(): kotlin.Int {
        var result = integrationResultS3DestinationArn?.hashCode() ?: 0
        result = 31 * result + (partitionEndDate?.hashCode() ?: 0)
        result = 31 * result + (partitionLoadFrequency?.hashCode() ?: 0)
        result = 31 * result + (partitionStartDate?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as AthenaIntegration

        if (integrationResultS3DestinationArn != other.integrationResultS3DestinationArn) return false
        if (partitionEndDate != other.partitionEndDate) return false
        if (partitionLoadFrequency != other.partitionLoadFrequency) return false
        if (partitionStartDate != other.partitionStartDate) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.AthenaIntegration = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The location in Amazon S3 to store the generated CloudFormation template.
         */
        public var integrationResultS3DestinationArn: kotlin.String? = null
        /**
         * The end date for the partition.
         */
        public var partitionEndDate: aws.smithy.kotlin.runtime.time.Instant? = null
        /**
         * The schedule for adding new partitions to the table.
         */
        public var partitionLoadFrequency: aws.sdk.kotlin.services.ec2.model.PartitionLoadFrequency? = null
        /**
         * The start date for the partition.
         */
        public var partitionStartDate: aws.smithy.kotlin.runtime.time.Instant? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.AthenaIntegration) : this() {
            this.integrationResultS3DestinationArn = x.integrationResultS3DestinationArn
            this.partitionEndDate = x.partitionEndDate
            this.partitionLoadFrequency = x.partitionLoadFrequency
            this.partitionStartDate = x.partitionStartDate
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.AthenaIntegration = AthenaIntegration(this)
    }
}
