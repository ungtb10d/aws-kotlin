// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.transform

import aws.sdk.kotlin.services.ec2.model.AccessScopePathRequest
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.Serializer
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.formurl.FormUrlFlattened
import aws.smithy.kotlin.runtime.serde.formurl.FormUrlSerialName
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct

internal fun serializeAccessScopePathRequestDocument(serializer: Serializer, input: AccessScopePathRequest) {
    val DESTINATION_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, FormUrlSerialName("Destination"))
    val SOURCE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, FormUrlSerialName("Source"))
    val THROUGHRESOURCES_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, FormUrlSerialName("ThroughResource"), FormUrlFlattened)
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(FormUrlSerialName("AccessScopePathRequest"))
        field(DESTINATION_DESCRIPTOR)
        field(SOURCE_DESCRIPTOR)
        field(THROUGHRESOURCES_DESCRIPTOR)
    }

    serializer.serializeStruct(OBJ_DESCRIPTOR) {
        input.source?.let { field(SOURCE_DESCRIPTOR, it, ::serializePathStatementRequestDocument) }
        input.destination?.let { field(DESTINATION_DESCRIPTOR, it, ::serializePathStatementRequestDocument) }
        if (input.throughResources != null) {
            listField(THROUGHRESOURCES_DESCRIPTOR) {
                for (el0 in input.throughResources) {
                    serializeSdkSerializable(asSdkSerializable(el0, ::serializeThroughResourcesStatementRequestDocument))
                }
            }
        }
    }
}
