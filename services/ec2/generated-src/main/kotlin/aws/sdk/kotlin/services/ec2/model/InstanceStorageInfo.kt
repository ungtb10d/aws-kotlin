// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes the instance store features that are supported by the instance type.
 */
public class InstanceStorageInfo private constructor(builder: Builder) {
    /**
     * Describes the disks that are available for the instance type.
     */
    public val disks: List<DiskInfo>? = builder.disks
    /**
     * Indicates whether data is encrypted at rest.
     */
    public val encryptionSupport: aws.sdk.kotlin.services.ec2.model.InstanceStorageEncryptionSupport? = builder.encryptionSupport
    /**
     * Indicates whether non-volatile memory express (NVMe) is supported.
     */
    public val nvmeSupport: aws.sdk.kotlin.services.ec2.model.EphemeralNvmeSupport? = builder.nvmeSupport
    /**
     * The total size of the disks, in GB.
     */
    public val totalSizeInGb: kotlin.Long? = builder.totalSizeInGb

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.InstanceStorageInfo = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("InstanceStorageInfo(")
        append("disks=$disks,")
        append("encryptionSupport=$encryptionSupport,")
        append("nvmeSupport=$nvmeSupport,")
        append("totalSizeInGb=$totalSizeInGb)")
    }

    override fun hashCode(): kotlin.Int {
        var result = disks?.hashCode() ?: 0
        result = 31 * result + (encryptionSupport?.hashCode() ?: 0)
        result = 31 * result + (nvmeSupport?.hashCode() ?: 0)
        result = 31 * result + (totalSizeInGb?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as InstanceStorageInfo

        if (disks != other.disks) return false
        if (encryptionSupport != other.encryptionSupport) return false
        if (nvmeSupport != other.nvmeSupport) return false
        if (totalSizeInGb != other.totalSizeInGb) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.InstanceStorageInfo = Builder(this).apply(block).build()

    public class Builder {
        /**
         * Describes the disks that are available for the instance type.
         */
        public var disks: List<DiskInfo>? = null
        /**
         * Indicates whether data is encrypted at rest.
         */
        public var encryptionSupport: aws.sdk.kotlin.services.ec2.model.InstanceStorageEncryptionSupport? = null
        /**
         * Indicates whether non-volatile memory express (NVMe) is supported.
         */
        public var nvmeSupport: aws.sdk.kotlin.services.ec2.model.EphemeralNvmeSupport? = null
        /**
         * The total size of the disks, in GB.
         */
        public var totalSizeInGb: kotlin.Long? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.InstanceStorageInfo) : this() {
            this.disks = x.disks
            this.encryptionSupport = x.encryptionSupport
            this.nvmeSupport = x.nvmeSupport
            this.totalSizeInGb = x.totalSizeInGb
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.InstanceStorageInfo = InstanceStorageInfo(this)
    }
}
