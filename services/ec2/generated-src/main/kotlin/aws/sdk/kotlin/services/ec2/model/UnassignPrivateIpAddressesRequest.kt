// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Contains the parameters for UnassignPrivateIpAddresses.
 */
public class UnassignPrivateIpAddressesRequest private constructor(builder: Builder) {
    /**
     * The IPv4 prefixes to unassign from the network interface.
     */
    public val ipv4Prefixes: List<String>? = builder.ipv4Prefixes
    /**
     * The ID of the network interface.
     */
    public val networkInterfaceId: kotlin.String? = builder.networkInterfaceId
    /**
     * The secondary private IP addresses to unassign from the network interface. You can specify this option multiple times to unassign more than one IP address.
     */
    public val privateIpAddresses: List<String>? = builder.privateIpAddresses

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.UnassignPrivateIpAddressesRequest = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("UnassignPrivateIpAddressesRequest(")
        append("ipv4Prefixes=$ipv4Prefixes,")
        append("networkInterfaceId=$networkInterfaceId,")
        append("privateIpAddresses=$privateIpAddresses)")
    }

    override fun hashCode(): kotlin.Int {
        var result = ipv4Prefixes?.hashCode() ?: 0
        result = 31 * result + (networkInterfaceId?.hashCode() ?: 0)
        result = 31 * result + (privateIpAddresses?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as UnassignPrivateIpAddressesRequest

        if (ipv4Prefixes != other.ipv4Prefixes) return false
        if (networkInterfaceId != other.networkInterfaceId) return false
        if (privateIpAddresses != other.privateIpAddresses) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.UnassignPrivateIpAddressesRequest = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The IPv4 prefixes to unassign from the network interface.
         */
        public var ipv4Prefixes: List<String>? = null
        /**
         * The ID of the network interface.
         */
        public var networkInterfaceId: kotlin.String? = null
        /**
         * The secondary private IP addresses to unassign from the network interface. You can specify this option multiple times to unassign more than one IP address.
         */
        public var privateIpAddresses: List<String>? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.UnassignPrivateIpAddressesRequest) : this() {
            this.ipv4Prefixes = x.ipv4Prefixes
            this.networkInterfaceId = x.networkInterfaceId
            this.privateIpAddresses = x.privateIpAddresses
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.UnassignPrivateIpAddressesRequest = UnassignPrivateIpAddressesRequest(this)
    }
}
