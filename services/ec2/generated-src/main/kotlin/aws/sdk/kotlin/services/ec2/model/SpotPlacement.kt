// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes Spot Instance placement.
 */
public class SpotPlacement private constructor(builder: Builder) {
    /**
     * The Availability Zone.
     *
     * &#91;Spot Fleet only&#93; To specify multiple Availability Zones, separate them using commas; for example, "us-west-2a, us-west-2b".
     */
    public val availabilityZone: kotlin.String? = builder.availabilityZone
    /**
     * The name of the placement group.
     */
    public val groupName: kotlin.String? = builder.groupName
    /**
     * The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for Spot Instances.
     */
    public val tenancy: aws.sdk.kotlin.services.ec2.model.Tenancy? = builder.tenancy

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.SpotPlacement = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("SpotPlacement(")
        append("availabilityZone=$availabilityZone,")
        append("groupName=$groupName,")
        append("tenancy=$tenancy)")
    }

    override fun hashCode(): kotlin.Int {
        var result = availabilityZone?.hashCode() ?: 0
        result = 31 * result + (groupName?.hashCode() ?: 0)
        result = 31 * result + (tenancy?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as SpotPlacement

        if (availabilityZone != other.availabilityZone) return false
        if (groupName != other.groupName) return false
        if (tenancy != other.tenancy) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.SpotPlacement = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The Availability Zone.
         *
         * &#91;Spot Fleet only&#93; To specify multiple Availability Zones, separate them using commas; for example, "us-west-2a, us-west-2b".
         */
        public var availabilityZone: kotlin.String? = null
        /**
         * The name of the placement group.
         */
        public var groupName: kotlin.String? = null
        /**
         * The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for Spot Instances.
         */
        public var tenancy: aws.sdk.kotlin.services.ec2.model.Tenancy? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.SpotPlacement) : this() {
            this.availabilityZone = x.availabilityZone
            this.groupName = x.groupName
            this.tenancy = x.tenancy
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.SpotPlacement = SpotPlacement(this)
    }
}
