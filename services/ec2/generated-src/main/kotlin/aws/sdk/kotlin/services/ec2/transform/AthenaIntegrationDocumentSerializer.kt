// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.transform

import aws.sdk.kotlin.services.ec2.model.AthenaIntegration
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.Serializer
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.formurl.FormUrlSerialName
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct
import aws.smithy.kotlin.runtime.time.TimestampFormat

internal fun serializeAthenaIntegrationDocument(serializer: Serializer, input: AthenaIntegration) {
    val INTEGRATIONRESULTS3DESTINATIONARN_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("IntegrationResultS3DestinationArn"))
    val PARTITIONENDDATE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Timestamp, FormUrlSerialName("PartitionEndDate"))
    val PARTITIONLOADFREQUENCY_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("PartitionLoadFrequency"))
    val PARTITIONSTARTDATE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Timestamp, FormUrlSerialName("PartitionStartDate"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(FormUrlSerialName("AthenaIntegration"))
        field(INTEGRATIONRESULTS3DESTINATIONARN_DESCRIPTOR)
        field(PARTITIONENDDATE_DESCRIPTOR)
        field(PARTITIONLOADFREQUENCY_DESCRIPTOR)
        field(PARTITIONSTARTDATE_DESCRIPTOR)
    }

    serializer.serializeStruct(OBJ_DESCRIPTOR) {
        input.integrationResultS3DestinationArn?.let { field(INTEGRATIONRESULTS3DESTINATIONARN_DESCRIPTOR, it) }
        input.partitionLoadFrequency?.let { field(PARTITIONLOADFREQUENCY_DESCRIPTOR, it.value) }
        input.partitionStartDate?.let { field(PARTITIONSTARTDATE_DESCRIPTOR, it, TimestampFormat.ISO_8601) }
        input.partitionEndDate?.let { field(PARTITIONENDDATE_DESCRIPTOR, it, TimestampFormat.ISO_8601) }
    }
}
