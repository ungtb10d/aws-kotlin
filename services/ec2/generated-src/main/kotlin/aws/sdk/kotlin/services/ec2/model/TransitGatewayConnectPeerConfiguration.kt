// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes the Connect peer details.
 */
public class TransitGatewayConnectPeerConfiguration private constructor(builder: Builder) {
    /**
     * The BGP configuration details.
     */
    public val bgpConfigurations: List<TransitGatewayAttachmentBgpConfiguration>? = builder.bgpConfigurations
    /**
     * The range of interior BGP peer IP addresses.
     */
    public val insideCidrBlocks: List<String>? = builder.insideCidrBlocks
    /**
     * The Connect peer IP address on the appliance side of the tunnel.
     */
    public val peerAddress: kotlin.String? = builder.peerAddress
    /**
     * The tunnel protocol.
     */
    public val protocol: aws.sdk.kotlin.services.ec2.model.ProtocolValue? = builder.protocol
    /**
     * The Connect peer IP address on the transit gateway side of the tunnel.
     */
    public val transitGatewayAddress: kotlin.String? = builder.transitGatewayAddress

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.TransitGatewayConnectPeerConfiguration = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("TransitGatewayConnectPeerConfiguration(")
        append("bgpConfigurations=$bgpConfigurations,")
        append("insideCidrBlocks=$insideCidrBlocks,")
        append("peerAddress=$peerAddress,")
        append("protocol=$protocol,")
        append("transitGatewayAddress=$transitGatewayAddress)")
    }

    override fun hashCode(): kotlin.Int {
        var result = bgpConfigurations?.hashCode() ?: 0
        result = 31 * result + (insideCidrBlocks?.hashCode() ?: 0)
        result = 31 * result + (peerAddress?.hashCode() ?: 0)
        result = 31 * result + (protocol?.hashCode() ?: 0)
        result = 31 * result + (transitGatewayAddress?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as TransitGatewayConnectPeerConfiguration

        if (bgpConfigurations != other.bgpConfigurations) return false
        if (insideCidrBlocks != other.insideCidrBlocks) return false
        if (peerAddress != other.peerAddress) return false
        if (protocol != other.protocol) return false
        if (transitGatewayAddress != other.transitGatewayAddress) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.TransitGatewayConnectPeerConfiguration = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The BGP configuration details.
         */
        public var bgpConfigurations: List<TransitGatewayAttachmentBgpConfiguration>? = null
        /**
         * The range of interior BGP peer IP addresses.
         */
        public var insideCidrBlocks: List<String>? = null
        /**
         * The Connect peer IP address on the appliance side of the tunnel.
         */
        public var peerAddress: kotlin.String? = null
        /**
         * The tunnel protocol.
         */
        public var protocol: aws.sdk.kotlin.services.ec2.model.ProtocolValue? = null
        /**
         * The Connect peer IP address on the transit gateway side of the tunnel.
         */
        public var transitGatewayAddress: kotlin.String? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.TransitGatewayConnectPeerConfiguration) : this() {
            this.bgpConfigurations = x.bgpConfigurations
            this.insideCidrBlocks = x.insideCidrBlocks
            this.peerAddress = x.peerAddress
            this.protocol = x.protocol
            this.transitGatewayAddress = x.transitGatewayAddress
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.TransitGatewayConnectPeerConfiguration = TransitGatewayConnectPeerConfiguration(this)
    }
}
