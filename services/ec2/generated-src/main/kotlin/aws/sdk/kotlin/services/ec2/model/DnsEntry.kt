// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes a DNS entry.
 */
public class DnsEntry private constructor(builder: Builder) {
    /**
     * The DNS name.
     */
    public val dnsName: kotlin.String? = builder.dnsName
    /**
     * The ID of the private hosted zone.
     */
    public val hostedZoneId: kotlin.String? = builder.hostedZoneId

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.DnsEntry = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("DnsEntry(")
        append("dnsName=$dnsName,")
        append("hostedZoneId=$hostedZoneId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = dnsName?.hashCode() ?: 0
        result = 31 * result + (hostedZoneId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as DnsEntry

        if (dnsName != other.dnsName) return false
        if (hostedZoneId != other.hostedZoneId) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.DnsEntry = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The DNS name.
         */
        public var dnsName: kotlin.String? = null
        /**
         * The ID of the private hosted zone.
         */
        public var hostedZoneId: kotlin.String? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.DnsEntry) : this() {
            this.dnsName = x.dnsName
            this.hostedZoneId = x.hostedZoneId
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.DnsEntry = DnsEntry(this)
    }
}
