// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.transform

import aws.sdk.kotlin.services.ec2.model.IpamAddressHistoryRecord
import aws.sdk.kotlin.services.ec2.model.IpamAddressHistoryResourceType
import aws.sdk.kotlin.services.ec2.model.IpamComplianceStatus
import aws.sdk.kotlin.services.ec2.model.IpamOverlapStatus
import aws.smithy.kotlin.runtime.serde.Deserializer
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct
import aws.smithy.kotlin.runtime.serde.xml.XmlDeserializer
import aws.smithy.kotlin.runtime.serde.xml.XmlNamespace
import aws.smithy.kotlin.runtime.serde.xml.XmlSerialName
import aws.smithy.kotlin.runtime.time.Instant

internal fun deserializeIpamAddressHistoryRecordDocument(deserializer: Deserializer): IpamAddressHistoryRecord {
    val builder = IpamAddressHistoryRecord.Builder()
    val RESOURCECIDR_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("resourceCidr"))
    val RESOURCECOMPLIANCESTATUS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Enum, XmlSerialName("resourceComplianceStatus"))
    val RESOURCEID_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("resourceId"))
    val RESOURCENAME_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("resourceName"))
    val RESOURCEOVERLAPSTATUS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Enum, XmlSerialName("resourceOverlapStatus"))
    val RESOURCEOWNERID_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("resourceOwnerId"))
    val RESOURCEREGION_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("resourceRegion"))
    val RESOURCETYPE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Enum, XmlSerialName("resourceType"))
    val SAMPLEDENDTIME_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Timestamp, XmlSerialName("sampledEndTime"))
    val SAMPLEDSTARTTIME_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Timestamp, XmlSerialName("sampledStartTime"))
    val VPCID_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("vpcId"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(XmlSerialName("IpamAddressHistoryRecord"))
        trait(XmlNamespace("http://ec2.amazonaws.com/doc/2016-11-15"))
        field(RESOURCECIDR_DESCRIPTOR)
        field(RESOURCECOMPLIANCESTATUS_DESCRIPTOR)
        field(RESOURCEID_DESCRIPTOR)
        field(RESOURCENAME_DESCRIPTOR)
        field(RESOURCEOVERLAPSTATUS_DESCRIPTOR)
        field(RESOURCEOWNERID_DESCRIPTOR)
        field(RESOURCEREGION_DESCRIPTOR)
        field(RESOURCETYPE_DESCRIPTOR)
        field(SAMPLEDENDTIME_DESCRIPTOR)
        field(SAMPLEDSTARTTIME_DESCRIPTOR)
        field(VPCID_DESCRIPTOR)
    }

    deserializer.deserializeStruct(OBJ_DESCRIPTOR) {
        loop@while (true) {
            when (findNextFieldIndex()) {
                RESOURCECIDR_DESCRIPTOR.index -> builder.resourceCidr = deserializeString()
                RESOURCECOMPLIANCESTATUS_DESCRIPTOR.index -> builder.resourceComplianceStatus = deserializeString().let { IpamComplianceStatus.fromValue(it) }
                RESOURCEID_DESCRIPTOR.index -> builder.resourceId = deserializeString()
                RESOURCENAME_DESCRIPTOR.index -> builder.resourceName = deserializeString()
                RESOURCEOVERLAPSTATUS_DESCRIPTOR.index -> builder.resourceOverlapStatus = deserializeString().let { IpamOverlapStatus.fromValue(it) }
                RESOURCEOWNERID_DESCRIPTOR.index -> builder.resourceOwnerId = deserializeString()
                RESOURCEREGION_DESCRIPTOR.index -> builder.resourceRegion = deserializeString()
                RESOURCETYPE_DESCRIPTOR.index -> builder.resourceType = deserializeString().let { IpamAddressHistoryResourceType.fromValue(it) }
                SAMPLEDENDTIME_DESCRIPTOR.index -> builder.sampledEndTime = deserializeString().let { Instant.fromIso8601(it) }
                SAMPLEDSTARTTIME_DESCRIPTOR.index -> builder.sampledStartTime = deserializeString().let { Instant.fromIso8601(it) }
                VPCID_DESCRIPTOR.index -> builder.vpcId = deserializeString()
                null -> break@loop
                else -> skipValue()
            }
        }
    }
    return builder.build()
}
