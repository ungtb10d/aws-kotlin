// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * The metadata options for the instance.
 */
public class InstanceMetadataOptionsResponse private constructor(builder: Builder) {
    /**
     * Indicates whether the HTTP metadata endpoint on your instances is enabled or disabled.
     *
     * If the value is `disabled`, you cannot access your instance metadata.
     */
    public val httpEndpoint: aws.sdk.kotlin.services.ec2.model.InstanceMetadataEndpointState? = builder.httpEndpoint
    /**
     * Indicates whether the IPv6 endpoint for the instance metadata service is enabled or disabled.
     */
    public val httpProtocolIpv6: aws.sdk.kotlin.services.ec2.model.InstanceMetadataProtocolState? = builder.httpProtocolIpv6
    /**
     * The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.
     *
     * Default: 1
     *
     * Possible values: Integers from 1 to 64
     */
    public val httpPutResponseHopLimit: kotlin.Int? = builder.httpPutResponseHopLimit
    /**
     * The state of token usage for your instance metadata requests.
     *
     * If the state is `optional`, you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.
     *
     * If the state is `required`, you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credential always returns the version 2.0 credentials; the version 1.0 credentials are not available.
     *
     * Default: `optional`
     */
    public val httpTokens: aws.sdk.kotlin.services.ec2.model.HttpTokensState? = builder.httpTokens
    /**
     * Indicates whether access to instance tags from the instance metadata is enabled or disabled. For more information, see [Work with instance tags using the instance metadata](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS).
     */
    public val instanceMetadataTags: aws.sdk.kotlin.services.ec2.model.InstanceMetadataTagsState? = builder.instanceMetadataTags
    /**
     * The state of the metadata option changes.
     *
     * `pending` - The metadata options are being updated and the instance is not ready to process metadata traffic with the new selection.
     *
     * `applied` - The metadata options have been successfully applied on the instance.
     */
    public val state: aws.sdk.kotlin.services.ec2.model.InstanceMetadataOptionsState? = builder.state

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.InstanceMetadataOptionsResponse = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("InstanceMetadataOptionsResponse(")
        append("httpEndpoint=$httpEndpoint,")
        append("httpProtocolIpv6=$httpProtocolIpv6,")
        append("httpPutResponseHopLimit=$httpPutResponseHopLimit,")
        append("httpTokens=$httpTokens,")
        append("instanceMetadataTags=$instanceMetadataTags,")
        append("state=$state)")
    }

    override fun hashCode(): kotlin.Int {
        var result = httpEndpoint?.hashCode() ?: 0
        result = 31 * result + (httpProtocolIpv6?.hashCode() ?: 0)
        result = 31 * result + (httpPutResponseHopLimit ?: 0)
        result = 31 * result + (httpTokens?.hashCode() ?: 0)
        result = 31 * result + (instanceMetadataTags?.hashCode() ?: 0)
        result = 31 * result + (state?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as InstanceMetadataOptionsResponse

        if (httpEndpoint != other.httpEndpoint) return false
        if (httpProtocolIpv6 != other.httpProtocolIpv6) return false
        if (httpPutResponseHopLimit != other.httpPutResponseHopLimit) return false
        if (httpTokens != other.httpTokens) return false
        if (instanceMetadataTags != other.instanceMetadataTags) return false
        if (state != other.state) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.InstanceMetadataOptionsResponse = Builder(this).apply(block).build()

    public class Builder {
        /**
         * Indicates whether the HTTP metadata endpoint on your instances is enabled or disabled.
         *
         * If the value is `disabled`, you cannot access your instance metadata.
         */
        public var httpEndpoint: aws.sdk.kotlin.services.ec2.model.InstanceMetadataEndpointState? = null
        /**
         * Indicates whether the IPv6 endpoint for the instance metadata service is enabled or disabled.
         */
        public var httpProtocolIpv6: aws.sdk.kotlin.services.ec2.model.InstanceMetadataProtocolState? = null
        /**
         * The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.
         *
         * Default: 1
         *
         * Possible values: Integers from 1 to 64
         */
        public var httpPutResponseHopLimit: kotlin.Int? = null
        /**
         * The state of token usage for your instance metadata requests.
         *
         * If the state is `optional`, you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.
         *
         * If the state is `required`, you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credential always returns the version 2.0 credentials; the version 1.0 credentials are not available.
         *
         * Default: `optional`
         */
        public var httpTokens: aws.sdk.kotlin.services.ec2.model.HttpTokensState? = null
        /**
         * Indicates whether access to instance tags from the instance metadata is enabled or disabled. For more information, see [Work with instance tags using the instance metadata](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS).
         */
        public var instanceMetadataTags: aws.sdk.kotlin.services.ec2.model.InstanceMetadataTagsState? = null
        /**
         * The state of the metadata option changes.
         *
         * `pending` - The metadata options are being updated and the instance is not ready to process metadata traffic with the new selection.
         *
         * `applied` - The metadata options have been successfully applied on the instance.
         */
        public var state: aws.sdk.kotlin.services.ec2.model.InstanceMetadataOptionsState? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.InstanceMetadataOptionsResponse) : this() {
            this.httpEndpoint = x.httpEndpoint
            this.httpProtocolIpv6 = x.httpProtocolIpv6
            this.httpPutResponseHopLimit = x.httpPutResponseHopLimit
            this.httpTokens = x.httpTokens
            this.instanceMetadataTags = x.instanceMetadataTags
            this.state = x.state
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.InstanceMetadataOptionsResponse = InstanceMetadataOptionsResponse(this)
    }
}
