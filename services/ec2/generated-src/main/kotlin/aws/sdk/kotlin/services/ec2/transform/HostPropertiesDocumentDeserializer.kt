// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.transform

import aws.sdk.kotlin.services.ec2.model.HostProperties
import aws.smithy.kotlin.runtime.serde.Deserializer
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct
import aws.smithy.kotlin.runtime.serde.xml.XmlDeserializer
import aws.smithy.kotlin.runtime.serde.xml.XmlNamespace
import aws.smithy.kotlin.runtime.serde.xml.XmlSerialName

internal fun deserializeHostPropertiesDocument(deserializer: Deserializer): HostProperties {
    val builder = HostProperties.Builder()
    val CORES_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, XmlSerialName("cores"))
    val INSTANCEFAMILY_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("instanceFamily"))
    val INSTANCETYPE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("instanceType"))
    val SOCKETS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, XmlSerialName("sockets"))
    val TOTALVCPUS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, XmlSerialName("totalVCpus"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(XmlSerialName("HostProperties"))
        trait(XmlNamespace("http://ec2.amazonaws.com/doc/2016-11-15"))
        field(CORES_DESCRIPTOR)
        field(INSTANCEFAMILY_DESCRIPTOR)
        field(INSTANCETYPE_DESCRIPTOR)
        field(SOCKETS_DESCRIPTOR)
        field(TOTALVCPUS_DESCRIPTOR)
    }

    deserializer.deserializeStruct(OBJ_DESCRIPTOR) {
        loop@while (true) {
            when (findNextFieldIndex()) {
                CORES_DESCRIPTOR.index -> builder.cores = deserializeInt()
                INSTANCEFAMILY_DESCRIPTOR.index -> builder.instanceFamily = deserializeString()
                INSTANCETYPE_DESCRIPTOR.index -> builder.instanceType = deserializeString()
                SOCKETS_DESCRIPTOR.index -> builder.sockets = deserializeInt()
                TOTALVCPUS_DESCRIPTOR.index -> builder.totalVCpus = deserializeInt()
                null -> break@loop
                else -> skipValue()
            }
        }
    }
    return builder.build()
}
