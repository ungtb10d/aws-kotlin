// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Contains the parameters for CreateNetworkInterfacePermission.
 */
public class CreateNetworkInterfacePermissionRequest private constructor(builder: Builder) {
    /**
     * The Amazon Web Services account ID.
     */
    public val awsAccountId: kotlin.String? = builder.awsAccountId
    /**
     * The Amazon Web Service. Currently not supported.
     */
    public val awsService: kotlin.String? = builder.awsService
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.
     */
    public val dryRun: kotlin.Boolean? = builder.dryRun
    /**
     * The ID of the network interface.
     */
    public val networkInterfaceId: kotlin.String? = builder.networkInterfaceId
    /**
     * The type of permission to grant.
     */
    public val permission: aws.sdk.kotlin.services.ec2.model.InterfacePermissionType? = builder.permission

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.CreateNetworkInterfacePermissionRequest = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("CreateNetworkInterfacePermissionRequest(")
        append("awsAccountId=$awsAccountId,")
        append("awsService=$awsService,")
        append("dryRun=$dryRun,")
        append("networkInterfaceId=$networkInterfaceId,")
        append("permission=$permission)")
    }

    override fun hashCode(): kotlin.Int {
        var result = awsAccountId?.hashCode() ?: 0
        result = 31 * result + (awsService?.hashCode() ?: 0)
        result = 31 * result + (dryRun?.hashCode() ?: 0)
        result = 31 * result + (networkInterfaceId?.hashCode() ?: 0)
        result = 31 * result + (permission?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as CreateNetworkInterfacePermissionRequest

        if (awsAccountId != other.awsAccountId) return false
        if (awsService != other.awsService) return false
        if (dryRun != other.dryRun) return false
        if (networkInterfaceId != other.networkInterfaceId) return false
        if (permission != other.permission) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.CreateNetworkInterfacePermissionRequest = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The Amazon Web Services account ID.
         */
        public var awsAccountId: kotlin.String? = null
        /**
         * The Amazon Web Service. Currently not supported.
         */
        public var awsService: kotlin.String? = null
        /**
         * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.
         */
        public var dryRun: kotlin.Boolean? = null
        /**
         * The ID of the network interface.
         */
        public var networkInterfaceId: kotlin.String? = null
        /**
         * The type of permission to grant.
         */
        public var permission: aws.sdk.kotlin.services.ec2.model.InterfacePermissionType? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.CreateNetworkInterfacePermissionRequest) : this() {
            this.awsAccountId = x.awsAccountId
            this.awsService = x.awsService
            this.dryRun = x.dryRun
            this.networkInterfaceId = x.networkInterfaceId
            this.permission = x.permission
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.CreateNetworkInterfacePermissionRequest = CreateNetworkInterfacePermissionRequest(this)
    }
}
