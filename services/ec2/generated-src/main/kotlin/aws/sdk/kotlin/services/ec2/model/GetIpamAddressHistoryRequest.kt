// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model

import aws.smithy.kotlin.runtime.time.Instant

public class GetIpamAddressHistoryRequest private constructor(builder: Builder) {
    /**
     * The CIDR you want the history of. The CIDR can be an IPv4 or IPv6 IP address range. If you enter a /16 IPv4 CIDR, you will get records that match it exactly. You will not get records for any subnets within the /16 CIDR.
     */
    public val cidr: kotlin.String? = builder.cidr
    /**
     * A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.
     */
    public val dryRun: kotlin.Boolean? = builder.dryRun
    /**
     * The end of the time period for which you are looking for history. If you omit this option, it will default to the current time.
     */
    public val endTime: aws.smithy.kotlin.runtime.time.Instant? = builder.endTime
    /**
     * The ID of the IPAM scope that the CIDR is in.
     */
    public val ipamScopeId: kotlin.String? = builder.ipamScopeId
    /**
     * The maximum number of historical results you would like returned per page. Defaults to 100.
     */
    public val maxResults: kotlin.Int? = builder.maxResults
    /**
     * The token for the next page of results.
     */
    public val nextToken: kotlin.String? = builder.nextToken
    /**
     * The start of the time period for which you are looking for history. If you omit this option, it will default to the value of EndTime.
     */
    public val startTime: aws.smithy.kotlin.runtime.time.Instant? = builder.startTime
    /**
     * The ID of the VPC you want your history records filtered by.
     */
    public val vpcId: kotlin.String? = builder.vpcId

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.GetIpamAddressHistoryRequest = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("GetIpamAddressHistoryRequest(")
        append("cidr=$cidr,")
        append("dryRun=$dryRun,")
        append("endTime=$endTime,")
        append("ipamScopeId=$ipamScopeId,")
        append("maxResults=$maxResults,")
        append("nextToken=$nextToken,")
        append("startTime=$startTime,")
        append("vpcId=$vpcId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = cidr?.hashCode() ?: 0
        result = 31 * result + (dryRun?.hashCode() ?: 0)
        result = 31 * result + (endTime?.hashCode() ?: 0)
        result = 31 * result + (ipamScopeId?.hashCode() ?: 0)
        result = 31 * result + (maxResults ?: 0)
        result = 31 * result + (nextToken?.hashCode() ?: 0)
        result = 31 * result + (startTime?.hashCode() ?: 0)
        result = 31 * result + (vpcId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as GetIpamAddressHistoryRequest

        if (cidr != other.cidr) return false
        if (dryRun != other.dryRun) return false
        if (endTime != other.endTime) return false
        if (ipamScopeId != other.ipamScopeId) return false
        if (maxResults != other.maxResults) return false
        if (nextToken != other.nextToken) return false
        if (startTime != other.startTime) return false
        if (vpcId != other.vpcId) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.GetIpamAddressHistoryRequest = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The CIDR you want the history of. The CIDR can be an IPv4 or IPv6 IP address range. If you enter a /16 IPv4 CIDR, you will get records that match it exactly. You will not get records for any subnets within the /16 CIDR.
         */
        public var cidr: kotlin.String? = null
        /**
         * A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.
         */
        public var dryRun: kotlin.Boolean? = null
        /**
         * The end of the time period for which you are looking for history. If you omit this option, it will default to the current time.
         */
        public var endTime: aws.smithy.kotlin.runtime.time.Instant? = null
        /**
         * The ID of the IPAM scope that the CIDR is in.
         */
        public var ipamScopeId: kotlin.String? = null
        /**
         * The maximum number of historical results you would like returned per page. Defaults to 100.
         */
        public var maxResults: kotlin.Int? = null
        /**
         * The token for the next page of results.
         */
        public var nextToken: kotlin.String? = null
        /**
         * The start of the time period for which you are looking for history. If you omit this option, it will default to the value of EndTime.
         */
        public var startTime: aws.smithy.kotlin.runtime.time.Instant? = null
        /**
         * The ID of the VPC you want your history records filtered by.
         */
        public var vpcId: kotlin.String? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.GetIpamAddressHistoryRequest) : this() {
            this.cidr = x.cidr
            this.dryRun = x.dryRun
            this.endTime = x.endTime
            this.ipamScopeId = x.ipamScopeId
            this.maxResults = x.maxResults
            this.nextToken = x.nextToken
            this.startTime = x.startTime
            this.vpcId = x.vpcId
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.GetIpamAddressHistoryRequest = GetIpamAddressHistoryRequest(this)
    }
}
