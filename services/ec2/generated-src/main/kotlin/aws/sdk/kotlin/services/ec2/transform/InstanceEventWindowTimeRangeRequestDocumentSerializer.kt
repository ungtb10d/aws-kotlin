// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.transform

import aws.sdk.kotlin.services.ec2.model.InstanceEventWindowTimeRangeRequest
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.Serializer
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.formurl.FormUrlSerialName
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct

internal fun serializeInstanceEventWindowTimeRangeRequestDocument(serializer: Serializer, input: InstanceEventWindowTimeRangeRequest) {
    val ENDHOUR_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, FormUrlSerialName("EndHour"))
    val ENDWEEKDAY_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("EndWeekDay"))
    val STARTHOUR_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, FormUrlSerialName("StartHour"))
    val STARTWEEKDAY_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("StartWeekDay"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(FormUrlSerialName("InstanceEventWindowTimeRangeRequest"))
        field(ENDHOUR_DESCRIPTOR)
        field(ENDWEEKDAY_DESCRIPTOR)
        field(STARTHOUR_DESCRIPTOR)
        field(STARTWEEKDAY_DESCRIPTOR)
    }

    serializer.serializeStruct(OBJ_DESCRIPTOR) {
        input.startWeekDay?.let { field(STARTWEEKDAY_DESCRIPTOR, it.value) }
        input.startHour?.let { field(STARTHOUR_DESCRIPTOR, it) }
        input.endWeekDay?.let { field(ENDWEEKDAY_DESCRIPTOR, it.value) }
        input.endHour?.let { field(ENDHOUR_DESCRIPTOR, it) }
    }
}
