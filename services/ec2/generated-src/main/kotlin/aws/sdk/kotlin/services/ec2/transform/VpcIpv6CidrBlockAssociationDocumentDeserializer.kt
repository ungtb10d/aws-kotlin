// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.transform

import aws.sdk.kotlin.services.ec2.model.VpcIpv6CidrBlockAssociation
import aws.smithy.kotlin.runtime.serde.Deserializer
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct
import aws.smithy.kotlin.runtime.serde.xml.XmlDeserializer
import aws.smithy.kotlin.runtime.serde.xml.XmlNamespace
import aws.smithy.kotlin.runtime.serde.xml.XmlSerialName

internal fun deserializeVpcIpv6CidrBlockAssociationDocument(deserializer: Deserializer): VpcIpv6CidrBlockAssociation {
    val builder = VpcIpv6CidrBlockAssociation.Builder()
    val ASSOCIATIONID_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("associationId"))
    val IPV6CIDRBLOCK_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("ipv6CidrBlock"))
    val IPV6CIDRBLOCKSTATE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, XmlSerialName("ipv6CidrBlockState"))
    val IPV6POOL_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("ipv6Pool"))
    val NETWORKBORDERGROUP_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("networkBorderGroup"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(XmlSerialName("VpcIpv6CidrBlockAssociation"))
        trait(XmlNamespace("http://ec2.amazonaws.com/doc/2016-11-15"))
        field(ASSOCIATIONID_DESCRIPTOR)
        field(IPV6CIDRBLOCK_DESCRIPTOR)
        field(IPV6CIDRBLOCKSTATE_DESCRIPTOR)
        field(IPV6POOL_DESCRIPTOR)
        field(NETWORKBORDERGROUP_DESCRIPTOR)
    }

    deserializer.deserializeStruct(OBJ_DESCRIPTOR) {
        loop@while (true) {
            when (findNextFieldIndex()) {
                ASSOCIATIONID_DESCRIPTOR.index -> builder.associationId = deserializeString()
                IPV6CIDRBLOCK_DESCRIPTOR.index -> builder.ipv6CidrBlock = deserializeString()
                IPV6CIDRBLOCKSTATE_DESCRIPTOR.index -> builder.ipv6CidrBlockState = deserializeVpcCidrBlockStateDocument(deserializer)
                IPV6POOL_DESCRIPTOR.index -> builder.ipv6Pool = deserializeString()
                NETWORKBORDERGROUP_DESCRIPTOR.index -> builder.networkBorderGroup = deserializeString()
                null -> break@loop
                else -> skipValue()
            }
        }
    }
    return builder.build()
}
