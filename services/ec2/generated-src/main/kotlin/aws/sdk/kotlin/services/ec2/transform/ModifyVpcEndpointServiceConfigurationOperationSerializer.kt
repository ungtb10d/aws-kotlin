// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.transform

import aws.sdk.kotlin.services.ec2.model.ModifyVpcEndpointServiceConfigurationRequest
import aws.smithy.kotlin.runtime.client.ExecutionContext
import aws.smithy.kotlin.runtime.http.HttpBody
import aws.smithy.kotlin.runtime.http.HttpMethod
import aws.smithy.kotlin.runtime.http.content.ByteArrayContent
import aws.smithy.kotlin.runtime.http.operation.HttpSerialize
import aws.smithy.kotlin.runtime.http.request.HttpRequestBuilder
import aws.smithy.kotlin.runtime.http.request.url
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.formurl.FormUrlFlattened
import aws.smithy.kotlin.runtime.serde.formurl.FormUrlSerialName
import aws.smithy.kotlin.runtime.serde.formurl.FormUrlSerializer
import aws.smithy.kotlin.runtime.serde.formurl.QueryLiteral
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct


internal class ModifyVpcEndpointServiceConfigurationOperationSerializer: HttpSerialize<ModifyVpcEndpointServiceConfigurationRequest> {
    override suspend fun serialize(context: ExecutionContext, input: ModifyVpcEndpointServiceConfigurationRequest): HttpRequestBuilder {
        val builder = HttpRequestBuilder()
        builder.method = HttpMethod.POST

        builder.url {
            path = "/"
        }

        val payload = serializeModifyVpcEndpointServiceConfigurationOperationBody(context, input)
        builder.body = ByteArrayContent(payload)
        if (builder.body !is HttpBody.Empty) {
            builder.headers.setMissing("Content-Type", "application/x-www-form-urlencoded")
        }
        return builder
    }
}

private fun serializeModifyVpcEndpointServiceConfigurationOperationBody(context: ExecutionContext, input: ModifyVpcEndpointServiceConfigurationRequest): ByteArray {
    val serializer = FormUrlSerializer()
    val ACCEPTANCEREQUIRED_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Boolean, FormUrlSerialName("AcceptanceRequired"))
    val ADDGATEWAYLOADBALANCERARNS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, FormUrlSerialName("AddGatewayLoadBalancerArn"), FormUrlFlattened)
    val ADDNETWORKLOADBALANCERARNS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, FormUrlSerialName("AddNetworkLoadBalancerArn"), FormUrlFlattened)
    val ADDSUPPORTEDIPADDRESSTYPES_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, FormUrlSerialName("AddSupportedIpAddressType"), FormUrlFlattened)
    val DRYRUN_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Boolean, FormUrlSerialName("DryRun"))
    val PRIVATEDNSNAME_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("PrivateDnsName"))
    val REMOVEGATEWAYLOADBALANCERARNS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, FormUrlSerialName("RemoveGatewayLoadBalancerArn"), FormUrlFlattened)
    val REMOVENETWORKLOADBALANCERARNS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, FormUrlSerialName("RemoveNetworkLoadBalancerArn"), FormUrlFlattened)
    val REMOVEPRIVATEDNSNAME_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Boolean, FormUrlSerialName("RemovePrivateDnsName"))
    val REMOVESUPPORTEDIPADDRESSTYPES_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, FormUrlSerialName("RemoveSupportedIpAddressType"), FormUrlFlattened)
    val SERVICEID_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("ServiceId"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(FormUrlSerialName("ModifyVpcEndpointServiceConfigurationRequest"))
        trait(QueryLiteral("Action", "ModifyVpcEndpointServiceConfiguration"))
        trait(QueryLiteral("Version", "2016-11-15"))
        field(ACCEPTANCEREQUIRED_DESCRIPTOR)
        field(ADDGATEWAYLOADBALANCERARNS_DESCRIPTOR)
        field(ADDNETWORKLOADBALANCERARNS_DESCRIPTOR)
        field(ADDSUPPORTEDIPADDRESSTYPES_DESCRIPTOR)
        field(DRYRUN_DESCRIPTOR)
        field(PRIVATEDNSNAME_DESCRIPTOR)
        field(REMOVEGATEWAYLOADBALANCERARNS_DESCRIPTOR)
        field(REMOVENETWORKLOADBALANCERARNS_DESCRIPTOR)
        field(REMOVEPRIVATEDNSNAME_DESCRIPTOR)
        field(REMOVESUPPORTEDIPADDRESSTYPES_DESCRIPTOR)
        field(SERVICEID_DESCRIPTOR)
    }

    serializer.serializeStruct(OBJ_DESCRIPTOR) {
        input.acceptanceRequired?.let { field(ACCEPTANCEREQUIRED_DESCRIPTOR, it) }
        if (input.addGatewayLoadBalancerArns != null) {
            listField(ADDGATEWAYLOADBALANCERARNS_DESCRIPTOR) {
                for (el0 in input.addGatewayLoadBalancerArns) {
                    serializeString(el0)
                }
            }
        }
        if (input.addNetworkLoadBalancerArns != null) {
            listField(ADDNETWORKLOADBALANCERARNS_DESCRIPTOR) {
                for (el0 in input.addNetworkLoadBalancerArns) {
                    serializeString(el0)
                }
            }
        }
        if (input.addSupportedIpAddressTypes != null) {
            listField(ADDSUPPORTEDIPADDRESSTYPES_DESCRIPTOR) {
                for (el0 in input.addSupportedIpAddressTypes) {
                    serializeString(el0)
                }
            }
        }
        input.dryRun?.let { field(DRYRUN_DESCRIPTOR, it) }
        input.privateDnsName?.let { field(PRIVATEDNSNAME_DESCRIPTOR, it) }
        if (input.removeGatewayLoadBalancerArns != null) {
            listField(REMOVEGATEWAYLOADBALANCERARNS_DESCRIPTOR) {
                for (el0 in input.removeGatewayLoadBalancerArns) {
                    serializeString(el0)
                }
            }
        }
        if (input.removeNetworkLoadBalancerArns != null) {
            listField(REMOVENETWORKLOADBALANCERARNS_DESCRIPTOR) {
                for (el0 in input.removeNetworkLoadBalancerArns) {
                    serializeString(el0)
                }
            }
        }
        input.removePrivateDnsName?.let { field(REMOVEPRIVATEDNSNAME_DESCRIPTOR, it) }
        if (input.removeSupportedIpAddressTypes != null) {
            listField(REMOVESUPPORTEDIPADDRESSTYPES_DESCRIPTOR) {
                for (el0 in input.removeSupportedIpAddressTypes) {
                    serializeString(el0)
                }
            }
        }
        input.serviceId?.let { field(SERVICEID_DESCRIPTOR, it) }
    }
    return serializer.toByteArray()
}
