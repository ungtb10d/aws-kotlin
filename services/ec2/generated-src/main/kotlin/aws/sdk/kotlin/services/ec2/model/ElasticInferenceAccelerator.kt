// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes an elastic inference accelerator.
 */
public class ElasticInferenceAccelerator private constructor(builder: Builder) {
    /**
     * The number of elastic inference accelerators to attach to the instance.
     *
     * Default: 1
     */
    public val count: kotlin.Int? = builder.count
    /**
     * The type of elastic inference accelerator. The possible values are `eia1.medium`, `eia1.large`, `eia1.xlarge`, `eia2.medium`, `eia2.large`, and `eia2.xlarge`.
     */
    public val type: kotlin.String? = builder.type

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.ElasticInferenceAccelerator = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("ElasticInferenceAccelerator(")
        append("count=$count,")
        append("type=$type)")
    }

    override fun hashCode(): kotlin.Int {
        var result = count ?: 0
        result = 31 * result + (type?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as ElasticInferenceAccelerator

        if (count != other.count) return false
        if (type != other.type) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.ElasticInferenceAccelerator = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The number of elastic inference accelerators to attach to the instance.
         *
         * Default: 1
         */
        public var count: kotlin.Int? = null
        /**
         * The type of elastic inference accelerator. The possible values are `eia1.medium`, `eia1.large`, `eia1.xlarge`, `eia2.medium`, `eia2.large`, and `eia2.xlarge`.
         */
        public var type: kotlin.String? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.ElasticInferenceAccelerator) : this() {
            this.count = x.count
            this.type = x.type
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.ElasticInferenceAccelerator = ElasticInferenceAccelerator(this)
    }
}
