// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model

import aws.smithy.kotlin.runtime.time.Instant

/**
 * Describes the client-specific data.
 */
public class ClientData private constructor(builder: Builder) {
    /**
     * A user-defined comment about the disk upload.
     */
    public val comment: kotlin.String? = builder.comment
    /**
     * The time that the disk upload ends.
     */
    public val uploadEnd: aws.smithy.kotlin.runtime.time.Instant? = builder.uploadEnd
    /**
     * The size of the uploaded disk image, in GiB.
     */
    public val uploadSize: kotlin.Double? = builder.uploadSize
    /**
     * The time that the disk upload starts.
     */
    public val uploadStart: aws.smithy.kotlin.runtime.time.Instant? = builder.uploadStart

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.ClientData = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("ClientData(")
        append("comment=$comment,")
        append("uploadEnd=$uploadEnd,")
        append("uploadSize=$uploadSize,")
        append("uploadStart=$uploadStart)")
    }

    override fun hashCode(): kotlin.Int {
        var result = comment?.hashCode() ?: 0
        result = 31 * result + (uploadEnd?.hashCode() ?: 0)
        result = 31 * result + (uploadSize?.hashCode() ?: 0)
        result = 31 * result + (uploadStart?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as ClientData

        if (comment != other.comment) return false
        if (uploadEnd != other.uploadEnd) return false
        if (uploadSize != other.uploadSize) return false
        if (uploadStart != other.uploadStart) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.ClientData = Builder(this).apply(block).build()

    public class Builder {
        /**
         * A user-defined comment about the disk upload.
         */
        public var comment: kotlin.String? = null
        /**
         * The time that the disk upload ends.
         */
        public var uploadEnd: aws.smithy.kotlin.runtime.time.Instant? = null
        /**
         * The size of the uploaded disk image, in GiB.
         */
        public var uploadSize: kotlin.Double? = null
        /**
         * The time that the disk upload starts.
         */
        public var uploadStart: aws.smithy.kotlin.runtime.time.Instant? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.ClientData) : this() {
            this.comment = x.comment
            this.uploadEnd = x.uploadEnd
            this.uploadSize = x.uploadSize
            this.uploadStart = x.uploadStart
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.ClientData = ClientData(this)
    }
}
