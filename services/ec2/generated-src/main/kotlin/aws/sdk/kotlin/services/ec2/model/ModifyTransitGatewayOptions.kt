// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * The transit gateway options.
 */
public class ModifyTransitGatewayOptions private constructor(builder: Builder) {
    /**
     * Adds IPv4 or IPv6 CIDR blocks for the transit gateway. Must be a size /24 CIDR block or larger for IPv4, or a size /64 CIDR block or larger for IPv6.
     */
    public val addTransitGatewayCidrBlocks: List<String>? = builder.addTransitGatewayCidrBlocks
    /**
     * A private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs.
     */
    public val amazonSideAsn: kotlin.Long? = builder.amazonSideAsn
    /**
     * The ID of the default association route table.
     */
    public val associationDefaultRouteTableId: kotlin.String? = builder.associationDefaultRouteTableId
    /**
     * Enable or disable automatic acceptance of attachment requests.
     */
    public val autoAcceptSharedAttachments: aws.sdk.kotlin.services.ec2.model.AutoAcceptSharedAttachmentsValue? = builder.autoAcceptSharedAttachments
    /**
     * Enable or disable automatic association with the default association route table.
     */
    public val defaultRouteTableAssociation: aws.sdk.kotlin.services.ec2.model.DefaultRouteTableAssociationValue? = builder.defaultRouteTableAssociation
    /**
     * Enable or disable automatic propagation of routes to the default propagation route table.
     */
    public val defaultRouteTablePropagation: aws.sdk.kotlin.services.ec2.model.DefaultRouteTablePropagationValue? = builder.defaultRouteTablePropagation
    /**
     * Enable or disable DNS support.
     */
    public val dnsSupport: aws.sdk.kotlin.services.ec2.model.DnsSupportValue? = builder.dnsSupport
    /**
     * The ID of the default propagation route table.
     */
    public val propagationDefaultRouteTableId: kotlin.String? = builder.propagationDefaultRouteTableId
    /**
     * Removes CIDR blocks for the transit gateway.
     */
    public val removeTransitGatewayCidrBlocks: List<String>? = builder.removeTransitGatewayCidrBlocks
    /**
     * Enable or disable Equal Cost Multipath Protocol support.
     */
    public val vpnEcmpSupport: aws.sdk.kotlin.services.ec2.model.VpnEcmpSupportValue? = builder.vpnEcmpSupport

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.ModifyTransitGatewayOptions = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("ModifyTransitGatewayOptions(")
        append("addTransitGatewayCidrBlocks=$addTransitGatewayCidrBlocks,")
        append("amazonSideAsn=$amazonSideAsn,")
        append("associationDefaultRouteTableId=$associationDefaultRouteTableId,")
        append("autoAcceptSharedAttachments=$autoAcceptSharedAttachments,")
        append("defaultRouteTableAssociation=$defaultRouteTableAssociation,")
        append("defaultRouteTablePropagation=$defaultRouteTablePropagation,")
        append("dnsSupport=$dnsSupport,")
        append("propagationDefaultRouteTableId=$propagationDefaultRouteTableId,")
        append("removeTransitGatewayCidrBlocks=$removeTransitGatewayCidrBlocks,")
        append("vpnEcmpSupport=$vpnEcmpSupport)")
    }

    override fun hashCode(): kotlin.Int {
        var result = addTransitGatewayCidrBlocks?.hashCode() ?: 0
        result = 31 * result + (amazonSideAsn?.hashCode() ?: 0)
        result = 31 * result + (associationDefaultRouteTableId?.hashCode() ?: 0)
        result = 31 * result + (autoAcceptSharedAttachments?.hashCode() ?: 0)
        result = 31 * result + (defaultRouteTableAssociation?.hashCode() ?: 0)
        result = 31 * result + (defaultRouteTablePropagation?.hashCode() ?: 0)
        result = 31 * result + (dnsSupport?.hashCode() ?: 0)
        result = 31 * result + (propagationDefaultRouteTableId?.hashCode() ?: 0)
        result = 31 * result + (removeTransitGatewayCidrBlocks?.hashCode() ?: 0)
        result = 31 * result + (vpnEcmpSupport?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as ModifyTransitGatewayOptions

        if (addTransitGatewayCidrBlocks != other.addTransitGatewayCidrBlocks) return false
        if (amazonSideAsn != other.amazonSideAsn) return false
        if (associationDefaultRouteTableId != other.associationDefaultRouteTableId) return false
        if (autoAcceptSharedAttachments != other.autoAcceptSharedAttachments) return false
        if (defaultRouteTableAssociation != other.defaultRouteTableAssociation) return false
        if (defaultRouteTablePropagation != other.defaultRouteTablePropagation) return false
        if (dnsSupport != other.dnsSupport) return false
        if (propagationDefaultRouteTableId != other.propagationDefaultRouteTableId) return false
        if (removeTransitGatewayCidrBlocks != other.removeTransitGatewayCidrBlocks) return false
        if (vpnEcmpSupport != other.vpnEcmpSupport) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.ModifyTransitGatewayOptions = Builder(this).apply(block).build()

    public class Builder {
        /**
         * Adds IPv4 or IPv6 CIDR blocks for the transit gateway. Must be a size /24 CIDR block or larger for IPv4, or a size /64 CIDR block or larger for IPv6.
         */
        public var addTransitGatewayCidrBlocks: List<String>? = null
        /**
         * A private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs.
         */
        public var amazonSideAsn: kotlin.Long? = null
        /**
         * The ID of the default association route table.
         */
        public var associationDefaultRouteTableId: kotlin.String? = null
        /**
         * Enable or disable automatic acceptance of attachment requests.
         */
        public var autoAcceptSharedAttachments: aws.sdk.kotlin.services.ec2.model.AutoAcceptSharedAttachmentsValue? = null
        /**
         * Enable or disable automatic association with the default association route table.
         */
        public var defaultRouteTableAssociation: aws.sdk.kotlin.services.ec2.model.DefaultRouteTableAssociationValue? = null
        /**
         * Enable or disable automatic propagation of routes to the default propagation route table.
         */
        public var defaultRouteTablePropagation: aws.sdk.kotlin.services.ec2.model.DefaultRouteTablePropagationValue? = null
        /**
         * Enable or disable DNS support.
         */
        public var dnsSupport: aws.sdk.kotlin.services.ec2.model.DnsSupportValue? = null
        /**
         * The ID of the default propagation route table.
         */
        public var propagationDefaultRouteTableId: kotlin.String? = null
        /**
         * Removes CIDR blocks for the transit gateway.
         */
        public var removeTransitGatewayCidrBlocks: List<String>? = null
        /**
         * Enable or disable Equal Cost Multipath Protocol support.
         */
        public var vpnEcmpSupport: aws.sdk.kotlin.services.ec2.model.VpnEcmpSupportValue? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.ModifyTransitGatewayOptions) : this() {
            this.addTransitGatewayCidrBlocks = x.addTransitGatewayCidrBlocks
            this.amazonSideAsn = x.amazonSideAsn
            this.associationDefaultRouteTableId = x.associationDefaultRouteTableId
            this.autoAcceptSharedAttachments = x.autoAcceptSharedAttachments
            this.defaultRouteTableAssociation = x.defaultRouteTableAssociation
            this.defaultRouteTablePropagation = x.defaultRouteTablePropagation
            this.dnsSupport = x.dnsSupport
            this.propagationDefaultRouteTableId = x.propagationDefaultRouteTableId
            this.removeTransitGatewayCidrBlocks = x.removeTransitGatewayCidrBlocks
            this.vpnEcmpSupport = x.vpnEcmpSupport
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.ModifyTransitGatewayOptions = ModifyTransitGatewayOptions(this)
    }
}
