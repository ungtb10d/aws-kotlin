// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



public class DescribeClientVpnTargetNetworksRequest private constructor(builder: Builder) {
    /**
     * The IDs of the target network associations.
     */
    public val associationIds: List<String>? = builder.associationIds
    /**
     * The ID of the Client VPN endpoint.
     */
    public val clientVpnEndpointId: kotlin.String? = builder.clientVpnEndpointId
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.
     */
    public val dryRun: kotlin.Boolean? = builder.dryRun
    /**
     * One or more filters. Filter names and values are case-sensitive.
     * + `association-id` - The ID of the association.
     * + `target-network-id` - The ID of the subnet specified as the target network.
     * + `vpc-id` - The ID of the VPC in which the target network is located.
     */
    public val filters: List<Filter>? = builder.filters
    /**
     * The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.
     */
    public val maxResults: kotlin.Int? = builder.maxResults
    /**
     * The token to retrieve the next page of results.
     */
    public val nextToken: kotlin.String? = builder.nextToken

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.DescribeClientVpnTargetNetworksRequest = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("DescribeClientVpnTargetNetworksRequest(")
        append("associationIds=$associationIds,")
        append("clientVpnEndpointId=$clientVpnEndpointId,")
        append("dryRun=$dryRun,")
        append("filters=$filters,")
        append("maxResults=$maxResults,")
        append("nextToken=$nextToken)")
    }

    override fun hashCode(): kotlin.Int {
        var result = associationIds?.hashCode() ?: 0
        result = 31 * result + (clientVpnEndpointId?.hashCode() ?: 0)
        result = 31 * result + (dryRun?.hashCode() ?: 0)
        result = 31 * result + (filters?.hashCode() ?: 0)
        result = 31 * result + (maxResults ?: 0)
        result = 31 * result + (nextToken?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as DescribeClientVpnTargetNetworksRequest

        if (associationIds != other.associationIds) return false
        if (clientVpnEndpointId != other.clientVpnEndpointId) return false
        if (dryRun != other.dryRun) return false
        if (filters != other.filters) return false
        if (maxResults != other.maxResults) return false
        if (nextToken != other.nextToken) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.DescribeClientVpnTargetNetworksRequest = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The IDs of the target network associations.
         */
        public var associationIds: List<String>? = null
        /**
         * The ID of the Client VPN endpoint.
         */
        public var clientVpnEndpointId: kotlin.String? = null
        /**
         * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.
         */
        public var dryRun: kotlin.Boolean? = null
        /**
         * One or more filters. Filter names and values are case-sensitive.
         * + `association-id` - The ID of the association.
         * + `target-network-id` - The ID of the subnet specified as the target network.
         * + `vpc-id` - The ID of the VPC in which the target network is located.
         */
        public var filters: List<Filter>? = null
        /**
         * The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.
         */
        public var maxResults: kotlin.Int? = null
        /**
         * The token to retrieve the next page of results.
         */
        public var nextToken: kotlin.String? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.DescribeClientVpnTargetNetworksRequest) : this() {
            this.associationIds = x.associationIds
            this.clientVpnEndpointId = x.clientVpnEndpointId
            this.dryRun = x.dryRun
            this.filters = x.filters
            this.maxResults = x.maxResults
            this.nextToken = x.nextToken
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.DescribeClientVpnTargetNetworksRequest = DescribeClientVpnTargetNetworksRequest(this)
    }
}
