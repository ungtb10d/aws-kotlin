// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.transform

import aws.sdk.kotlin.services.ec2.model.ImageDiskContainer
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.Serializer
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.formurl.FormUrlSerialName
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct

internal fun serializeImageDiskContainerDocument(serializer: Serializer, input: ImageDiskContainer) {
    val DESCRIPTION_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("Description"))
    val DEVICENAME_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("DeviceName"))
    val FORMAT_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("Format"))
    val SNAPSHOTID_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("SnapshotId"))
    val URL_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("Url"))
    val USERBUCKET_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, FormUrlSerialName("UserBucket"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(FormUrlSerialName("ImageDiskContainer"))
        field(DESCRIPTION_DESCRIPTOR)
        field(DEVICENAME_DESCRIPTOR)
        field(FORMAT_DESCRIPTOR)
        field(SNAPSHOTID_DESCRIPTOR)
        field(URL_DESCRIPTOR)
        field(USERBUCKET_DESCRIPTOR)
    }

    serializer.serializeStruct(OBJ_DESCRIPTOR) {
        input.description?.let { field(DESCRIPTION_DESCRIPTOR, it) }
        input.deviceName?.let { field(DEVICENAME_DESCRIPTOR, it) }
        input.format?.let { field(FORMAT_DESCRIPTOR, it) }
        input.snapshotId?.let { field(SNAPSHOTID_DESCRIPTOR, it) }
        input.url?.let { field(URL_DESCRIPTOR, it) }
        input.userBucket?.let { field(USERBUCKET_DESCRIPTOR, it, ::serializeUserBucketDocument) }
    }
}
