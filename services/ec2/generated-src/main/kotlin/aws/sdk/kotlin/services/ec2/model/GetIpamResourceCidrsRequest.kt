// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



public class GetIpamResourceCidrsRequest private constructor(builder: Builder) {
    /**
     * A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.
     */
    public val dryRun: kotlin.Boolean? = builder.dryRun
    /**
     * One or more filters for the request. For more information about filtering, see [Filtering CLI output](https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-filter.html).
     */
    public val filters: List<Filter>? = builder.filters
    /**
     * The ID of the IPAM pool that the resource is in.
     */
    public val ipamPoolId: kotlin.String? = builder.ipamPoolId
    /**
     * The ID of the scope that the resource is in.
     */
    public val ipamScopeId: kotlin.String? = builder.ipamScopeId
    /**
     * The maximum number of results to return in the request.
     */
    public val maxResults: kotlin.Int? = builder.maxResults
    /**
     * The token for the next page of results.
     */
    public val nextToken: kotlin.String? = builder.nextToken
    /**
     * The ID of the resource.
     */
    public val resourceId: kotlin.String? = builder.resourceId
    /**
     * The ID of the Amazon Web Services account that owns the resource.
     */
    public val resourceOwner: kotlin.String? = builder.resourceOwner
    /**
     * A tag on an IPAM resource.
     */
    public val resourceTag: aws.sdk.kotlin.services.ec2.model.RequestIpamResourceTag? = builder.resourceTag
    /**
     * The resource type.
     */
    public val resourceType: aws.sdk.kotlin.services.ec2.model.IpamResourceType? = builder.resourceType

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.GetIpamResourceCidrsRequest = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("GetIpamResourceCidrsRequest(")
        append("dryRun=$dryRun,")
        append("filters=$filters,")
        append("ipamPoolId=$ipamPoolId,")
        append("ipamScopeId=$ipamScopeId,")
        append("maxResults=$maxResults,")
        append("nextToken=$nextToken,")
        append("resourceId=$resourceId,")
        append("resourceOwner=$resourceOwner,")
        append("resourceTag=$resourceTag,")
        append("resourceType=$resourceType)")
    }

    override fun hashCode(): kotlin.Int {
        var result = dryRun?.hashCode() ?: 0
        result = 31 * result + (filters?.hashCode() ?: 0)
        result = 31 * result + (ipamPoolId?.hashCode() ?: 0)
        result = 31 * result + (ipamScopeId?.hashCode() ?: 0)
        result = 31 * result + (maxResults ?: 0)
        result = 31 * result + (nextToken?.hashCode() ?: 0)
        result = 31 * result + (resourceId?.hashCode() ?: 0)
        result = 31 * result + (resourceOwner?.hashCode() ?: 0)
        result = 31 * result + (resourceTag?.hashCode() ?: 0)
        result = 31 * result + (resourceType?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as GetIpamResourceCidrsRequest

        if (dryRun != other.dryRun) return false
        if (filters != other.filters) return false
        if (ipamPoolId != other.ipamPoolId) return false
        if (ipamScopeId != other.ipamScopeId) return false
        if (maxResults != other.maxResults) return false
        if (nextToken != other.nextToken) return false
        if (resourceId != other.resourceId) return false
        if (resourceOwner != other.resourceOwner) return false
        if (resourceTag != other.resourceTag) return false
        if (resourceType != other.resourceType) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.GetIpamResourceCidrsRequest = Builder(this).apply(block).build()

    public class Builder {
        /**
         * A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.
         */
        public var dryRun: kotlin.Boolean? = null
        /**
         * One or more filters for the request. For more information about filtering, see [Filtering CLI output](https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-filter.html).
         */
        public var filters: List<Filter>? = null
        /**
         * The ID of the IPAM pool that the resource is in.
         */
        public var ipamPoolId: kotlin.String? = null
        /**
         * The ID of the scope that the resource is in.
         */
        public var ipamScopeId: kotlin.String? = null
        /**
         * The maximum number of results to return in the request.
         */
        public var maxResults: kotlin.Int? = null
        /**
         * The token for the next page of results.
         */
        public var nextToken: kotlin.String? = null
        /**
         * The ID of the resource.
         */
        public var resourceId: kotlin.String? = null
        /**
         * The ID of the Amazon Web Services account that owns the resource.
         */
        public var resourceOwner: kotlin.String? = null
        /**
         * A tag on an IPAM resource.
         */
        public var resourceTag: aws.sdk.kotlin.services.ec2.model.RequestIpamResourceTag? = null
        /**
         * The resource type.
         */
        public var resourceType: aws.sdk.kotlin.services.ec2.model.IpamResourceType? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.GetIpamResourceCidrsRequest) : this() {
            this.dryRun = x.dryRun
            this.filters = x.filters
            this.ipamPoolId = x.ipamPoolId
            this.ipamScopeId = x.ipamScopeId
            this.maxResults = x.maxResults
            this.nextToken = x.nextToken
            this.resourceId = x.resourceId
            this.resourceOwner = x.resourceOwner
            this.resourceTag = x.resourceTag
            this.resourceType = x.resourceType
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.GetIpamResourceCidrsRequest = GetIpamResourceCidrsRequest(this)

        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.RequestIpamResourceTag] inside the given [block]
         */
        public fun resourceTag(block: aws.sdk.kotlin.services.ec2.model.RequestIpamResourceTag.Builder.() -> kotlin.Unit) {
            this.resourceTag = aws.sdk.kotlin.services.ec2.model.RequestIpamResourceTag.invoke(block)
        }
    }
}
