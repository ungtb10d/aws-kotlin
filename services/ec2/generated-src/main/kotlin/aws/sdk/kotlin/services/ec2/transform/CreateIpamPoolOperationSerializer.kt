// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.transform

import aws.sdk.kotlin.services.ec2.model.AddressFamily
import aws.sdk.kotlin.services.ec2.model.CreateIpamPoolRequest
import aws.sdk.kotlin.services.ec2.model.IpamPoolAwsService
import aws.sdk.kotlin.services.ec2.model.RequestIpamResourceTag
import aws.sdk.kotlin.services.ec2.model.TagSpecification
import aws.smithy.kotlin.runtime.client.ExecutionContext
import aws.smithy.kotlin.runtime.client.idempotencyTokenProvider
import aws.smithy.kotlin.runtime.http.HttpBody
import aws.smithy.kotlin.runtime.http.HttpMethod
import aws.smithy.kotlin.runtime.http.content.ByteArrayContent
import aws.smithy.kotlin.runtime.http.operation.HttpSerialize
import aws.smithy.kotlin.runtime.http.request.HttpRequestBuilder
import aws.smithy.kotlin.runtime.http.request.url
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.formurl.FormUrlFlattened
import aws.smithy.kotlin.runtime.serde.formurl.FormUrlSerialName
import aws.smithy.kotlin.runtime.serde.formurl.FormUrlSerializer
import aws.smithy.kotlin.runtime.serde.formurl.QueryLiteral
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct


internal class CreateIpamPoolOperationSerializer: HttpSerialize<CreateIpamPoolRequest> {
    override suspend fun serialize(context: ExecutionContext, input: CreateIpamPoolRequest): HttpRequestBuilder {
        val builder = HttpRequestBuilder()
        builder.method = HttpMethod.POST

        builder.url {
            path = "/"
        }

        val payload = serializeCreateIpamPoolOperationBody(context, input)
        builder.body = ByteArrayContent(payload)
        if (builder.body !is HttpBody.Empty) {
            builder.headers.setMissing("Content-Type", "application/x-www-form-urlencoded")
        }
        return builder
    }
}

private fun serializeCreateIpamPoolOperationBody(context: ExecutionContext, input: CreateIpamPoolRequest): ByteArray {
    val serializer = FormUrlSerializer()
    val ADDRESSFAMILY_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Enum, FormUrlSerialName("AddressFamily"))
    val ALLOCATIONDEFAULTNETMASKLENGTH_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, FormUrlSerialName("AllocationDefaultNetmaskLength"))
    val ALLOCATIONMAXNETMASKLENGTH_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, FormUrlSerialName("AllocationMaxNetmaskLength"))
    val ALLOCATIONMINNETMASKLENGTH_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, FormUrlSerialName("AllocationMinNetmaskLength"))
    val ALLOCATIONRESOURCETAGS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, FormUrlSerialName("AllocationResourceTag"), FormUrlFlattened)
    val AUTOIMPORT_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Boolean, FormUrlSerialName("AutoImport"))
    val AWSSERVICE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Enum, FormUrlSerialName("AwsService"))
    val CLIENTTOKEN_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("ClientToken"))
    val DESCRIPTION_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("Description"))
    val DRYRUN_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Boolean, FormUrlSerialName("DryRun"))
    val IPAMSCOPEID_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("IpamScopeId"))
    val LOCALE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("Locale"))
    val PUBLICLYADVERTISABLE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Boolean, FormUrlSerialName("PubliclyAdvertisable"))
    val SOURCEIPAMPOOLID_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("SourceIpamPoolId"))
    val TAGSPECIFICATIONS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, FormUrlSerialName("TagSpecification"), FormUrlFlattened)
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(FormUrlSerialName("CreateIpamPoolRequest"))
        trait(QueryLiteral("Action", "CreateIpamPool"))
        trait(QueryLiteral("Version", "2016-11-15"))
        field(ADDRESSFAMILY_DESCRIPTOR)
        field(ALLOCATIONDEFAULTNETMASKLENGTH_DESCRIPTOR)
        field(ALLOCATIONMAXNETMASKLENGTH_DESCRIPTOR)
        field(ALLOCATIONMINNETMASKLENGTH_DESCRIPTOR)
        field(ALLOCATIONRESOURCETAGS_DESCRIPTOR)
        field(AUTOIMPORT_DESCRIPTOR)
        field(AWSSERVICE_DESCRIPTOR)
        field(CLIENTTOKEN_DESCRIPTOR)
        field(DESCRIPTION_DESCRIPTOR)
        field(DRYRUN_DESCRIPTOR)
        field(IPAMSCOPEID_DESCRIPTOR)
        field(LOCALE_DESCRIPTOR)
        field(PUBLICLYADVERTISABLE_DESCRIPTOR)
        field(SOURCEIPAMPOOLID_DESCRIPTOR)
        field(TAGSPECIFICATIONS_DESCRIPTOR)
    }

    serializer.serializeStruct(OBJ_DESCRIPTOR) {
        input.addressFamily?.let { field(ADDRESSFAMILY_DESCRIPTOR, it.value) }
        input.allocationDefaultNetmaskLength?.let { field(ALLOCATIONDEFAULTNETMASKLENGTH_DESCRIPTOR, it) }
        input.allocationMaxNetmaskLength?.let { field(ALLOCATIONMAXNETMASKLENGTH_DESCRIPTOR, it) }
        input.allocationMinNetmaskLength?.let { field(ALLOCATIONMINNETMASKLENGTH_DESCRIPTOR, it) }
        if (input.allocationResourceTags != null) {
            listField(ALLOCATIONRESOURCETAGS_DESCRIPTOR) {
                for (el0 in input.allocationResourceTags) {
                    serializeSdkSerializable(asSdkSerializable(el0, ::serializeRequestIpamResourceTagDocument))
                }
            }
        }
        input.autoImport?.let { field(AUTOIMPORT_DESCRIPTOR, it) }
        input.awsService?.let { field(AWSSERVICE_DESCRIPTOR, it.value) }
        input.clientToken?.let { field(CLIENTTOKEN_DESCRIPTOR, it) } ?: field(CLIENTTOKEN_DESCRIPTOR, context.idempotencyTokenProvider.generateToken())
        input.description?.let { field(DESCRIPTION_DESCRIPTOR, it) }
        input.dryRun?.let { field(DRYRUN_DESCRIPTOR, it) }
        input.ipamScopeId?.let { field(IPAMSCOPEID_DESCRIPTOR, it) }
        input.locale?.let { field(LOCALE_DESCRIPTOR, it) }
        input.publiclyAdvertisable?.let { field(PUBLICLYADVERTISABLE_DESCRIPTOR, it) }
        input.sourceIpamPoolId?.let { field(SOURCEIPAMPOOLID_DESCRIPTOR, it) }
        if (input.tagSpecifications != null) {
            listField(TAGSPECIFICATIONS_DESCRIPTOR) {
                for (el0 in input.tagSpecifications) {
                    serializeSdkSerializable(asSdkSerializable(el0, ::serializeTagSpecificationDocument))
                }
            }
        }
    }
    return serializer.toByteArray()
}
