// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



public class AssignPrivateIpAddressesResponse private constructor(builder: Builder) {
    /**
     * The IPv4 prefixes that are assigned to the network interface.
     */
    public val assignedIpv4Prefixes: List<Ipv4PrefixSpecification>? = builder.assignedIpv4Prefixes
    /**
     * The private IP addresses assigned to the network interface.
     */
    public val assignedPrivateIpAddresses: List<AssignedPrivateIpAddress>? = builder.assignedPrivateIpAddresses
    /**
     * The ID of the network interface.
     */
    public val networkInterfaceId: kotlin.String? = builder.networkInterfaceId

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.AssignPrivateIpAddressesResponse = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("AssignPrivateIpAddressesResponse(")
        append("assignedIpv4Prefixes=$assignedIpv4Prefixes,")
        append("assignedPrivateIpAddresses=$assignedPrivateIpAddresses,")
        append("networkInterfaceId=$networkInterfaceId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = assignedIpv4Prefixes?.hashCode() ?: 0
        result = 31 * result + (assignedPrivateIpAddresses?.hashCode() ?: 0)
        result = 31 * result + (networkInterfaceId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as AssignPrivateIpAddressesResponse

        if (assignedIpv4Prefixes != other.assignedIpv4Prefixes) return false
        if (assignedPrivateIpAddresses != other.assignedPrivateIpAddresses) return false
        if (networkInterfaceId != other.networkInterfaceId) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.AssignPrivateIpAddressesResponse = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The IPv4 prefixes that are assigned to the network interface.
         */
        public var assignedIpv4Prefixes: List<Ipv4PrefixSpecification>? = null
        /**
         * The private IP addresses assigned to the network interface.
         */
        public var assignedPrivateIpAddresses: List<AssignedPrivateIpAddress>? = null
        /**
         * The ID of the network interface.
         */
        public var networkInterfaceId: kotlin.String? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.AssignPrivateIpAddressesResponse) : this() {
            this.assignedIpv4Prefixes = x.assignedIpv4Prefixes
            this.assignedPrivateIpAddresses = x.assignedPrivateIpAddresses
            this.networkInterfaceId = x.networkInterfaceId
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.AssignPrivateIpAddressesResponse = AssignPrivateIpAddressesResponse(this)
    }
}
