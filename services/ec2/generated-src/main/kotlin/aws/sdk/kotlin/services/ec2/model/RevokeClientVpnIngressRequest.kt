// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



public class RevokeClientVpnIngressRequest private constructor(builder: Builder) {
    /**
     * The ID of the Active Directory group for which to revoke access.
     */
    public val accessGroupId: kotlin.String? = builder.accessGroupId
    /**
     * The ID of the Client VPN endpoint with which the authorization rule is associated.
     */
    public val clientVpnEndpointId: kotlin.String? = builder.clientVpnEndpointId
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.
     */
    public val dryRun: kotlin.Boolean? = builder.dryRun
    /**
     * Indicates whether access should be revoked for all clients.
     */
    public val revokeAllGroups: kotlin.Boolean? = builder.revokeAllGroups
    /**
     * The IPv4 address range, in CIDR notation, of the network for which access is being removed.
     */
    public val targetNetworkCidr: kotlin.String? = builder.targetNetworkCidr

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.RevokeClientVpnIngressRequest = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("RevokeClientVpnIngressRequest(")
        append("accessGroupId=$accessGroupId,")
        append("clientVpnEndpointId=$clientVpnEndpointId,")
        append("dryRun=$dryRun,")
        append("revokeAllGroups=$revokeAllGroups,")
        append("targetNetworkCidr=$targetNetworkCidr)")
    }

    override fun hashCode(): kotlin.Int {
        var result = accessGroupId?.hashCode() ?: 0
        result = 31 * result + (clientVpnEndpointId?.hashCode() ?: 0)
        result = 31 * result + (dryRun?.hashCode() ?: 0)
        result = 31 * result + (revokeAllGroups?.hashCode() ?: 0)
        result = 31 * result + (targetNetworkCidr?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as RevokeClientVpnIngressRequest

        if (accessGroupId != other.accessGroupId) return false
        if (clientVpnEndpointId != other.clientVpnEndpointId) return false
        if (dryRun != other.dryRun) return false
        if (revokeAllGroups != other.revokeAllGroups) return false
        if (targetNetworkCidr != other.targetNetworkCidr) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.RevokeClientVpnIngressRequest = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The ID of the Active Directory group for which to revoke access.
         */
        public var accessGroupId: kotlin.String? = null
        /**
         * The ID of the Client VPN endpoint with which the authorization rule is associated.
         */
        public var clientVpnEndpointId: kotlin.String? = null
        /**
         * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.
         */
        public var dryRun: kotlin.Boolean? = null
        /**
         * Indicates whether access should be revoked for all clients.
         */
        public var revokeAllGroups: kotlin.Boolean? = null
        /**
         * The IPv4 address range, in CIDR notation, of the network for which access is being removed.
         */
        public var targetNetworkCidr: kotlin.String? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.RevokeClientVpnIngressRequest) : this() {
            this.accessGroupId = x.accessGroupId
            this.clientVpnEndpointId = x.clientVpnEndpointId
            this.dryRun = x.dryRun
            this.revokeAllGroups = x.revokeAllGroups
            this.targetNetworkCidr = x.targetNetworkCidr
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.RevokeClientVpnIngressRequest = RevokeClientVpnIngressRequest(this)
    }
}
