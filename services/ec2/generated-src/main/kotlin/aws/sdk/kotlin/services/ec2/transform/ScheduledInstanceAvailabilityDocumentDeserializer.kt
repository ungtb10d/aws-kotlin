// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.transform

import aws.sdk.kotlin.services.ec2.model.ScheduledInstanceAvailability
import aws.smithy.kotlin.runtime.serde.Deserializer
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct
import aws.smithy.kotlin.runtime.serde.xml.XmlDeserializer
import aws.smithy.kotlin.runtime.serde.xml.XmlNamespace
import aws.smithy.kotlin.runtime.serde.xml.XmlSerialName
import aws.smithy.kotlin.runtime.time.Instant

internal fun deserializeScheduledInstanceAvailabilityDocument(deserializer: Deserializer): ScheduledInstanceAvailability {
    val builder = ScheduledInstanceAvailability.Builder()
    val AVAILABILITYZONE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("availabilityZone"))
    val AVAILABLEINSTANCECOUNT_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, XmlSerialName("availableInstanceCount"))
    val FIRSTSLOTSTARTTIME_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Timestamp, XmlSerialName("firstSlotStartTime"))
    val HOURLYPRICE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("hourlyPrice"))
    val INSTANCETYPE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("instanceType"))
    val MAXTERMDURATIONINDAYS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, XmlSerialName("maxTermDurationInDays"))
    val MINTERMDURATIONINDAYS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, XmlSerialName("minTermDurationInDays"))
    val NETWORKPLATFORM_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("networkPlatform"))
    val PLATFORM_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("platform"))
    val PURCHASETOKEN_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, XmlSerialName("purchaseToken"))
    val RECURRENCE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, XmlSerialName("recurrence"))
    val SLOTDURATIONINHOURS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, XmlSerialName("slotDurationInHours"))
    val TOTALSCHEDULEDINSTANCEHOURS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, XmlSerialName("totalScheduledInstanceHours"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(XmlSerialName("ScheduledInstanceAvailability"))
        trait(XmlNamespace("http://ec2.amazonaws.com/doc/2016-11-15"))
        field(AVAILABILITYZONE_DESCRIPTOR)
        field(AVAILABLEINSTANCECOUNT_DESCRIPTOR)
        field(FIRSTSLOTSTARTTIME_DESCRIPTOR)
        field(HOURLYPRICE_DESCRIPTOR)
        field(INSTANCETYPE_DESCRIPTOR)
        field(MAXTERMDURATIONINDAYS_DESCRIPTOR)
        field(MINTERMDURATIONINDAYS_DESCRIPTOR)
        field(NETWORKPLATFORM_DESCRIPTOR)
        field(PLATFORM_DESCRIPTOR)
        field(PURCHASETOKEN_DESCRIPTOR)
        field(RECURRENCE_DESCRIPTOR)
        field(SLOTDURATIONINHOURS_DESCRIPTOR)
        field(TOTALSCHEDULEDINSTANCEHOURS_DESCRIPTOR)
    }

    deserializer.deserializeStruct(OBJ_DESCRIPTOR) {
        loop@while (true) {
            when (findNextFieldIndex()) {
                AVAILABILITYZONE_DESCRIPTOR.index -> builder.availabilityZone = deserializeString()
                AVAILABLEINSTANCECOUNT_DESCRIPTOR.index -> builder.availableInstanceCount = deserializeInt()
                FIRSTSLOTSTARTTIME_DESCRIPTOR.index -> builder.firstSlotStartTime = deserializeString().let { Instant.fromIso8601(it) }
                HOURLYPRICE_DESCRIPTOR.index -> builder.hourlyPrice = deserializeString()
                INSTANCETYPE_DESCRIPTOR.index -> builder.instanceType = deserializeString()
                MAXTERMDURATIONINDAYS_DESCRIPTOR.index -> builder.maxTermDurationInDays = deserializeInt()
                MINTERMDURATIONINDAYS_DESCRIPTOR.index -> builder.minTermDurationInDays = deserializeInt()
                NETWORKPLATFORM_DESCRIPTOR.index -> builder.networkPlatform = deserializeString()
                PLATFORM_DESCRIPTOR.index -> builder.platform = deserializeString()
                PURCHASETOKEN_DESCRIPTOR.index -> builder.purchaseToken = deserializeString()
                RECURRENCE_DESCRIPTOR.index -> builder.recurrence = deserializeScheduledInstanceRecurrenceDocument(deserializer)
                SLOTDURATIONINHOURS_DESCRIPTOR.index -> builder.slotDurationInHours = deserializeInt()
                TOTALSCHEDULEDINSTANCEHOURS_DESCRIPTOR.index -> builder.totalScheduledInstanceHours = deserializeInt()
                null -> break@loop
                else -> skipValue()
            }
        }
    }
    return builder.build()
}
