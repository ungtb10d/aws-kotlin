// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model

import aws.smithy.kotlin.runtime.time.Instant

/**
 * The options for Spot Instances.
 */
public class SpotMarketOptions private constructor(builder: Builder) {
    /**
     * Deprecated.
     */
    public val blockDurationMinutes: kotlin.Int? = builder.blockDurationMinutes
    /**
     * The behavior when a Spot Instance is interrupted. The default is `terminate`.
     */
    public val instanceInterruptionBehavior: aws.sdk.kotlin.services.ec2.model.InstanceInterruptionBehavior? = builder.instanceInterruptionBehavior
    /**
     * The maximum hourly price that you're willing to pay for a Spot Instance. We do not recommend using this parameter because it can lead to increased interruptions. If you do not specify this parameter, you will pay the current Spot price.
     *
     * If you specify a maximum price, your Spot Instances will be interrupted more frequently than if you do not specify this parameter.
     */
    public val maxPrice: kotlin.String? = builder.maxPrice
    /**
     * The Spot Instance request type. For [RunInstances](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances), persistent Spot Instance requests are only supported when the instance interruption behavior is either `hibernate` or `stop`.
     */
    public val spotInstanceType: aws.sdk.kotlin.services.ec2.model.SpotInstanceType? = builder.spotInstanceType
    /**
     * The end date of the request, in UTC format (*YYYY*-*MM*-*DD*T*HH*:*MM*:*SS*Z). Supported only for persistent requests.
     * + For a persistent request, the request remains active until the `ValidUntil` date and time is reached. Otherwise, the request remains active until you cancel it.
     * + For a one-time request, `ValidUntil` is not supported. The request remains active until all instances launch or you cancel the request.
     */
    public val validUntil: aws.smithy.kotlin.runtime.time.Instant? = builder.validUntil

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.SpotMarketOptions = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("SpotMarketOptions(")
        append("blockDurationMinutes=$blockDurationMinutes,")
        append("instanceInterruptionBehavior=$instanceInterruptionBehavior,")
        append("maxPrice=$maxPrice,")
        append("spotInstanceType=$spotInstanceType,")
        append("validUntil=$validUntil)")
    }

    override fun hashCode(): kotlin.Int {
        var result = blockDurationMinutes ?: 0
        result = 31 * result + (instanceInterruptionBehavior?.hashCode() ?: 0)
        result = 31 * result + (maxPrice?.hashCode() ?: 0)
        result = 31 * result + (spotInstanceType?.hashCode() ?: 0)
        result = 31 * result + (validUntil?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as SpotMarketOptions

        if (blockDurationMinutes != other.blockDurationMinutes) return false
        if (instanceInterruptionBehavior != other.instanceInterruptionBehavior) return false
        if (maxPrice != other.maxPrice) return false
        if (spotInstanceType != other.spotInstanceType) return false
        if (validUntil != other.validUntil) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.SpotMarketOptions = Builder(this).apply(block).build()

    public class Builder {
        /**
         * Deprecated.
         */
        public var blockDurationMinutes: kotlin.Int? = null
        /**
         * The behavior when a Spot Instance is interrupted. The default is `terminate`.
         */
        public var instanceInterruptionBehavior: aws.sdk.kotlin.services.ec2.model.InstanceInterruptionBehavior? = null
        /**
         * The maximum hourly price that you're willing to pay for a Spot Instance. We do not recommend using this parameter because it can lead to increased interruptions. If you do not specify this parameter, you will pay the current Spot price.
         *
         * If you specify a maximum price, your Spot Instances will be interrupted more frequently than if you do not specify this parameter.
         */
        public var maxPrice: kotlin.String? = null
        /**
         * The Spot Instance request type. For [RunInstances](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances), persistent Spot Instance requests are only supported when the instance interruption behavior is either `hibernate` or `stop`.
         */
        public var spotInstanceType: aws.sdk.kotlin.services.ec2.model.SpotInstanceType? = null
        /**
         * The end date of the request, in UTC format (*YYYY*-*MM*-*DD*T*HH*:*MM*:*SS*Z). Supported only for persistent requests.
         * + For a persistent request, the request remains active until the `ValidUntil` date and time is reached. Otherwise, the request remains active until you cancel it.
         * + For a one-time request, `ValidUntil` is not supported. The request remains active until all instances launch or you cancel the request.
         */
        public var validUntil: aws.smithy.kotlin.runtime.time.Instant? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.SpotMarketOptions) : this() {
            this.blockDurationMinutes = x.blockDurationMinutes
            this.instanceInterruptionBehavior = x.instanceInterruptionBehavior
            this.maxPrice = x.maxPrice
            this.spotInstanceType = x.spotInstanceType
            this.validUntil = x.validUntil
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.SpotMarketOptions = SpotMarketOptions(this)
    }
}
