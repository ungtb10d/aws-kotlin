// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes a load balancer listener.
 */
public class AnalysisLoadBalancerListener private constructor(builder: Builder) {
    /**
     * &#91;Classic Load Balancers&#93; The back-end port for the listener.
     */
    public val instancePort: kotlin.Int? = builder.instancePort
    /**
     * The port on which the load balancer is listening.
     */
    public val loadBalancerPort: kotlin.Int? = builder.loadBalancerPort

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.AnalysisLoadBalancerListener = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("AnalysisLoadBalancerListener(")
        append("instancePort=$instancePort,")
        append("loadBalancerPort=$loadBalancerPort)")
    }

    override fun hashCode(): kotlin.Int {
        var result = instancePort ?: 0
        result = 31 * result + (loadBalancerPort ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as AnalysisLoadBalancerListener

        if (instancePort != other.instancePort) return false
        if (loadBalancerPort != other.loadBalancerPort) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.AnalysisLoadBalancerListener = Builder(this).apply(block).build()

    public class Builder {
        /**
         * &#91;Classic Load Balancers&#93; The back-end port for the listener.
         */
        public var instancePort: kotlin.Int? = null
        /**
         * The port on which the load balancer is listening.
         */
        public var loadBalancerPort: kotlin.Int? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.AnalysisLoadBalancerListener) : this() {
            this.instancePort = x.instancePort
            this.loadBalancerPort = x.loadBalancerPort
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.AnalysisLoadBalancerListener = AnalysisLoadBalancerListener(this)
    }
}
