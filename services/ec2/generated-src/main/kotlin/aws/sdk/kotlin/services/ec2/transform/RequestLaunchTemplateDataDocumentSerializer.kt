// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.transform

import aws.sdk.kotlin.services.ec2.model.RequestLaunchTemplateData
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.Serializer
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.formurl.FormUrlFlattened
import aws.smithy.kotlin.runtime.serde.formurl.FormUrlSerialName
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct

internal fun serializeRequestLaunchTemplateDataDocument(serializer: Serializer, input: RequestLaunchTemplateData) {
    val BLOCKDEVICEMAPPINGS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, FormUrlSerialName("BlockDeviceMapping"), FormUrlFlattened)
    val CAPACITYRESERVATIONSPECIFICATION_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, FormUrlSerialName("CapacityReservationSpecification"))
    val CPUOPTIONS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, FormUrlSerialName("CpuOptions"))
    val CREDITSPECIFICATION_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, FormUrlSerialName("CreditSpecification"))
    val DISABLEAPISTOP_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Boolean, FormUrlSerialName("DisableApiStop"))
    val DISABLEAPITERMINATION_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Boolean, FormUrlSerialName("DisableApiTermination"))
    val EBSOPTIMIZED_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Boolean, FormUrlSerialName("EbsOptimized"))
    val ELASTICGPUSPECIFICATIONS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, FormUrlSerialName("ElasticGpuSpecification"), FormUrlFlattened)
    val ELASTICINFERENCEACCELERATORS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, FormUrlSerialName("ElasticInferenceAccelerator"), FormUrlFlattened)
    val ENCLAVEOPTIONS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, FormUrlSerialName("EnclaveOptions"))
    val HIBERNATIONOPTIONS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, FormUrlSerialName("HibernationOptions"))
    val IAMINSTANCEPROFILE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, FormUrlSerialName("IamInstanceProfile"))
    val IMAGEID_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("ImageId"))
    val INSTANCEINITIATEDSHUTDOWNBEHAVIOR_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("InstanceInitiatedShutdownBehavior"))
    val INSTANCEMARKETOPTIONS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, FormUrlSerialName("InstanceMarketOptions"))
    val INSTANCEREQUIREMENTS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, FormUrlSerialName("InstanceRequirements"))
    val INSTANCETYPE_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("InstanceType"))
    val KERNELID_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("KernelId"))
    val KEYNAME_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("KeyName"))
    val LICENSESPECIFICATIONS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, FormUrlSerialName("LicenseSpecification"), FormUrlFlattened)
    val MAINTENANCEOPTIONS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, FormUrlSerialName("MaintenanceOptions"))
    val METADATAOPTIONS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, FormUrlSerialName("MetadataOptions"))
    val MONITORING_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, FormUrlSerialName("Monitoring"))
    val NETWORKINTERFACES_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, FormUrlSerialName("NetworkInterface"), FormUrlFlattened)
    val PLACEMENT_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, FormUrlSerialName("Placement"))
    val PRIVATEDNSNAMEOPTIONS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Struct, FormUrlSerialName("PrivateDnsNameOptions"))
    val RAMDISKID_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("RamDiskId"))
    val SECURITYGROUPIDS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, FormUrlSerialName("SecurityGroupId"), FormUrlFlattened)
    val SECURITYGROUPS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, FormUrlSerialName("SecurityGroup"), FormUrlFlattened)
    val TAGSPECIFICATIONS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.List, FormUrlSerialName("TagSpecification"), FormUrlFlattened)
    val USERDATA_DESCRIPTOR = SdkFieldDescriptor(SerialKind.String, FormUrlSerialName("UserData"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(FormUrlSerialName("RequestLaunchTemplateData"))
        field(BLOCKDEVICEMAPPINGS_DESCRIPTOR)
        field(CAPACITYRESERVATIONSPECIFICATION_DESCRIPTOR)
        field(CPUOPTIONS_DESCRIPTOR)
        field(CREDITSPECIFICATION_DESCRIPTOR)
        field(DISABLEAPISTOP_DESCRIPTOR)
        field(DISABLEAPITERMINATION_DESCRIPTOR)
        field(EBSOPTIMIZED_DESCRIPTOR)
        field(ELASTICGPUSPECIFICATIONS_DESCRIPTOR)
        field(ELASTICINFERENCEACCELERATORS_DESCRIPTOR)
        field(ENCLAVEOPTIONS_DESCRIPTOR)
        field(HIBERNATIONOPTIONS_DESCRIPTOR)
        field(IAMINSTANCEPROFILE_DESCRIPTOR)
        field(IMAGEID_DESCRIPTOR)
        field(INSTANCEINITIATEDSHUTDOWNBEHAVIOR_DESCRIPTOR)
        field(INSTANCEMARKETOPTIONS_DESCRIPTOR)
        field(INSTANCEREQUIREMENTS_DESCRIPTOR)
        field(INSTANCETYPE_DESCRIPTOR)
        field(KERNELID_DESCRIPTOR)
        field(KEYNAME_DESCRIPTOR)
        field(LICENSESPECIFICATIONS_DESCRIPTOR)
        field(MAINTENANCEOPTIONS_DESCRIPTOR)
        field(METADATAOPTIONS_DESCRIPTOR)
        field(MONITORING_DESCRIPTOR)
        field(NETWORKINTERFACES_DESCRIPTOR)
        field(PLACEMENT_DESCRIPTOR)
        field(PRIVATEDNSNAMEOPTIONS_DESCRIPTOR)
        field(RAMDISKID_DESCRIPTOR)
        field(SECURITYGROUPIDS_DESCRIPTOR)
        field(SECURITYGROUPS_DESCRIPTOR)
        field(TAGSPECIFICATIONS_DESCRIPTOR)
        field(USERDATA_DESCRIPTOR)
    }

    serializer.serializeStruct(OBJ_DESCRIPTOR) {
        input.kernelId?.let { field(KERNELID_DESCRIPTOR, it) }
        input.ebsOptimized?.let { field(EBSOPTIMIZED_DESCRIPTOR, it) }
        input.iamInstanceProfile?.let { field(IAMINSTANCEPROFILE_DESCRIPTOR, it, ::serializeLaunchTemplateIamInstanceProfileSpecificationRequestDocument) }
        if (input.blockDeviceMappings != null) {
            listField(BLOCKDEVICEMAPPINGS_DESCRIPTOR) {
                for (el0 in input.blockDeviceMappings) {
                    serializeSdkSerializable(asSdkSerializable(el0, ::serializeLaunchTemplateBlockDeviceMappingRequestDocument))
                }
            }
        }
        if (input.networkInterfaces != null) {
            listField(NETWORKINTERFACES_DESCRIPTOR) {
                for (el0 in input.networkInterfaces) {
                    serializeSdkSerializable(asSdkSerializable(el0, ::serializeLaunchTemplateInstanceNetworkInterfaceSpecificationRequestDocument))
                }
            }
        }
        input.imageId?.let { field(IMAGEID_DESCRIPTOR, it) }
        input.instanceType?.let { field(INSTANCETYPE_DESCRIPTOR, it.value) }
        input.keyName?.let { field(KEYNAME_DESCRIPTOR, it) }
        input.monitoring?.let { field(MONITORING_DESCRIPTOR, it, ::serializeLaunchTemplatesMonitoringRequestDocument) }
        input.placement?.let { field(PLACEMENT_DESCRIPTOR, it, ::serializeLaunchTemplatePlacementRequestDocument) }
        input.ramDiskId?.let { field(RAMDISKID_DESCRIPTOR, it) }
        input.disableApiTermination?.let { field(DISABLEAPITERMINATION_DESCRIPTOR, it) }
        input.instanceInitiatedShutdownBehavior?.let { field(INSTANCEINITIATEDSHUTDOWNBEHAVIOR_DESCRIPTOR, it.value) }
        input.userData?.let { field(USERDATA_DESCRIPTOR, it) }
        if (input.tagSpecifications != null) {
            listField(TAGSPECIFICATIONS_DESCRIPTOR) {
                for (el0 in input.tagSpecifications) {
                    serializeSdkSerializable(asSdkSerializable(el0, ::serializeLaunchTemplateTagSpecificationRequestDocument))
                }
            }
        }
        if (input.elasticGpuSpecifications != null) {
            listField(ELASTICGPUSPECIFICATIONS_DESCRIPTOR) {
                for (el0 in input.elasticGpuSpecifications) {
                    serializeSdkSerializable(asSdkSerializable(el0, ::serializeElasticGpuSpecificationDocument))
                }
            }
        }
        if (input.elasticInferenceAccelerators != null) {
            listField(ELASTICINFERENCEACCELERATORS_DESCRIPTOR) {
                for (el0 in input.elasticInferenceAccelerators) {
                    serializeSdkSerializable(asSdkSerializable(el0, ::serializeLaunchTemplateElasticInferenceAcceleratorDocument))
                }
            }
        }
        if (input.securityGroupIds != null) {
            listField(SECURITYGROUPIDS_DESCRIPTOR) {
                for (el0 in input.securityGroupIds) {
                    serializeString(el0)
                }
            }
        }
        if (input.securityGroups != null) {
            listField(SECURITYGROUPS_DESCRIPTOR) {
                for (el0 in input.securityGroups) {
                    serializeString(el0)
                }
            }
        }
        input.instanceMarketOptions?.let { field(INSTANCEMARKETOPTIONS_DESCRIPTOR, it, ::serializeLaunchTemplateInstanceMarketOptionsRequestDocument) }
        input.creditSpecification?.let { field(CREDITSPECIFICATION_DESCRIPTOR, it, ::serializeCreditSpecificationRequestDocument) }
        input.cpuOptions?.let { field(CPUOPTIONS_DESCRIPTOR, it, ::serializeLaunchTemplateCpuOptionsRequestDocument) }
        input.capacityReservationSpecification?.let { field(CAPACITYRESERVATIONSPECIFICATION_DESCRIPTOR, it, ::serializeLaunchTemplateCapacityReservationSpecificationRequestDocument) }
        if (input.licenseSpecifications != null) {
            listField(LICENSESPECIFICATIONS_DESCRIPTOR) {
                for (el0 in input.licenseSpecifications) {
                    serializeSdkSerializable(asSdkSerializable(el0, ::serializeLaunchTemplateLicenseConfigurationRequestDocument))
                }
            }
        }
        input.hibernationOptions?.let { field(HIBERNATIONOPTIONS_DESCRIPTOR, it, ::serializeLaunchTemplateHibernationOptionsRequestDocument) }
        input.metadataOptions?.let { field(METADATAOPTIONS_DESCRIPTOR, it, ::serializeLaunchTemplateInstanceMetadataOptionsRequestDocument) }
        input.enclaveOptions?.let { field(ENCLAVEOPTIONS_DESCRIPTOR, it, ::serializeLaunchTemplateEnclaveOptionsRequestDocument) }
        input.instanceRequirements?.let { field(INSTANCEREQUIREMENTS_DESCRIPTOR, it, ::serializeInstanceRequirementsRequestDocument) }
        input.privateDnsNameOptions?.let { field(PRIVATEDNSNAMEOPTIONS_DESCRIPTOR, it, ::serializeLaunchTemplatePrivateDnsNameOptionsRequestDocument) }
        input.maintenanceOptions?.let { field(MAINTENANCEOPTIONS_DESCRIPTOR, it, ::serializeLaunchTemplateInstanceMaintenanceOptionsRequestDocument) }
        input.disableApiStop?.let { field(DISABLEAPISTOP_DESCRIPTOR, it) }
    }
}
