// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.transform

import aws.sdk.kotlin.services.ec2.model.EbsOptimizedInfo
import aws.smithy.kotlin.runtime.serde.Deserializer
import aws.smithy.kotlin.runtime.serde.SdkFieldDescriptor
import aws.smithy.kotlin.runtime.serde.SdkObjectDescriptor
import aws.smithy.kotlin.runtime.serde.SerialKind
import aws.smithy.kotlin.runtime.serde.asSdkSerializable
import aws.smithy.kotlin.runtime.serde.deserializeList
import aws.smithy.kotlin.runtime.serde.deserializeMap
import aws.smithy.kotlin.runtime.serde.deserializeStruct
import aws.smithy.kotlin.runtime.serde.field
import aws.smithy.kotlin.runtime.serde.serializeList
import aws.smithy.kotlin.runtime.serde.serializeMap
import aws.smithy.kotlin.runtime.serde.serializeStruct
import aws.smithy.kotlin.runtime.serde.xml.XmlDeserializer
import aws.smithy.kotlin.runtime.serde.xml.XmlNamespace
import aws.smithy.kotlin.runtime.serde.xml.XmlSerialName

internal fun deserializeEbsOptimizedInfoDocument(deserializer: Deserializer): EbsOptimizedInfo {
    val builder = EbsOptimizedInfo.Builder()
    val BASELINEBANDWIDTHINMBPS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, XmlSerialName("baselineBandwidthInMbps"))
    val BASELINEIOPS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, XmlSerialName("baselineIops"))
    val BASELINETHROUGHPUTINMBPS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Double, XmlSerialName("baselineThroughputInMBps"))
    val MAXIMUMBANDWIDTHINMBPS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, XmlSerialName("maximumBandwidthInMbps"))
    val MAXIMUMIOPS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Integer, XmlSerialName("maximumIops"))
    val MAXIMUMTHROUGHPUTINMBPS_DESCRIPTOR = SdkFieldDescriptor(SerialKind.Double, XmlSerialName("maximumThroughputInMBps"))
    val OBJ_DESCRIPTOR = SdkObjectDescriptor.build {
        trait(XmlSerialName("EbsOptimizedInfo"))
        trait(XmlNamespace("http://ec2.amazonaws.com/doc/2016-11-15"))
        field(BASELINEBANDWIDTHINMBPS_DESCRIPTOR)
        field(BASELINEIOPS_DESCRIPTOR)
        field(BASELINETHROUGHPUTINMBPS_DESCRIPTOR)
        field(MAXIMUMBANDWIDTHINMBPS_DESCRIPTOR)
        field(MAXIMUMIOPS_DESCRIPTOR)
        field(MAXIMUMTHROUGHPUTINMBPS_DESCRIPTOR)
    }

    deserializer.deserializeStruct(OBJ_DESCRIPTOR) {
        loop@while (true) {
            when (findNextFieldIndex()) {
                BASELINEBANDWIDTHINMBPS_DESCRIPTOR.index -> builder.baselineBandwidthInMbps = deserializeInt()
                BASELINEIOPS_DESCRIPTOR.index -> builder.baselineIops = deserializeInt()
                BASELINETHROUGHPUTINMBPS_DESCRIPTOR.index -> builder.baselineThroughputInMBps = deserializeDouble()
                MAXIMUMBANDWIDTHINMBPS_DESCRIPTOR.index -> builder.maximumBandwidthInMbps = deserializeInt()
                MAXIMUMIOPS_DESCRIPTOR.index -> builder.maximumIops = deserializeInt()
                MAXIMUMTHROUGHPUTINMBPS_DESCRIPTOR.index -> builder.maximumThroughputInMBps = deserializeDouble()
                null -> break@loop
                else -> skipValue()
            }
        }
    }
    return builder.build()
}
