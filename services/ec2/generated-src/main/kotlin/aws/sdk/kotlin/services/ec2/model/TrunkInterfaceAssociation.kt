// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Currently available in **limited preview only**. If you are interested in using this feature, contact your account manager.
 *
 * Information about an association between a branch network interface with a trunk network interface.
 */
public class TrunkInterfaceAssociation private constructor(builder: Builder) {
    /**
     * The ID of the association.
     */
    public val associationId: kotlin.String? = builder.associationId
    /**
     * The ID of the branch network interface.
     */
    public val branchInterfaceId: kotlin.String? = builder.branchInterfaceId
    /**
     * The application key when you use the GRE protocol.
     */
    public val greKey: kotlin.Int? = builder.greKey
    /**
     * The interface protocol. Valid values are `VLAN` and `GRE`.
     */
    public val interfaceProtocol: aws.sdk.kotlin.services.ec2.model.InterfaceProtocolType? = builder.interfaceProtocol
    /**
     * The tags for the trunk interface association.
     */
    public val tags: List<Tag>? = builder.tags
    /**
     * The ID of the trunk network interface.
     */
    public val trunkInterfaceId: kotlin.String? = builder.trunkInterfaceId
    /**
     * The ID of the VLAN when you use the VLAN protocol.
     */
    public val vlanId: kotlin.Int? = builder.vlanId

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.TrunkInterfaceAssociation = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("TrunkInterfaceAssociation(")
        append("associationId=$associationId,")
        append("branchInterfaceId=$branchInterfaceId,")
        append("greKey=$greKey,")
        append("interfaceProtocol=$interfaceProtocol,")
        append("tags=$tags,")
        append("trunkInterfaceId=$trunkInterfaceId,")
        append("vlanId=$vlanId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = associationId?.hashCode() ?: 0
        result = 31 * result + (branchInterfaceId?.hashCode() ?: 0)
        result = 31 * result + (greKey ?: 0)
        result = 31 * result + (interfaceProtocol?.hashCode() ?: 0)
        result = 31 * result + (tags?.hashCode() ?: 0)
        result = 31 * result + (trunkInterfaceId?.hashCode() ?: 0)
        result = 31 * result + (vlanId ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as TrunkInterfaceAssociation

        if (associationId != other.associationId) return false
        if (branchInterfaceId != other.branchInterfaceId) return false
        if (greKey != other.greKey) return false
        if (interfaceProtocol != other.interfaceProtocol) return false
        if (tags != other.tags) return false
        if (trunkInterfaceId != other.trunkInterfaceId) return false
        if (vlanId != other.vlanId) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.TrunkInterfaceAssociation = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The ID of the association.
         */
        public var associationId: kotlin.String? = null
        /**
         * The ID of the branch network interface.
         */
        public var branchInterfaceId: kotlin.String? = null
        /**
         * The application key when you use the GRE protocol.
         */
        public var greKey: kotlin.Int? = null
        /**
         * The interface protocol. Valid values are `VLAN` and `GRE`.
         */
        public var interfaceProtocol: aws.sdk.kotlin.services.ec2.model.InterfaceProtocolType? = null
        /**
         * The tags for the trunk interface association.
         */
        public var tags: List<Tag>? = null
        /**
         * The ID of the trunk network interface.
         */
        public var trunkInterfaceId: kotlin.String? = null
        /**
         * The ID of the VLAN when you use the VLAN protocol.
         */
        public var vlanId: kotlin.Int? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.TrunkInterfaceAssociation) : this() {
            this.associationId = x.associationId
            this.branchInterfaceId = x.branchInterfaceId
            this.greKey = x.greKey
            this.interfaceProtocol = x.interfaceProtocol
            this.tags = x.tags
            this.trunkInterfaceId = x.trunkInterfaceId
            this.vlanId = x.vlanId
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.TrunkInterfaceAssociation = TrunkInterfaceAssociation(this)
    }
}
