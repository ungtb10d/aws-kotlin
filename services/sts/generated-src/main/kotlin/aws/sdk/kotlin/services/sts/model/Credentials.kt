// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.sts.model

import aws.smithy.kotlin.runtime.time.Instant

/**
 * Amazon Web Services credentials for API authentication.
 */
public class Credentials private constructor(builder: Builder) {
    /**
     * The access key ID that identifies the temporary security credentials.
     */
    public val accessKeyId: kotlin.String? = builder.accessKeyId
    /**
     * The date on which the current credentials expire.
     */
    public val expiration: aws.smithy.kotlin.runtime.time.Instant? = builder.expiration
    /**
     * The secret access key that can be used to sign requests.
     */
    public val secretAccessKey: kotlin.String? = builder.secretAccessKey
    /**
     * The token that users must pass to the service API to use the temporary credentials.
     */
    public val sessionToken: kotlin.String? = builder.sessionToken

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.sts.model.Credentials = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("Credentials(")
        append("accessKeyId=$accessKeyId,")
        append("expiration=$expiration,")
        append("secretAccessKey=$secretAccessKey,")
        append("sessionToken=$sessionToken)")
    }

    override fun hashCode(): kotlin.Int {
        var result = accessKeyId?.hashCode() ?: 0
        result = 31 * result + (expiration?.hashCode() ?: 0)
        result = 31 * result + (secretAccessKey?.hashCode() ?: 0)
        result = 31 * result + (sessionToken?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as Credentials

        if (accessKeyId != other.accessKeyId) return false
        if (expiration != other.expiration) return false
        if (secretAccessKey != other.secretAccessKey) return false
        if (sessionToken != other.sessionToken) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.sts.model.Credentials = Builder(this).apply(block).build()

    public class Builder {
        /**
         * The access key ID that identifies the temporary security credentials.
         */
        public var accessKeyId: kotlin.String? = null
        /**
         * The date on which the current credentials expire.
         */
        public var expiration: aws.smithy.kotlin.runtime.time.Instant? = null
        /**
         * The secret access key that can be used to sign requests.
         */
        public var secretAccessKey: kotlin.String? = null
        /**
         * The token that users must pass to the service API to use the temporary credentials.
         */
        public var sessionToken: kotlin.String? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.sts.model.Credentials) : this() {
            this.accessKeyId = x.accessKeyId
            this.expiration = x.expiration
            this.secretAccessKey = x.secretAccessKey
            this.sessionToken = x.sessionToken
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.sts.model.Credentials = Credentials(this)
    }
}
